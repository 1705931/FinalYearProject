{
  "errors": [
    {
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\bom.py",
      "reason": "syntax error while parsing AST from file"
    },
    {
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\crlf.py",
      "reason": "syntax error while parsing AST from file"
    },
    {
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\different_encoding.py",
      "reason": "syntax error while parsing AST from file"
    },
    {
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\false_encoding.py",
      "reason": "syntax error while parsing AST from file"
    },
    {
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\py2_test_grammar.py",
      "reason": "syntax error while parsing AST from file"
    },
    {
      "filename": "cpython\\Lib\\test\\bad_coding.py",
      "reason": "syntax error while parsing AST from file"
    },
    {
      "filename": "cpython\\Lib\\test\\bad_coding2.py",
      "reason": "syntax error while parsing AST from file"
    },
    {
      "filename": "cpython\\Lib\\test\\badsyntax_3131.py",
      "reason": "syntax error while parsing AST from file"
    },
    {
      "filename": "cpython\\Lib\\test\\badsyntax_pep3120.py",
      "reason": "syntax error while parsing AST from file"
    },
    {
      "filename": "cpython\\Lib\\test\\test_with.py",
      "reason": "syntax error while parsing AST from file"
    },
    {
      "filename": "cpython\\Tools\\c-analyzer\\c_parser\\parser\\_delim.py",
      "reason": "syntax error while parsing AST from file"
    },
    {
      "filename": "cpython\\Tools\\test2to3\\maintest.py",
      "reason": "syntax error while parsing AST from file"
    },
    {
      "filename": "cpython\\Tools\\test2to3\\test2to3\\hello.py",
      "reason": "syntax error while parsing AST from file"
    },
    {
      "filename": "cpython\\Tools\\test2to3\\test\\test_foo.py",
      "reason": "syntax error while parsing AST from file"
    }
  ],
  "generated_at": "2021-02-03T14:16:43Z",
  "metrics": {
    "_totals": {
      "CONFIDENCE.HIGH": 4051.0,
      "CONFIDENCE.LOW": 11.0,
      "CONFIDENCE.MEDIUM": 37.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 128.0,
      "SEVERITY.LOW": 2876.0,
      "SEVERITY.MEDIUM": 1095.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 656545,
      "nosec": 0
    },
    "cpython\\Doc\\conf.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 120,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\dbpickle.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 49,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\email-alternative.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 37,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\email-dir.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 59,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\email-headers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 13,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\email-mime.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 15,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\email-read-alternative.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 51,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\email-simple.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 11,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\email-unpack.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 37,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\minidom-example.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 51,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\mp_newtype.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 55,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\mp_pool.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 109,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\mp_workers.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 39,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\setup.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 9,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\adapter_datetime.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 12,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\adapter_point_1.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 13,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\adapter_point_2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 13,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\collation_reverse.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 17,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\complete_statement.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 22,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\converter_point.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 30,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\countcursors.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 13,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\createdb.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 19,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\ctx_manager.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 11,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\execsql_fetchonerow.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 11,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\execsql_printall_1.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 6,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\execute_1.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 10,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\executemany_1.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 19,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\executemany_2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 12,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\executescript.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 22,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\insert_more_people.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 11,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\load_extension.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 15,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\md5func.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 10,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\mysumaggr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 17,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\parse_colnames.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\pysqlite_datetime.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 17,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\row_factory.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 12,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\rowclass.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 11,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\shared_cache.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\shortcut_methods.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 12,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\simple_tableprinter.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 18,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\sqlite3\\text_factory.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 17,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\test.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 182,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\turtle-star.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 10,
      "nosec": 0
    },
    "cpython\\Doc\\includes\\tzinfo_examples.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 108,
      "nosec": 0
    },
    "cpython\\Doc\\tools\\extensions\\asdl_highlight.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 47,
      "nosec": 0
    },
    "cpython\\Doc\\tools\\extensions\\c_annotations.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 98,
      "nosec": 0
    },
    "cpython\\Doc\\tools\\extensions\\escape4chm.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 37,
      "nosec": 0
    },
    "cpython\\Doc\\tools\\extensions\\patchlevel.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 51,
      "nosec": 0
    },
    "cpython\\Doc\\tools\\extensions\\peg_highlight.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 66,
      "nosec": 0
    },
    "cpython\\Doc\\tools\\extensions\\pyspecific.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 478,
      "nosec": 0
    },
    "cpython\\Doc\\tools\\extensions\\suspicious.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 212,
      "nosec": 0
    },
    "cpython\\Doc\\tools\\rstlint.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 180,
      "nosec": 0
    },
    "cpython\\Lib\\__future__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 105,
      "nosec": 0
    },
    "cpython\\Lib\\__phello__.foo.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\_aix_support.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 58,
      "nosec": 0
    },
    "cpython\\Lib\\_bootlocale.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 33,
      "nosec": 0
    },
    "cpython\\Lib\\_bootsubprocess.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 2.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 73,
      "nosec": 0
    },
    "cpython\\Lib\\_collections_abc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 756,
      "nosec": 0
    },
    "cpython\\Lib\\_compat_pickle.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 220,
      "nosec": 0
    },
    "cpython\\Lib\\_compression.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 109,
      "nosec": 0
    },
    "cpython\\Lib\\_markupbase.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 307,
      "nosec": 0
    },
    "cpython\\Lib\\_osx_support.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 2.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 297,
      "nosec": 0
    },
    "cpython\\Lib\\_py_abc.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 112,
      "nosec": 0
    },
    "cpython\\Lib\\_pydecimal.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4805,
      "nosec": 0
    },
    "cpython\\Lib\\_pyio.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2049,
      "nosec": 0
    },
    "cpython\\Lib\\_sitebuiltins.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 81,
      "nosec": 0
    },
    "cpython\\Lib\\_strptime.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 445,
      "nosec": 0
    },
    "cpython\\Lib\\_threading_local.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 170,
      "nosec": 0
    },
    "cpython\\Lib\\_weakrefset.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 154,
      "nosec": 0
    },
    "cpython\\Lib\\abc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 120,
      "nosec": 0
    },
    "cpython\\Lib\\aifc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 745,
      "nosec": 0
    },
    "cpython\\Lib\\antigravity.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 11,
      "nosec": 0
    },
    "cpython\\Lib\\argparse.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1787,
      "nosec": 0
    },
    "cpython\\Lib\\ast.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1284,
      "nosec": 0
    },
    "cpython\\Lib\\asynchat.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 178,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\__init__.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 37,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 99,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\base_events.py": {
      "CONFIDENCE.HIGH": 6.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1542,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\base_futures.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 45,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\base_subprocess.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 1.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 219,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\base_tasks.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 67,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\constants.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 10,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\coroutines.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 184,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\events.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 553,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\exceptions.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 38,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\format_helpers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 59,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\futures.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 322,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\locks.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 352,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\log.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\proactor_events.py": {
      "CONFIDENCE.HIGH": 10.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 10.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 670,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\protocols.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 158,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\queues.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 185,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\runners.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 57,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\selector_events.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 907,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\sslproto.py": {
      "CONFIDENCE.HIGH": 6.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 575,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\staggered.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 104,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\streams.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 7.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 542,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\subprocess.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 204,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\tasks.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 713,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\threads.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 17,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\transports.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 248,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\trsock.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 153,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\unix_events.py": {
      "CONFIDENCE.HIGH": 12.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 11.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1118,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\windows_events.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 1.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 658,
      "nosec": 0
    },
    "cpython\\Lib\\asyncio\\windows_utils.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 132,
      "nosec": 0
    },
    "cpython\\Lib\\asyncore.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 457,
      "nosec": 0
    },
    "cpython\\Lib\\base64.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 458,
      "nosec": 0
    },
    "cpython\\Lib\\bdb.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 657,
      "nosec": 0
    },
    "cpython\\Lib\\binhex.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 381,
      "nosec": 0
    },
    "cpython\\Lib\\bisect.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 83,
      "nosec": 0
    },
    "cpython\\Lib\\bz2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 277,
      "nosec": 0
    },
    "cpython\\Lib\\cProfile.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 139,
      "nosec": 0
    },
    "cpython\\Lib\\calendar.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 610,
      "nosec": 0
    },
    "cpython\\Lib\\cgi.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 792,
      "nosec": 0
    },
    "cpython\\Lib\\cgitb.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 275,
      "nosec": 0
    },
    "cpython\\Lib\\chunk.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 147,
      "nosec": 0
    },
    "cpython\\Lib\\cmd.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 346,
      "nosec": 0
    },
    "cpython\\Lib\\code.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 237,
      "nosec": 0
    },
    "cpython\\Lib\\codecs.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 769,
      "nosec": 0
    },
    "cpython\\Lib\\codeop.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 134,
      "nosec": 0
    },
    "cpython\\Lib\\collections\\__init__.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1136,
      "nosec": 0
    },
    "cpython\\Lib\\collections\\abc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\colorsys.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 118,
      "nosec": 0
    },
    "cpython\\Lib\\compileall.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 408,
      "nosec": 0
    },
    "cpython\\Lib\\concurrent\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\concurrent\\futures\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 40,
      "nosec": 0
    },
    "cpython\\Lib\\concurrent\\futures\\_base.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 501,
      "nosec": 0
    },
    "cpython\\Lib\\concurrent\\futures\\process.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 510,
      "nosec": 0
    },
    "cpython\\Lib\\concurrent\\futures\\thread.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 161,
      "nosec": 0
    },
    "cpython\\Lib\\configparser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1095,
      "nosec": 0
    },
    "cpython\\Lib\\contextlib.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 456,
      "nosec": 0
    },
    "cpython\\Lib\\contextvars.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\copy.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 246,
      "nosec": 0
    },
    "cpython\\Lib\\copyreg.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 147,
      "nosec": 0
    },
    "cpython\\Lib\\crypt.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 87,
      "nosec": 0
    },
    "cpython\\Lib\\csv.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 337,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 417,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\_aix.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 252,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\_endian.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 43,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\macholib\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 6,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\macholib\\dyld.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 123,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\macholib\\dylib.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 7.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 54,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\macholib\\framework.py": {
      "CONFIDENCE.HIGH": 10.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 10.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 57,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 11,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_anon.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 54,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_array_in_pointer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 37,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_arrays.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 172,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_as_parameter.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 151,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_bitfields.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 237,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_buffers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 61,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_bytes.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 54,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_byteswap.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 249,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_callbacks.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 225,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_cast.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 81,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_cfuncs.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 173,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_checkretval.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 25,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_delattr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 16,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_errno.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 57,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_find.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 103,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_frombuffer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 113,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_funcptr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 83,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_functions.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 290,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_incomplete.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 25,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_init.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 28,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_internals.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 64,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_keeprefs.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 122,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_libc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 25,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_loading.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 125,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_macholib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 23,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_memfunctions.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 60,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_numbers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 199,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_objects.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 51,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_parameters.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 143,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_pep3118.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 148,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_pickling.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 59,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_pointers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 146,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_prototypes.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 146,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_python_api.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 62,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_random_things.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 50,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_refcounts.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 64,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_repr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 22,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_returnfuncptrs.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 48,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_simplesubclasses.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 37,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_sizes.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 21,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_slicing.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 135,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_stringptr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 47,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_strings.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 142,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_struct_fields.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 58,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_structures.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 620,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_unaligned_structures.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 36,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_unicode.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 43,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_values.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 63,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_varsize_struct.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 37,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_win32.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 103,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\test\\test_wintypes.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 30,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\util.py": {
      "CONFIDENCE.HIGH": 9.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 9.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 291,
      "nosec": 0
    },
    "cpython\\Lib\\ctypes\\wintypes.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 163,
      "nosec": 0
    },
    "cpython\\Lib\\curses\\__init__.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 55,
      "nosec": 0
    },
    "cpython\\Lib\\curses\\ascii.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 91,
      "nosec": 0
    },
    "cpython\\Lib\\curses\\has_key.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 175,
      "nosec": 0
    },
    "cpython\\Lib\\curses\\panel.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4,
      "nosec": 0
    },
    "cpython\\Lib\\curses\\textpad.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 181,
      "nosec": 0
    },
    "cpython\\Lib\\dataclasses.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 659,
      "nosec": 0
    },
    "cpython\\Lib\\datetime.py": {
      "CONFIDENCE.HIGH": 44.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 44.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1777,
      "nosec": 0
    },
    "cpython\\Lib\\dbm\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 131,
      "nosec": 0
    },
    "cpython\\Lib\\dbm\\dumb.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 207,
      "nosec": 0
    },
    "cpython\\Lib\\dbm\\gnu.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\dbm\\ndbm.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\decimal.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 10,
      "nosec": 0
    },
    "cpython\\Lib\\difflib.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1508,
      "nosec": 0
    },
    "cpython\\Lib\\dis.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 465,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\_msvccompiler.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 393,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\archive_util.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 202,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\bcppcompiler.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 248,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\ccompiler.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 799,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\cmd.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 275,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 23,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\bdist.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 105,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\bdist_dumb.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 102,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\bdist_msi.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 570,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\bdist_rpm.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 435,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\bdist_wininst.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 265,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\build.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 107,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\build_clib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 138,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\build_ext.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 499,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\build_py.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 277,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\build_scripts.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 126,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\check.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 118,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\clean.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 59,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\config.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 273,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\install.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 432,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\install_data.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 59,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\install_egg_info.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 55,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\install_headers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 32,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\install_lib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 140,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\install_scripts.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 44,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\register.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 6.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 251,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\sdist.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 373,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\command\\upload.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 162,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\config.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 103,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\core.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 170,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\cygwinccompiler.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 237,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\debug.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\dep_util.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 66,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\dir_util.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 156,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\dist.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 899,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\errors.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 75,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\extension.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 189,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\fancy_getopt.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 308,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\file_util.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 181,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\filelist.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 243,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\log.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 57,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\msvc9compiler.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 584,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\msvccompiler.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 493,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\spawn.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 93,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\sysconfig.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 398,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 28,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\support.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 150,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_archive_util.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 321,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_bdist.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 41,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_bdist_dumb.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 70,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_bdist_msi.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 20,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_bdist_rpm.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 101,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_bdist_wininst.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_build.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 35,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_build_clib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 86,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_build_ext.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 380,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_build_py.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 138,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_build_scripts.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 86,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_check.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 116,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_clean.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 35,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_cmd.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 96,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_config.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 107,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_config_cmd.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 73,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_core.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 102,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_cygwinccompiler.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 102,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_dep_util.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 55,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_dir_util.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 106,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_dist.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 414,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_extension.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 47,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_file_util.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 95,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_filelist.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 252,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_install.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 180,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_install_data.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 53,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_install_headers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 28,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_install_lib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 86,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_install_scripts.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 66,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_log.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 37,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_msvc9compiler.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 148,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_msvccompiler.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 58,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_register.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 226,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_sdist.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 347,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_spawn.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 2.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 96,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_sysconfig.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 211,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_text_file.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 75,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_unixccompiler.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 105,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_upload.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 171,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_util.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 230,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_version.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 76,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\tests\\test_versionpredicate.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 9,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\text_file.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 203,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\unixccompiler.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 198,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\util.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 403,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\version.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 191,
      "nosec": 0
    },
    "cpython\\Lib\\distutils\\versionpredicate.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 129,
      "nosec": 0
    },
    "cpython\\Lib\\doctest.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1982,
      "nosec": 0
    },
    "cpython\\Lib\\email\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 44,
      "nosec": 0
    },
    "cpython\\Lib\\email\\_encoded_words.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 135,
      "nosec": 0
    },
    "cpython\\Lib\\email\\_header_value_parser.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2415,
      "nosec": 0
    },
    "cpython\\Lib\\email\\_parseaddr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 435,
      "nosec": 0
    },
    "cpython\\Lib\\email\\_policybase.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 286,
      "nosec": 0
    },
    "cpython\\Lib\\email\\base64mime.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 80,
      "nosec": 0
    },
    "cpython\\Lib\\email\\charset.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 291,
      "nosec": 0
    },
    "cpython\\Lib\\email\\contentmanager.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 191,
      "nosec": 0
    },
    "cpython\\Lib\\email\\encoders.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 42,
      "nosec": 0
    },
    "cpython\\Lib\\email\\errors.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 66,
      "nosec": 0
    },
    "cpython\\Lib\\email\\feedparser.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 379,
      "nosec": 0
    },
    "cpython\\Lib\\email\\generator.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 329,
      "nosec": 0
    },
    "cpython\\Lib\\email\\header.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 431,
      "nosec": 0
    },
    "cpython\\Lib\\email\\headerregistry.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 454,
      "nosec": 0
    },
    "cpython\\Lib\\email\\iterators.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 48,
      "nosec": 0
    },
    "cpython\\Lib\\email\\message.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 914,
      "nosec": 0
    },
    "cpython\\Lib\\email\\mime\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\email\\mime\\application.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 24,
      "nosec": 0
    },
    "cpython\\Lib\\email\\mime\\audio.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 53,
      "nosec": 0
    },
    "cpython\\Lib\\email\\mime\\base.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 18,
      "nosec": 0
    },
    "cpython\\Lib\\email\\mime\\image.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 33,
      "nosec": 0
    },
    "cpython\\Lib\\email\\mime\\message.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 19,
      "nosec": 0
    },
    "cpython\\Lib\\email\\mime\\multipart.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 28,
      "nosec": 0
    },
    "cpython\\Lib\\email\\mime\\nonmultipart.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 9,
      "nosec": 0
    },
    "cpython\\Lib\\email\\mime\\text.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 23,
      "nosec": 0
    },
    "cpython\\Lib\\email\\parser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 95,
      "nosec": 0
    },
    "cpython\\Lib\\email\\policy.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 174,
      "nosec": 0
    },
    "cpython\\Lib\\email\\quoprimime.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 195,
      "nosec": 0
    },
    "cpython\\Lib\\email\\utils.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 269,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 118,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\aliases.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 340,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\ascii.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 31,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\base64_codec.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 40,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\big5.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\big5hkscs.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\bz2_codec.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 59,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\charmap.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 44,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp037.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp1006.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp1026.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp1125.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 675,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp1140.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp1250.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp1251.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp1252.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp1253.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp1254.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp1255.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp1256.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp1257.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp1258.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp273.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp424.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp437.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 675,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp500.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp720.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 289,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp737.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 675,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp775.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 675,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp850.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 675,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp852.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 675,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp855.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 675,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp856.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp857.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 671,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp858.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 675,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp860.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 675,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp861.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 675,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp862.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 675,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp863.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 675,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp864.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 667,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp865.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 675,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp866.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 675,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp869.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 666,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp874.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp875.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp932.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp949.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\cp950.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\euc_jis_2004.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\euc_jisx0213.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\euc_jp.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\euc_kr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\gb18030.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\gb2312.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\gbk.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\hex_codec.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 40,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\hp_roman8.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 291,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\hz.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\idna.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 203,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso2022_jp.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso2022_jp_1.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso2022_jp_2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso2022_jp_2004.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso2022_jp_3.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso2022_jp_ext.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso2022_kr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso8859_1.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso8859_10.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso8859_11.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso8859_13.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso8859_14.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso8859_15.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso8859_16.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso8859_2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso8859_3.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso8859_4.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso8859_5.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso8859_6.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso8859_7.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso8859_8.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\iso8859_9.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\johab.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\koi8_r.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\koi8_t.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\koi8_u.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\kz1048.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\latin_1.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 31,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\mac_arabic.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 675,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\mac_croatian.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\mac_cyrillic.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\mac_farsi.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\mac_greek.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\mac_iceland.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\mac_latin2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 290,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\mac_roman.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\mac_romanian.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\mac_turkish.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\mbcs.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 29,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\oem.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\palmos.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 288,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\ptcp154.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 290,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\punycode.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 198,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\quopri_codec.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 44,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\raw_unicode_escape.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 28,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\rot_13.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 91,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\shift_jis.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\shift_jis_2004.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\shift_jisx0213.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\tis_620.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\undefined.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 33,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\unicode_escape.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 28,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\utf_16.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 117,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\utf_16_be.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 27,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\utf_16_le.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 27,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\utf_32.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 116,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\utf_32_be.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\utf_32_le.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\utf_7.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\utf_8.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 27,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\utf_8_sig.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 100,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\uu_codec.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 75,
      "nosec": 0
    },
    "cpython\\Lib\\encodings\\zlib_codec.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 58,
      "nosec": 0
    },
    "cpython\\Lib\\ensurepip\\__init__.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 157,
      "nosec": 0
    },
    "cpython\\Lib\\ensurepip\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4,
      "nosec": 0
    },
    "cpython\\Lib\\ensurepip\\_bundled\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\ensurepip\\_uninstall.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 24,
      "nosec": 0
    },
    "cpython\\Lib\\enum.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 693,
      "nosec": 0
    },
    "cpython\\Lib\\filecmp.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 238,
      "nosec": 0
    },
    "cpython\\Lib\\fileinput.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 370,
      "nosec": 0
    },
    "cpython\\Lib\\fnmatch.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 142,
      "nosec": 0
    },
    "cpython\\Lib\\formatter.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 374,
      "nosec": 0
    },
    "cpython\\Lib\\fractions.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 465,
      "nosec": 0
    },
    "cpython\\Lib\\ftplib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 4.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 796,
      "nosec": 0
    },
    "cpython\\Lib\\functools.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 722,
      "nosec": 0
    },
    "cpython\\Lib\\genericpath.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 99,
      "nosec": 0
    },
    "cpython\\Lib\\getopt.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 161,
      "nosec": 0
    },
    "cpython\\Lib\\getpass.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 139,
      "nosec": 0
    },
    "cpython\\Lib\\gettext.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 588,
      "nosec": 0
    },
    "cpython\\Lib\\glob.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 181,
      "nosec": 0
    },
    "cpython\\Lib\\graphlib.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 169,
      "nosec": 0
    },
    "cpython\\Lib\\gzip.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 476,
      "nosec": 0
    },
    "cpython\\Lib\\hashlib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 185,
      "nosec": 0
    },
    "cpython\\Lib\\heapq.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 392,
      "nosec": 0
    },
    "cpython\\Lib\\hmac.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 157,
      "nosec": 0
    },
    "cpython\\Lib\\html\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 109,
      "nosec": 0
    },
    "cpython\\Lib\\html\\entities.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2495,
      "nosec": 0
    },
    "cpython\\Lib\\html\\parser.py": {
      "CONFIDENCE.HIGH": 6.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 352,
      "nosec": 0
    },
    "cpython\\Lib\\http\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 134,
      "nosec": 0
    },
    "cpython\\Lib\\http\\client.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1028,
      "nosec": 0
    },
    "cpython\\Lib\\http\\cookiejar.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1634,
      "nosec": 0
    },
    "cpython\\Lib\\http\\cookies.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 399,
      "nosec": 0
    },
    "cpython\\Lib\\http\\server.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 1.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 967,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 6,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\autocomplete.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 179,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\autocomplete_w.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 367,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\autoexpand.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 83,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\browser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 196,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\calltip.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 137,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\calltip_w.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 153,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\codecontext.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 210,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\colorizer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 286,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\config.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 767,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\config_key.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 278,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\configdialog.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1985,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\debugger.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 423,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\debugger_r.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 269,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\debugobj.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 119,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\debugobj_r.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 28,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\delegator.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 24,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\dynoption.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 48,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\editor.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 2.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1313,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\filelist.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 111,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\format.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 339,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\grep.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 179,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\help.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 248,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\help_about.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 170,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\history.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 93,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\hyperparser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 204,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 7,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle.pyw": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 15,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 15,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\htest.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 378,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\mock_idle.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 50,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\mock_tk.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 237,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\template.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 20,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_autocomplete.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 218,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_autocomplete_w.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 23,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_autoexpand.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 106,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_browser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 187,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_calltip.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 201,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_calltip_w.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 22,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_codecontext.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 330,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_colorizer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 319,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_config.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 582,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_config_key.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 224,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_configdialog.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1193,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_debugger.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 19,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_debugger_r.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 10,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_debugobj.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 37,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_debugobj_r.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_delegator.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 23,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_editmenu.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 62,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_editor.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 174,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_filelist.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_format.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 504,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_grep.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 106,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_help.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_help_about.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 147,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_history.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 135,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_hyperparser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 206,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_iomenu.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 40,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_macosx.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 86,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_mainmenu.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 13,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_multicall.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 34,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_outwin.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 127,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_parenmatch.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 90,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_pathbrowser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 65,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_percolator.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 94,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_pyparse.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 369,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_pyshell.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 38,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_query.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 350,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_redirector.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 93,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_replace.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 231,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_rpc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 19,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_run.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 300,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_runscript.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 25,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_scrolledlist.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 18,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_search.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 51,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_searchbase.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 115,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_searchengine.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 220,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_sidebar.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 274,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_squeezer.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 338,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_stackviewer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 34,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_statusbar.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 32,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_text.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 169,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_textview.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 172,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_tooltip.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 123,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_tree.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 44,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_undo.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 103,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_warning.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 52,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_window.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 29,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\idle_test\\test_zoomheight.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 29,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\iomenu.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 364,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\macosx.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 205,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\mainmenu.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 102,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\multicall.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 354,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\outwin.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 141,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\parenmatch.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 137,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\pathbrowser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 90,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\percolator.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 80,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\pyparse.py": {
      "CONFIDENCE.HIGH": 14.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 14.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 425,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\pyshell.py": {
      "CONFIDENCE.HIGH": 14.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 11.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1279,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\query.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 318,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\redirector.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 138,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\replace.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 260,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\rpc.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 513,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\run.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 499,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\runscript.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 182,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\scrolledlist.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 118,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\search.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 133,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\searchbase.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 172,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\searchengine.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 197,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\sidebar.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 243,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\squeezer.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 233,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\stackviewer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 125,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\statusbar.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 40,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\textview.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 149,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\tooltip.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 138,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\tree.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 405,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\undo.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 260,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\window.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 71,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\zoomheight.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 73,
      "nosec": 0
    },
    "cpython\\Lib\\idlelib\\zzdummy.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 21,
      "nosec": 0
    },
    "cpython\\Lib\\imaplib.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1154,
      "nosec": 0
    },
    "cpython\\Lib\\imghdr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 122,
      "nosec": 0
    },
    "cpython\\Lib\\imp.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 251,
      "nosec": 0
    },
    "cpython\\Lib\\importlib\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 128,
      "nosec": 0
    },
    "cpython\\Lib\\importlib\\_abc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 31,
      "nosec": 0
    },
    "cpython\\Lib\\importlib\\_bootstrap.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 865,
      "nosec": 0
    },
    "cpython\\Lib\\importlib\\_bootstrap_external.py": {
      "CONFIDENCE.HIGH": 6.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1095,
      "nosec": 0
    },
    "cpython\\Lib\\importlib\\_common.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 80,
      "nosec": 0
    },
    "cpython\\Lib\\importlib\\abc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 314,
      "nosec": 0
    },
    "cpython\\Lib\\importlib\\machinery.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 17,
      "nosec": 0
    },
    "cpython\\Lib\\importlib\\metadata.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 474,
      "nosec": 0
    },
    "cpython\\Lib\\importlib\\readers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 30,
      "nosec": 0
    },
    "cpython\\Lib\\importlib\\resources.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 137,
      "nosec": 0
    },
    "cpython\\Lib\\importlib\\util.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 228,
      "nosec": 0
    },
    "cpython\\Lib\\inspect.py": {
      "CONFIDENCE.HIGH": 16.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 14.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2429,
      "nosec": 0
    },
    "cpython\\Lib\\io.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 69,
      "nosec": 0
    },
    "cpython\\Lib\\ipaddress.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1685,
      "nosec": 0
    },
    "cpython\\Lib\\json\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 286,
      "nosec": 0
    },
    "cpython\\Lib\\json\\decoder.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 297,
      "nosec": 0
    },
    "cpython\\Lib\\json\\encoder.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 369,
      "nosec": 0
    },
    "cpython\\Lib\\json\\scanner.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 64,
      "nosec": 0
    },
    "cpython\\Lib\\json\\tool.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 69,
      "nosec": 0
    },
    "cpython\\Lib\\keyword.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 52,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 6,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\btm_matcher.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 126,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\btm_utils.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 220,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixer_base.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 137,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixer_util.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 362,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_apply.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 53,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_asserts.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_basestring.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_buffer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 12,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_dict.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 84,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_except.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 60,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_exec.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 27,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_execfile.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 37,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_exitfunc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 57,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_filter.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 76,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_funcattrs.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_future.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 13,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_getcwdu.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 13,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_has_key.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 90,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_idioms.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 120,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_import.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 77,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_imports.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 108,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_imports2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 10,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_input.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 16,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_intern.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 27,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_isinstance.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 43,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_itertools.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 31,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_itertools_imports.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 46,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_long.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 11,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_map.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 90,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_metaclass.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 165,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_methodattrs.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 18,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_ne.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 11,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_next.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 76,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_nonzero.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 16,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_numliterals.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 16,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_operator.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 77,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_paren.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 34,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_print.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 63,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_raise.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 60,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_raw_input.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 11,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_reduce.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 24,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_reload.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 27,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_renames.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 40,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_repr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 13,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_set_literal.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 36,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_standarderror.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 10,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_sys_exc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 21,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_throw.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 42,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_tuple_params.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 129,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_types.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 45,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_unicode.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 33,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_urllib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 168,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_ws_comma.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 31,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_xrange.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 53,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_xreadlines.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 17,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\fixes\\fix_zip.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 34,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\main.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 235,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\patcomp.py": {
      "CONFIDENCE.HIGH": 9.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 9.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 157,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\pgen2\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\pgen2\\conv.py": {
      "CONFIDENCE.HIGH": 35.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 33.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 215,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\pgen2\\driver.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 138,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\pgen2\\grammar.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 153,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\pgen2\\literals.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 50,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\pgen2\\parse.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 150,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\pgen2\\pgen.py": {
      "CONFIDENCE.HIGH": 16.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 15.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 319,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\pgen2\\token.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 73,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\pgen2\\tokenize.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 465,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\pygram.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 24,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\pytree.py": {
      "CONFIDENCE.HIGH": 19.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 19.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 680,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\refactor.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 591,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\data\\bom.py": {
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\data\\crlf.py": {
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\data\\different_encoding.py": {
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\data\\false_encoding.py": {
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\data\\fixers\\bad_order.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\data\\fixers\\myfixes\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\data\\fixers\\myfixes\\fix_explicit.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\data\\fixers\\myfixes\\fix_first.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\data\\fixers\\myfixes\\fix_last.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\data\\fixers\\myfixes\\fix_parrot.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 10,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\data\\fixers\\myfixes\\fix_preorder.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\data\\fixers\\no_fixer_cls.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\data\\fixers\\parrot_example.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py": {
      "CONFIDENCE.HIGH": 320.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 320.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2659,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\data\\py2_test_grammar.py": {
      "loc": 747,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\data\\py3_test_grammar.py": {
      "CONFIDENCE.HIGH": 9.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 733,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\pytree_idempotency.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 70,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\support.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 45,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\test_all_fixers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 16,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\test_fixers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3702,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\test_main.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 121,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\test_parser.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 498,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\test_pytree.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 385,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\test_refactor.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 285,
      "nosec": 0
    },
    "cpython\\Lib\\lib2to3\\tests\\test_util.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 495,
      "nosec": 0
    },
    "cpython\\Lib\\linecache.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 135,
      "nosec": 0
    },
    "cpython\\Lib\\locale.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1413,
      "nosec": 0
    },
    "cpython\\Lib\\logging\\__init__.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1751,
      "nosec": 0
    },
    "cpython\\Lib\\logging\\config.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 730,
      "nosec": 0
    },
    "cpython\\Lib\\logging\\handlers.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1262,
      "nosec": 0
    },
    "cpython\\Lib\\lzma.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 279,
      "nosec": 0
    },
    "cpython\\Lib\\mailbox.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1837,
      "nosec": 0
    },
    "cpython\\Lib\\mailcap.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 2.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 227,
      "nosec": 0
    },
    "cpython\\Lib\\mimetypes.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 516,
      "nosec": 0
    },
    "cpython\\Lib\\modulefinder.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 554,
      "nosec": 0
    },
    "cpython\\Lib\\msilib\\__init__.py": {
      "CONFIDENCE.HIGH": 10.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 9.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 414,
      "nosec": 0
    },
    "cpython\\Lib\\msilib\\schema.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 920,
      "nosec": 0
    },
    "cpython\\Lib\\msilib\\sequence.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 121,
      "nosec": 0
    },
    "cpython\\Lib\\msilib\\text.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 126,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\connection.py": {
      "CONFIDENCE.HIGH": 12.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 10.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 767,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\context.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 269,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\dummy\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 81,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\dummy\\connection.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 44,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\forkserver.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 258,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\heap.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 220,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\managers.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1061,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\pool.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 736,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\popen_fork.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 64,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\popen_forkserver.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 51,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\popen_spawn_posix.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 54,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\popen_spawn_win32.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 86,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\process.py": {
      "CONFIDENCE.HIGH": 9.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 9.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 318,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\queues.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 283,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\reduction.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 211,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\resource_sharer.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 125,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\resource_tracker.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 160,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\shared_memory.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 429,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\sharedctypes.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 175,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\spawn.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 203,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\synchronize.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 270,
      "nosec": 0
    },
    "cpython\\Lib\\multiprocessing\\util.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 318,
      "nosec": 0
    },
    "cpython\\Lib\\netrc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 123,
      "nosec": 0
    },
    "cpython\\Lib\\nntplib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 859,
      "nosec": 0
    },
    "cpython\\Lib\\ntpath.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 548,
      "nosec": 0
    },
    "cpython\\Lib\\nturl2path.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 47,
      "nosec": 0
    },
    "cpython\\Lib\\numbers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 282,
      "nosec": 0
    },
    "cpython\\Lib\\opcode.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 167,
      "nosec": 0
    },
    "cpython\\Lib\\operator.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 368,
      "nosec": 0
    },
    "cpython\\Lib\\optparse.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1239,
      "nosec": 0
    },
    "cpython\\Lib\\os.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 2.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 840,
      "nosec": 0
    },
    "cpython\\Lib\\pathlib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1216,
      "nosec": 0
    },
    "cpython\\Lib\\pdb.py": {
      "CONFIDENCE.HIGH": 11.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 5.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1391,
      "nosec": 0
    },
    "cpython\\Lib\\pickle.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1407,
      "nosec": 0
    },
    "cpython\\Lib\\pickletools.py": {
      "CONFIDENCE.HIGH": 34.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 34.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2206,
      "nosec": 0
    },
    "cpython\\Lib\\pipes.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 3.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 193,
      "nosec": 0
    },
    "cpython\\Lib\\pkgutil.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 550,
      "nosec": 0
    },
    "cpython\\Lib\\platform.py": {
      "CONFIDENCE.HIGH": 8.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 7.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 805,
      "nosec": 0
    },
    "cpython\\Lib\\plistlib.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 647,
      "nosec": 0
    },
    "cpython\\Lib\\poplib.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 333,
      "nosec": 0
    },
    "cpython\\Lib\\posixpath.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 383,
      "nosec": 0
    },
    "cpython\\Lib\\pprint.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 529,
      "nosec": 0
    },
    "cpython\\Lib\\profile.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 379,
      "nosec": 0
    },
    "cpython\\Lib\\pstats.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 644,
      "nosec": 0
    },
    "cpython\\Lib\\pty.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 1.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 138,
      "nosec": 0
    },
    "cpython\\Lib\\py_compile.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 178,
      "nosec": 0
    },
    "cpython\\Lib\\pyclbr.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 328,
      "nosec": 0
    },
    "cpython\\Lib\\pydoc.py": {
      "CONFIDENCE.HIGH": 13.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 5.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2380,
      "nosec": 0
    },
    "cpython\\Lib\\pydoc_data\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\pydoc_data\\topics.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 13964,
      "nosec": 0
    },
    "cpython\\Lib\\queue.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 236,
      "nosec": 0
    },
    "cpython\\Lib\\quopri.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 193,
      "nosec": 0
    },
    "cpython\\Lib\\random.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 587,
      "nosec": 0
    },
    "cpython\\Lib\\re.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 300,
      "nosec": 0
    },
    "cpython\\Lib\\reprlib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 130,
      "nosec": 0
    },
    "cpython\\Lib\\rlcompleter.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 169,
      "nosec": 0
    },
    "cpython\\Lib\\runpy.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 234,
      "nosec": 0
    },
    "cpython\\Lib\\sched.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 134,
      "nosec": 0
    },
    "cpython\\Lib\\secrets.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 50,
      "nosec": 0
    },
    "cpython\\Lib\\selectors.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 473,
      "nosec": 0
    },
    "cpython\\Lib\\shelve.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 6.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 184,
      "nosec": 0
    },
    "cpython\\Lib\\shlex.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 305,
      "nosec": 0
    },
    "cpython\\Lib\\shutil.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1113,
      "nosec": 0
    },
    "cpython\\Lib\\signal.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 63,
      "nosec": 0
    },
    "cpython\\Lib\\site.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 499,
      "nosec": 0
    },
    "cpython\\Lib\\smtpd.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 793,
      "nosec": 0
    },
    "cpython\\Lib\\smtplib.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 878,
      "nosec": 0
    },
    "cpython\\Lib\\sndhdr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 193,
      "nosec": 0
    },
    "cpython\\Lib\\socket.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 787,
      "nosec": 0
    },
    "cpython\\Lib\\socketserver.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 566,
      "nosec": 0
    },
    "cpython\\Lib\\sqlite3\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\sqlite3\\dbapi2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 44,
      "nosec": 0
    },
    "cpython\\Lib\\sqlite3\\dump.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 45,
      "nosec": 0
    },
    "cpython\\Lib\\sqlite3\\test\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\sqlite3\\test\\backup.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 131,
      "nosec": 0
    },
    "cpython\\Lib\\sqlite3\\test\\dbapi.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 745,
      "nosec": 0
    },
    "cpython\\Lib\\sqlite3\\test\\dump.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 71,
      "nosec": 0
    },
    "cpython\\Lib\\sqlite3\\test\\factory.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 232,
      "nosec": 0
    },
    "cpython\\Lib\\sqlite3\\test\\hooks.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 225,
      "nosec": 0
    },
    "cpython\\Lib\\sqlite3\\test\\regression.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 321,
      "nosec": 0
    },
    "cpython\\Lib\\sqlite3\\test\\transactions.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 150,
      "nosec": 0
    },
    "cpython\\Lib\\sqlite3\\test\\types.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 334,
      "nosec": 0
    },
    "cpython\\Lib\\sqlite3\\test\\userfunctions.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 399,
      "nosec": 0
    },
    "cpython\\Lib\\sre_compile.py": {
      "CONFIDENCE.HIGH": 6.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 656,
      "nosec": 0
    },
    "cpython\\Lib\\sre_constants.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 194,
      "nosec": 0
    },
    "cpython\\Lib\\sre_parse.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 925,
      "nosec": 0
    },
    "cpython\\Lib\\ssl.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1183,
      "nosec": 0
    },
    "cpython\\Lib\\stat.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 150,
      "nosec": 0
    },
    "cpython\\Lib\\statistics.py": {
      "CONFIDENCE.HIGH": 8.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 8.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 800,
      "nosec": 0
    },
    "cpython\\Lib\\string.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 180,
      "nosec": 0
    },
    "cpython\\Lib\\stringprep.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 233,
      "nosec": 0
    },
    "cpython\\Lib\\struct.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 9,
      "nosec": 0
    },
    "cpython\\Lib\\subprocess.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 1.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1527,
      "nosec": 0
    },
    "cpython\\Lib\\sunau.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 454,
      "nosec": 0
    },
    "cpython\\Lib\\symtable.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 257,
      "nosec": 0
    },
    "cpython\\Lib\\sysconfig.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 531,
      "nosec": 0
    },
    "cpython\\Lib\\tabnanny.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 206,
      "nosec": 0
    },
    "cpython\\Lib\\tarfile.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1991,
      "nosec": 0
    },
    "cpython\\Lib\\telnetlib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 552,
      "nosec": 0
    },
    "cpython\\Lib\\tempfile.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 605,
      "nosec": 0
    },
    "cpython\\Lib\\test\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\_test_multiprocessing.py": {
      "CONFIDENCE.HIGH": 58.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 56.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4296,
      "nosec": 0
    },
    "cpython\\Lib\\test\\ann_module.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 42,
      "nosec": 0
    },
    "cpython\\Lib\\test\\ann_module2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 25,
      "nosec": 0
    },
    "cpython\\Lib\\test\\ann_module3.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    },
    "cpython\\Lib\\test\\audiotests.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 276,
      "nosec": 0
    },
    "cpython\\Lib\\test\\audit-tests.py": {
      "CONFIDENCE.HIGH": 11.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 7.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 225,
      "nosec": 0
    },
    "cpython\\Lib\\test\\autotest.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\bad_coding.py": {
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\bad_coding2.py": {
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\bad_getattr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\bad_getattr2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 5,
      "nosec": 0
    },
    "cpython\\Lib\\test\\bad_getattr3.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 5,
      "nosec": 0
    },
    "cpython\\Lib\\test\\badsyntax_3131.py": {
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\badsyntax_future10.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\badsyntax_future3.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Lib\\test\\badsyntax_future4.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Lib\\test\\badsyntax_future5.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 9,
      "nosec": 0
    },
    "cpython\\Lib\\test\\badsyntax_future6.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Lib\\test\\badsyntax_future7.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Lib\\test\\badsyntax_future8.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 7,
      "nosec": 0
    },
    "cpython\\Lib\\test\\badsyntax_future9.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 7,
      "nosec": 0
    },
    "cpython\\Lib\\test\\badsyntax_pep3120.py": {
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\bisect_cmd.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 141,
      "nosec": 0
    },
    "cpython\\Lib\\test\\coding20731.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\crashers\\bogus_code_obj.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    },
    "cpython\\Lib\\test\\crashers\\gc_inspection.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 23,
      "nosec": 0
    },
    "cpython\\Lib\\test\\crashers\\infinite_loop_re.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 9,
      "nosec": 0
    },
    "cpython\\Lib\\test\\crashers\\mutation_inside_cyclegc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    },
    "cpython\\Lib\\test\\crashers\\recursive_call.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 5,
      "nosec": 0
    },
    "cpython\\Lib\\test\\crashers\\trace_at_recursion_limit.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 20,
      "nosec": 0
    },
    "cpython\\Lib\\test\\crashers\\underlying_dict.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 16,
      "nosec": 0
    },
    "cpython\\Lib\\test\\curses_tests.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 30,
      "nosec": 0
    },
    "cpython\\Lib\\test\\dataclass_module_1.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 22,
      "nosec": 0
    },
    "cpython\\Lib\\test\\dataclass_module_2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 22,
      "nosec": 0
    },
    "cpython\\Lib\\test\\dataclass_textanno.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 6,
      "nosec": 0
    },
    "cpython\\Lib\\test\\datetimetester.py": {
      "CONFIDENCE.HIGH": 28.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 21.0,
      "SEVERITY.MEDIUM": 7.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4725,
      "nosec": 0
    },
    "cpython\\Lib\\test\\dis_module.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\doctest_aliases.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 9,
      "nosec": 0
    },
    "cpython\\Lib\\test\\double_const.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    },
    "cpython\\Lib\\test\\dtracedata\\call_stack.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 20,
      "nosec": 0
    },
    "cpython\\Lib\\test\\dtracedata\\gc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 11,
      "nosec": 0
    },
    "cpython\\Lib\\test\\dtracedata\\instance.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 21,
      "nosec": 0
    },
    "cpython\\Lib\\test\\dtracedata\\line.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 15,
      "nosec": 0
    },
    "cpython\\Lib\\test\\eintrdata\\eintr_tester.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 412,
      "nosec": 0
    },
    "cpython\\Lib\\test\\encoded_modules\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 6,
      "nosec": 0
    },
    "cpython\\Lib\\test\\encoded_modules\\module_iso_8859_1.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\encoded_modules\\module_koi8_r.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\final_a.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    },
    "cpython\\Lib\\test\\final_b.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    },
    "cpython\\Lib\\test\\fork_wait.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 62,
      "nosec": 0
    },
    "cpython\\Lib\\test\\future_test1.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 7,
      "nosec": 0
    },
    "cpython\\Lib\\test\\future_test2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 7,
      "nosec": 0
    },
    "cpython\\Lib\\test\\gdb_sample.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 7,
      "nosec": 0
    },
    "cpython\\Lib\\test\\good_getattr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Lib\\test\\imp_dummy.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\inspect_fodder.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 63,
      "nosec": 0
    },
    "cpython\\Lib\\test\\inspect_fodder2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 167,
      "nosec": 0
    },
    "cpython\\Lib\\test\\leakers\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\leakers\\test_ctypes.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 10,
      "nosec": 0
    },
    "cpython\\Lib\\test\\leakers\\test_selftype.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 9,
      "nosec": 0
    },
    "cpython\\Lib\\test\\libregrtest\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\libregrtest\\cmdline.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 341,
      "nosec": 0
    },
    "cpython\\Lib\\test\\libregrtest\\main.py": {
      "CONFIDENCE.HIGH": 6.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 2.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 530,
      "nosec": 0
    },
    "cpython\\Lib\\test\\libregrtest\\pgo.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 48,
      "nosec": 0
    },
    "cpython\\Lib\\test\\libregrtest\\refleak.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 203,
      "nosec": 0
    },
    "cpython\\Lib\\test\\libregrtest\\runtest.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 246,
      "nosec": 0
    },
    "cpython\\Lib\\test\\libregrtest\\runtest_mp.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 342,
      "nosec": 0
    },
    "cpython\\Lib\\test\\libregrtest\\save_env.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 224,
      "nosec": 0
    },
    "cpython\\Lib\\test\\libregrtest\\setup.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 73,
      "nosec": 0
    },
    "cpython\\Lib\\test\\libregrtest\\utils.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 63,
      "nosec": 0
    },
    "cpython\\Lib\\test\\libregrtest\\win_utils.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 124,
      "nosec": 0
    },
    "cpython\\Lib\\test\\list_tests.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 453,
      "nosec": 0
    },
    "cpython\\Lib\\test\\lock_tests.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 822,
      "nosec": 0
    },
    "cpython\\Lib\\test\\make_ssl_certs.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 226,
      "nosec": 0
    },
    "cpython\\Lib\\test\\mapping_tests.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 529,
      "nosec": 0
    },
    "cpython\\Lib\\test\\memory_watchdog.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 20,
      "nosec": 0
    },
    "cpython\\Lib\\test\\mock_socket.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 111,
      "nosec": 0
    },
    "cpython\\Lib\\test\\mod_generics_cache.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 38,
      "nosec": 0
    },
    "cpython\\Lib\\test\\mp_fork_bomb.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 11,
      "nosec": 0
    },
    "cpython\\Lib\\test\\mp_preload.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 12,
      "nosec": 0
    },
    "cpython\\Lib\\test\\multibytecodec_support.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 321,
      "nosec": 0
    },
    "cpython\\Lib\\test\\pickletester.py": {
      "CONFIDENCE.HIGH": 18.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 13.0,
      "SEVERITY.MEDIUM": 5.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2947,
      "nosec": 0
    },
    "cpython\\Lib\\test\\profilee.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 79,
      "nosec": 0
    },
    "cpython\\Lib\\test\\pyclbr_input.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 17,
      "nosec": 0
    },
    "cpython\\Lib\\test\\pydoc_mod.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 31,
      "nosec": 0
    },
    "cpython\\Lib\\test\\pydocfodder.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 190,
      "nosec": 0
    },
    "cpython\\Lib\\test\\pythoninfo.py": {
      "CONFIDENCE.HIGH": 6.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 641,
      "nosec": 0
    },
    "cpython\\Lib\\test\\re_tests.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 431,
      "nosec": 0
    },
    "cpython\\Lib\\test\\regrtest.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 22,
      "nosec": 0
    },
    "cpython\\Lib\\test\\relimport.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\reperf.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 20,
      "nosec": 0
    },
    "cpython\\Lib\\test\\sample_doctest.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 59,
      "nosec": 0
    },
    "cpython\\Lib\\test\\sample_doctest_no_docstrings.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\sample_doctest_no_doctests.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 9,
      "nosec": 0
    },
    "cpython\\Lib\\test\\seq_tests.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 353,
      "nosec": 0
    },
    "cpython\\Lib\\test\\signalinterproctester.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 59,
      "nosec": 0
    },
    "cpython\\Lib\\test\\sortperf.py": {
      "CONFIDENCE.HIGH": 8.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 7.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 127,
      "nosec": 0
    },
    "cpython\\Lib\\test\\ssl_servers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 165,
      "nosec": 0
    },
    "cpython\\Lib\\test\\ssltests.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 31,
      "nosec": 0
    },
    "cpython\\Lib\\test\\string_tests.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1144,
      "nosec": 0
    },
    "cpython\\Lib\\test\\subprocessdata\\fd_status.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 30,
      "nosec": 0
    },
    "cpython\\Lib\\test\\subprocessdata\\input_reader.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 5,
      "nosec": 0
    },
    "cpython\\Lib\\test\\subprocessdata\\qcat.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 5,
      "nosec": 0
    },
    "cpython\\Lib\\test\\subprocessdata\\qgrep.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Lib\\test\\subprocessdata\\sigchild_ignore.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 10,
      "nosec": 0
    },
    "cpython\\Lib\\test\\support\\__init__.py": {
      "CONFIDENCE.HIGH": 15.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 15.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1441,
      "nosec": 0
    },
    "cpython\\Lib\\test\\support\\bytecode_helper.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 35,
      "nosec": 0
    },
    "cpython\\Lib\\test\\support\\hashlib_helper.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 32,
      "nosec": 0
    },
    "cpython\\Lib\\test\\support\\import_helper.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 169,
      "nosec": 0
    },
    "cpython\\Lib\\test\\support\\interpreters.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 137,
      "nosec": 0
    },
    "cpython\\Lib\\test\\support\\logging_helper.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 20,
      "nosec": 0
    },
    "cpython\\Lib\\test\\support\\os_helper.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 434,
      "nosec": 0
    },
    "cpython\\Lib\\test\\support\\script_helper.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 194,
      "nosec": 0
    },
    "cpython\\Lib\\test\\support\\socket_helper.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 223,
      "nosec": 0
    },
    "cpython\\Lib\\test\\support\\testresult.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 170,
      "nosec": 0
    },
    "cpython\\Lib\\test\\support\\threading_helper.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 156,
      "nosec": 0
    },
    "cpython\\Lib\\test\\support\\warnings_helper.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 144,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test___all__.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 94,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test___future__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 48,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test__locale.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 157,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test__opcode.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 58,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test__osx_support.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 290,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test__xxsubinterpreters.py": {
      "CONFIDENCE.HIGH": 10.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 7.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1846,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_abc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 551,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_abstract_numbers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 34,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_aifc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 384,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_annotations.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 217,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_argparse.py": {
      "CONFIDENCE.HIGH": 6.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4148,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_array.py": {
      "CONFIDENCE.HIGH": 14.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 13.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1316,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asdl_parser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 93,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_ast.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1792,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncgen.py": {
      "CONFIDENCE.HIGH": 13.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 8.0,
      "SEVERITY.MEDIUM": 5.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 950,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asynchat.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 197,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 6,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\echo.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 7,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\echo2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 5,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\echo3.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 10,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\functional.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 210,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_base_events.py": {
      "CONFIDENCE.HIGH": 11.0,
      "CONFIDENCE.LOW": 2.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 11.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1640,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_buffered_proto.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 59,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_context.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 24,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_events.py": {
      "CONFIDENCE.HIGH": 22.0,
      "CONFIDENCE.LOW": 1.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 22.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2137,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_futures.py": {
      "CONFIDENCE.HIGH": 9.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 9.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 664,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_locks.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 755,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_pep492.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 164,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_proactor_events.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 821,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_protocols.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 49,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_queues.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 506,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_runners.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 133,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_selector_events.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1053,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_sendfile.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 435,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_server.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 97,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_sock_lowlevel.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 389,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_sslproto.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 566,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_streams.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 742,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_subprocess.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 554,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_tasks.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2758,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_threads.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 65,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_transports.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 70,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_unix_events.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1512,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_windows_events.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 188,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\test_windows_utils.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 99,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncio\\utils.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 437,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_asyncore.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 600,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_atexit.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 165,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_audioop.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 510,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_audit.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 97,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_augassign.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 273,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_base64.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 630,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_baseexception.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 146,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_bdb.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 969,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_bigaddrspace.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 70,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_bigmem.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 976,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_binascii.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 358,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_binhex.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 41,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_binop.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 371,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_bisect.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 323,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_bool.py": {
      "CONFIDENCE.HIGH": 8.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 6.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 298,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_buffer.py": {
      "CONFIDENCE.HIGH": 47.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 47.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3265,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_bufio.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 44,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_builtin.py": {
      "CONFIDENCE.HIGH": 46.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 6.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 35.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1928,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_bytes.py": {
      "CONFIDENCE.HIGH": 12.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 11.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1592,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_bz2.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 817,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_c_locale_coercion.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 297,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_calendar.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 785,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_call.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 509,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_capi.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 677,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_cgi.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 507,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_cgitb.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 57,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_charmapcodec.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 39,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_check_c_globals.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_class.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 493,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_clinic.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 678,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_cmath.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 484,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_cmd.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 203,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_cmd_line.py": {
      "CONFIDENCE.HIGH": 18.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 17.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 628,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_cmd_line_script.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 610,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_code.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 350,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_code_module.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 124,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_codeccallbacks.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 855,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_codecencodings_cn.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 78,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_codecencodings_hk.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_codecencodings_iso2022.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 30,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_codecencodings_jp.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 105,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_codecencodings_kr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 55,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_codecencodings_tw.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_codecmaps_cn.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 16,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_codecmaps_hk.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_codecmaps_jp.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 45,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_codecmaps_kr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 20,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_codecmaps_tw.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 19,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_codecs.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2786,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_codeop.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 4.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 258,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_collections.py": {
      "CONFIDENCE.HIGH": 14.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 8.0,
      "SEVERITY.MEDIUM": 6.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1866,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_colorsys.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 87,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_compare.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 101,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_compile.py": {
      "CONFIDENCE.HIGH": 54.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 54.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 888,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_compileall.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 850,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_complex.py": {
      "CONFIDENCE.HIGH": 8.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 595,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_concurrent_futures.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 7.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1100,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_configparser.py": {
      "CONFIDENCE.HIGH": 23.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 11.0,
      "SEVERITY.MEDIUM": 12.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1858,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_contains.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 86,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_context.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 759,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_contextlib.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 865,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_contextlib_async.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 378,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_copy.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 766,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_copyreg.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 88,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_coroutines.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1756,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_cprofile.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 93,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_crashers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 22,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_crypt.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 93,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_csv.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1038,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_ctypes.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 6,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_curses.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 463,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_dataclasses.py": {
      "CONFIDENCE.HIGH": 8.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2533,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_datetime.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 47,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_dbm.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 161,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_dbm_dumb.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 251,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_dbm_gnu.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 134,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_dbm_ndbm.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 112,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_decimal.py": {
      "CONFIDENCE.HIGH": 40.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 18.0,
      "SEVERITY.MEDIUM": 22.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4540,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_decorators.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 255,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_defaultdict.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 165,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_deque.py": {
      "CONFIDENCE.HIGH": 17.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 11.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 878,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_descr.py": {
      "CONFIDENCE.HIGH": 27.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 23.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4665,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_descrtut.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 385,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_devpoll.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 107,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_dict.py": {
      "CONFIDENCE.HIGH": 22.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 20.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1151,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_dict_version.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 108,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_dictcomps.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 107,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_dictviews.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 289,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_difflib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 445,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_dis.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 993,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_distutils.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_doctest.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2649,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_doctest2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 94,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_docxmlrpc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 167,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_dtrace.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 127,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_dynamic.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 5.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 97,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_dynamicclassattribute.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 252,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_eintr.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 126,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\test__encoded_words.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 141,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\test__header_value_parser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2525,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\test_asian_codecs.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 57,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\test_contentmanager.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 684,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\test_defect_handling.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 256,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\test_email.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4374,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\test_generator.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 271,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\test_headerregistry.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1449,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\test_inversion.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 59,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\test_message.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 693,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\test_parser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 83,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\test_pickleable.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 55,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\test_policy.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 297,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\test_utils.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 145,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_email\\torture_test.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 104,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_embed.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1194,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_ensurepip.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 237,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_enum.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2886,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_enumerate.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 211,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_eof.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 4.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 58,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_epoll.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 188,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_errno.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 23,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_exception_hierarchy.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 162,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_exception_variations.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 140,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_exceptions.py": {
      "CONFIDENCE.HIGH": 9.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1141,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_extcall.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 440,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_faulthandler.py": {
      "CONFIDENCE.HIGH": 6.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 726,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_fcntl.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 180,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_file.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 253,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_file_eintr.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 186,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_filecmp.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 181,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_fileinput.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 828,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_fileio.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 488,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_finalization.py": {
      "CONFIDENCE.HIGH": 8.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 8.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 429,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_float.py": {
      "CONFIDENCE.HIGH": 9.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1192,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_flufl.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 29,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_fnmatch.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 138,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_fork1.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 79,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_format.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 425,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_fractions.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 602,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_frame.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 172,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_frozen.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_fstring.py": {
      "CONFIDENCE.HIGH": 10.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 10.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 936,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_ftplib.py": {
      "CONFIDENCE.HIGH": 26.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 24.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 884,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_funcattrs.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 316,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_functools.py": {
      "CONFIDENCE.HIGH": 8.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 5.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2171,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_future.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 4.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 306,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_future3.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 18,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_future4.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 7,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_future5.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 13,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_gc.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 943,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_gdb.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 723,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_generator_stop.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 27,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_generators.py": {
      "CONFIDENCE.HIGH": 18.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 18.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1834,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_genericalias.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 268,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_genericclass.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 255,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_genericpath.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 455,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_genexps.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 227,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_getargs2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 970,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_getopt.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 126,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_getpass.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 130,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_gettext.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 757,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_glob.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 333,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_global.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 48,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_grammar.py": {
      "CONFIDENCE.HIGH": 23.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 9.0,
      "SEVERITY.MEDIUM": 14.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1523,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_graphlib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 192,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_grp.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 80,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_gzip.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 650,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_hash.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 250,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_hashlib.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 6.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 887,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_heapq.py": {
      "CONFIDENCE.HIGH": 16.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 16.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 369,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_hmac.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 499,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_html.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 75,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_htmlparser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 622,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_http_cookiejar.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1275,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_http_cookies.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 398,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_httplib.py": {
      "CONFIDENCE.HIGH": 19.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 19.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1709,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_httpservers.py": {
      "CONFIDENCE.HIGH": 8.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 6.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1049,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_idle.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 13,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_imaplib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 868,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_imghdr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 124,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_imp.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 346,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\__init__.py": {
      "CONFIDENCE.HIGH": 15.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 10.0,
      "SEVERITY.MEDIUM": 5.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1050,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\circular_imports\\basic.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\circular_imports\\basic2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\circular_imports\\binding.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\circular_imports\\binding2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\circular_imports\\from_cycle1.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\circular_imports\\from_cycle2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\circular_imports\\indirect.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\circular_imports\\rebinding.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\circular_imports\\rebinding2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\circular_imports\\source.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\circular_imports\\subpackage.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\circular_imports\\subpkg\\subpackage2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\circular_imports\\subpkg\\util.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\circular_imports\\use.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\circular_imports\\util.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\package2\\submodule1.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\package2\\submodule2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\package\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\package\\submodule.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\unwritable\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 9,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_import\\data\\unwritable\\x.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\abc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 61,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\builtin\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\builtin\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\builtin\\test_finder.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 54,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\builtin\\test_loader.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 72,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\data01\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\data01\\subdirectory\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\data02\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\data02\\one\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\data02\\two\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\data03\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\data03\\namespace\\portion1\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\data03\\namespace\\portion2\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\data\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\extension\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\extension\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\extension\\test_case_sensitivity.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 38,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\extension\\test_finder.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\extension\\test_loader.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 225,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\extension\\test_path_hook.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 16,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\fixtures.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 187,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\frozen\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\frozen\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\frozen\\test_finder.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 52,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\frozen\\test_loader.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 183,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\import_\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\import_\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\import_\\test___loader__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 52,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\import_\\test___package__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 114,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\import_\\test_api.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 80,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\import_\\test_caching.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 64,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\import_\\test_fromlist.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 131,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\import_\\test_meta_path.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 93,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\import_\\test_packages.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 86,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\import_\\test_path.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 211,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\import_\\test_relative_imports.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 171,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\namespace_pkgs\\both_portions\\foo\\one.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\namespace_pkgs\\both_portions\\foo\\two.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\namespace_pkgs\\module_and_namespace_package\\a_test.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\namespace_pkgs\\not_a_namespace_pkg\\foo\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\namespace_pkgs\\not_a_namespace_pkg\\foo\\one.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\namespace_pkgs\\portion1\\foo\\one.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\namespace_pkgs\\portion2\\foo\\two.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\namespace_pkgs\\project1\\parent\\child\\one.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\namespace_pkgs\\project2\\parent\\child\\two.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\namespace_pkgs\\project3\\parent\\child\\three.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\source\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\source\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\source\\test_case_sensitivity.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 68,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\source\\test_file_loader.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 635,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\source\\test_finder.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 167,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\source\\test_path_hook.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 25,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\source\\test_source_encoding.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 114,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\stubs.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_abc.py": {
      "CONFIDENCE.HIGH": 8.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 5.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 700,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_api.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 362,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_files.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 28,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_lazy.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 100,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_locks.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 113,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_main.py": {
      "CONFIDENCE.HIGH": 21.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 20.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 225,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py": {
      "CONFIDENCE.HIGH": 24.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 24.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 128,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_namespace_pkgs.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 227,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_open.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 53,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_path.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 31,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_pkg_import.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 58,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_read.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 44,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_resource.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 176,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_spec.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 631,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_threaded_import.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 198,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_util.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 671,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_windows.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 90,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\test_zip.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 54,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\threaded_import_hangers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 24,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\util.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 464,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\zipdata01\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_importlib\\zipdata02\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_index.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 214,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_inspect.py": {
      "CONFIDENCE.HIGH": 16.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 13.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3168,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_int.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 456,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_int_literal.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 94,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_interpreters.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 591,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_io.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 7.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3589,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_ioctl.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 72,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_ipaddress.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2095,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_isinstance.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 199,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_iter.py": {
      "CONFIDENCE.HIGH": 9.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 7.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 821,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_iterlen.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 158,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_itertools.py": {
      "CONFIDENCE.HIGH": 23.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 20.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2052,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 44,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_decode.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 78,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_default.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_dump.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 56,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_encode_basestring_ascii.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 40,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_enum.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 106,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_fail.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 174,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_float.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_indent.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 54,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_pass1.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 65,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_pass2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 11,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_pass3.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 16,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_recursion.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 80,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_scanstring.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 114,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_separators.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 40,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_speedups.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 55,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_tool.py": {
      "CONFIDENCE.HIGH": 8.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 8.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 194,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_json\\test_unicode.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 72,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_keyword.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 25,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_keywordonlyarg.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 141,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_kqueue.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 212,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_largefile.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 217,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_lib2to3.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 7,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_linecache.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 168,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_list.py": {
      "CONFIDENCE.HIGH": 9.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 8.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 165,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_listcomps.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 113,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_lltrace.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 20,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_locale.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 470,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_logging.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4386,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_long.py": {
      "CONFIDENCE.HIGH": 20.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 19.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1074,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_longexp.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_lzma.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1639,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_mailbox.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1813,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_mailcap.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 182,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_marshal.py": {
      "CONFIDENCE.HIGH": 30.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 29.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 464,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_math.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1676,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_memoryio.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 706,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_memoryview.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 429,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_metaclass.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 228,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_mimetypes.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 216,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_minidom.py": {
      "CONFIDENCE.HIGH": 81.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 77.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1420,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_mmap.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 651,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_module.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 229,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_modulefinder.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 358,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_msilib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 137,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_multibytecodec.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 297,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_multiprocessing_fork.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 13,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_multiprocessing_forkserver.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 11,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_multiprocessing_main_handling.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 220,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_multiprocessing_spawn.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_named_expressions.py": {
      "CONFIDENCE.HIGH": 27.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 27.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 382,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_netrc.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 1.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 137,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_nis.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 29,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_nntplib.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1308,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_ntpath.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 656,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_numeric_tower.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 136,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_opcodes.py": {
      "CONFIDENCE.HIGH": 20.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 17.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 102,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_openpty.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_operator.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 547,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_optparse.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1328,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_ordered_dict.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 5.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 706,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_os.py": {
      "CONFIDENCE.HIGH": 35.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 16.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 4.0,
      "SEVERITY.LOW": 45.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3243,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_ossaudiodev.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 146,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_osx_env.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_pathlib.py": {
      "CONFIDENCE.HIGH": 6.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 4.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2169,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_pdb.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1490,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_peepholer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 428,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_peg_generator\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_peg_generator\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_peg_generator\\test_c_parser.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 397,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_peg_generator\\test_first_sets.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 199,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_peg_generator\\test_pegen.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 682,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_pickle.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 437,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_picklebuffer.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 117,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_pickletools.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 5.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 75,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_pipes.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 149,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_pkg.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 240,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_pkgutil.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 451,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_platform.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 302,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_plistlib.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 601,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_poll.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 181,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_popen.py": {
      "CONFIDENCE.HIGH": 10.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 8.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 50,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_poplib.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 426,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_positional_only_arg.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 344,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_posix.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1598,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_posixpath.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 557,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_pow.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 119,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_pprint.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 5.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 975,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_print.py": {
      "CONFIDENCE.HIGH": 6.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 6.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 143,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_profile.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 182,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_property.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 253,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_pstats.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 82,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_pty.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 199,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_pulldom.py": {
      "CONFIDENCE.HIGH": 14.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 10.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 275,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_pwd.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 79,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_py_compile.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 227,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_pyclbr.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 192,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_pydoc.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1327,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_pyexpat.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 567,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_queue.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 482,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_quopri.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 158,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_raise.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 398,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_random.py": {
      "CONFIDENCE.HIGH": 10.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 7.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 869,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_range.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 6.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 549,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_re.py": {
      "CONFIDENCE.HIGH": 12.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 10.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1927,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_readline.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 256,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_regrtest.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1021,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_repl.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 87,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_reprlib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 314,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_resource.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 138,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_richcmp.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 266,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_rlcompleter.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 114,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_robotparser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 290,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_runpy.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 719,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_sax.py": {
      "CONFIDENCE.HIGH": 70.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 13.0,
      "SEVERITY.MEDIUM": 57.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1143,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_sched.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 183,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_scope.py": {
      "CONFIDENCE.HIGH": 6.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 6.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 570,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_script_helper.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 101,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_secrets.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 89,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_select.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 68,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_selectors.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 416,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_set.py": {
      "CONFIDENCE.HIGH": 10.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 8.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1492,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_setcomps.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 116,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_shelve.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 188,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_shlex.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 329,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_shutil.py": {
      "CONFIDENCE.HIGH": 35.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 2.0,
      "SEVERITY.LOW": 28.0,
      "SEVERITY.MEDIUM": 5.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2032,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_signal.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 958,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_site.py": {
      "CONFIDENCE.HIGH": 18.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 15.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 544,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_slice.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 192,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_smtpd.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 859,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_smtplib.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1145,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_smtpnet.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 74,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_sndhdr.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 33,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_socket.py": {
      "CONFIDENCE.HIGH": 9.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4900,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_socketserver.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 382,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_sort.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 7.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 277,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_source_encoding.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 5.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 176,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_spwd.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 63,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_sqlite.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 21,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_ssl.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 5.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 7.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3872,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_startfile.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 19,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_stat.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 208,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_statistics.py": {
      "CONFIDENCE.HIGH": 51.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 50.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1959,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_strftime.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 166,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_string.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 394,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_string_literals.py": {
      "CONFIDENCE.HIGH": 46.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 45.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 210,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_stringprep.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 44,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_strptime.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 556,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_strtod.py": {
      "CONFIDENCE.HIGH": 21.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 21.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 315,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_struct.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 675,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_structmembers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 116,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_structseq.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 98,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_subclassinit.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 215,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_subprocess.py": {
      "CONFIDENCE.HIGH": 203.0,
      "CONFIDENCE.LOW": 5.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 4.0,
      "SEVERITY.LOW": 198.0,
      "SEVERITY.MEDIUM": 6.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2784,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_sunau.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 137,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_sundry.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 52,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_super.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 233,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_support.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 500,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_symtable.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 196,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_syntax.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 785,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_sys.py": {
      "CONFIDENCE.HIGH": 13.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 13.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1094,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_sys_setprofile.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 343,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_sys_settrace.py": {
      "CONFIDENCE.HIGH": 8.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1316,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_sysconfig.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 333,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_syslog.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 25,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tabnanny.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 288,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tarfile.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2093,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tcl.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 679,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_telnetlib.py": {
      "CONFIDENCE.HIGH": 10.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 9.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 335,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tempfile.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 1.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1108,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_textwrap.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 734,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_thread.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 205,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_threadedtempfile.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 50,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_threading.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1082,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_threading_local.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 160,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_threadsignals.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 167,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_time.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 747,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_timeit.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 303,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_timeout.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 184,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tix.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 21,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tk.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 10,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tokenize.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1425,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tools\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 32,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tools\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tools\\test_fixcid.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 86,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tools\\test_gprof2html.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tools\\test_i18n.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 204,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tools\\test_lll.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 32,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tools\\test_md5sum.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 64,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tools\\test_pathfix.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 109,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tools\\test_pdeps.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 20,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tools\\test_pindent.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 269,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tools\\test_reindent.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 25,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tools\\test_sundry.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 41,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_trace.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 421,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_traceback.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 972,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tracemalloc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 793,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_ttk_guionly.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_ttk_textonly.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 9,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_tuple.py": {
      "CONFIDENCE.HIGH": 6.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 4.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 268,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_turtle.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 352,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_type_comments.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 336,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_typechecks.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 52,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_types.py": {
      "CONFIDENCE.HIGH": 23.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 22.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1442,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_typing.py": {
      "CONFIDENCE.HIGH": 38.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 20.0,
      "SEVERITY.MEDIUM": 18.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3356,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_ucn.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 199,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_unary.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 40,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_unicode.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2459,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_unicode_file.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 95,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_unicode_file_functions.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 146,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_unicode_identifiers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 27,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_unicodedata.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 307,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_unittest.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 9,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_univnewlines.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 98,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_unpack.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 112,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_unpack_ex.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 280,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_unparse.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 429,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_urllib.py": {
      "CONFIDENCE.HIGH": 29.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 25.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1302,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_urllib2.py": {
      "CONFIDENCE.HIGH": 8.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1497,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_urllib2_localnet.py": {
      "CONFIDENCE.HIGH": 13.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 12.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 520,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_urllib2net.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 4.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 251,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_urllib_response.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 49,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_urllibnet.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 5.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 156,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_urlparse.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1051,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_userdict.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 159,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_userlist.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 55,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_userstring.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 44,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_utf8_mode.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 191,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_utf8source.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 31,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_uu.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 195,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_uuid.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 4.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 707,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_venv.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 423,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_wait3.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 39,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_wait4.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 28,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_warnings\\__init__.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1003,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_warnings\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_warnings\\data\\import_warning.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_warnings\\data\\stacklevel.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 5,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_wave.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 149,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_weakref.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1623,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_weakset.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 375,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_webbrowser.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 249,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_winconsoleio.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 151,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_winreg.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 350,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_winsound.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 106,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_with.py": {
      "loc": 612,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_wsgiref.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 690,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_xdrlib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 54,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_xml_dom_minicompat.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 93,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_xml_etree.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3330,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_xml_etree_c.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 167,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_xmlrpc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1099,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_xmlrpc_net.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 20,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_xxtestfuzz.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 19,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_yield_from.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 969,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_zipapp.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 308,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_zipfile.py": {
      "CONFIDENCE.HIGH": 47.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 2.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 48.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2467,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_zipfile64.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 101,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_zipimport.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 581,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_zipimport_support.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 181,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_zlib.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 692,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_zoneinfo\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_zoneinfo\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_zoneinfo\\_support.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 73,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_zoneinfo\\data\\update_test_data.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 88,
      "nosec": 0
    },
    "cpython\\Lib\\test\\test_zoneinfo\\test_zoneinfo.py": {
      "CONFIDENCE.HIGH": 14.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 9.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1559,
      "nosec": 0
    },
    "cpython\\Lib\\test\\testcodec.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "cpython\\Lib\\test\\tf_inherit_check.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 19,
      "nosec": 0
    },
    "cpython\\Lib\\test\\time_hashlib.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 5.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 67,
      "nosec": 0
    },
    "cpython\\Lib\\test\\tracedmodules\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4,
      "nosec": 0
    },
    "cpython\\Lib\\test\\tracedmodules\\testmod.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\Lib\\test\\win_console_handler.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 34,
      "nosec": 0
    },
    "cpython\\Lib\\test\\xmltests.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 15,
      "nosec": 0
    },
    "cpython\\Lib\\test\\ziptestdata\\testdata_module_inside_zip.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\textwrap.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 357,
      "nosec": 0
    },
    "cpython\\Lib\\this.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 25,
      "nosec": 0
    },
    "cpython\\Lib\\threading.py": {
      "CONFIDENCE.HIGH": 18.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 18.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1044,
      "nosec": 0
    },
    "cpython\\Lib\\timeit.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 308,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\__init__.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3601,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 6,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\colorchooser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 25,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\commondialog.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 27,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\constants.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 73,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\dialog.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 38,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\dnd.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 259,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\filedialog.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 335,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\font.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 175,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\messagebox.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 75,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\scrolledtext.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 40,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\simpledialog.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 298,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\runtktests.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 56,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\support.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 99,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\test_tkinter\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\test_tkinter\\test_font.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 96,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\test_tkinter\\test_geometry_managers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 831,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\test_tkinter\\test_images.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 283,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\test_tkinter\\test_loadtk.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 32,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\test_tkinter\\test_misc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 201,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\test_tkinter\\test_text.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 32,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\test_tkinter\\test_variables.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 252,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\test_tkinter\\test_widgets.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1095,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\test_ttk\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\test_ttk\\test_extensions.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 237,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\test_ttk\\test_functions.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 303,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\test_ttk\\test_style.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 63,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\test_ttk\\test_widgets.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1376,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\test\\widget_tests.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 443,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\tix.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1425,
      "nosec": 0
    },
    "cpython\\Lib\\tkinter\\ttk.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1142,
      "nosec": 0
    },
    "cpython\\Lib\\token.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 126,
      "nosec": 0
    },
    "cpython\\Lib\\tokenize.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 536,
      "nosec": 0
    },
    "cpython\\Lib\\trace.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 559,
      "nosec": 0
    },
    "cpython\\Lib\\traceback.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 483,
      "nosec": 0
    },
    "cpython\\Lib\\tracemalloc.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 450,
      "nosec": 0
    },
    "cpython\\Lib\\tty.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 28,
      "nosec": 0
    },
    "cpython\\Lib\\turtle.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 6.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3443,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 10,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\__main__.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 310,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\bytedesign.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 138,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\chaos.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 42,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\clock.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 117,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\colormixer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 48,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\forest.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 89,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\fractalcurves.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 102,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\lindenmayer.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 83,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\minimal_hanoi.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 66,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\nim.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 188,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\paint.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 46,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\peace.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 50,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\penrose.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 155,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\planet_and_moon.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 95,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\rosette.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 50,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\round_dance.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 73,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\sorting_animate.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 168,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\tree.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 54,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\two_canvases.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 42,
      "nosec": 0
    },
    "cpython\\Lib\\turtledemo\\yinyang.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 40,
      "nosec": 0
    },
    "cpython\\Lib\\types.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 230,
      "nosec": 0
    },
    "cpython\\Lib\\typing.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1689,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 65,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 10,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\_log.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 66,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\async_case.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 100,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\case.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1165,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\loader.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 405,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\main.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 219,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\mock.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2190,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\result.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 174,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\runner.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 185,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\signals.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 54,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\suite.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 289,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 17,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 12,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\_test_warnings.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 49,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\dummy.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\support.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 101,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\test_assertions.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 337,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\test_async_case.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 165,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\test_break.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 205,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\test_case.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1420,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\test_discovery.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 652,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\test_functiontestcase.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 73,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\test_loader.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 933,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\test_program.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 327,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\test_result.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 497,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\test_runner.py": {
      "CONFIDENCE.HIGH": 6.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 827,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\test_setups.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 433,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\test_skipping.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 235,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\test_suite.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 261,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\testmock\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\testmock\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 12,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\testmock\\support.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 9,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\testmock\\testasync.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 807,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\testmock\\testcallable.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 96,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\testmock\\testhelpers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 815,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\testmock\\testmagicmethods.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 376,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\testmock\\testmock.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1590,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\testmock\\testpatch.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1426,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\testmock\\testsealable.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 126,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\testmock\\testsentinel.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 28,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\test\\testmock\\testwith.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 248,
      "nosec": 0
    },
    "cpython\\Lib\\unittest\\util.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 146,
      "nosec": 0
    },
    "cpython\\Lib\\urllib\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\urllib\\error.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 49,
      "nosec": 0
    },
    "cpython\\Lib\\urllib\\parse.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 898,
      "nosec": 0
    },
    "cpython\\Lib\\urllib\\request.py": {
      "CONFIDENCE.HIGH": 13.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 7.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 4.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2091,
      "nosec": 0
    },
    "cpython\\Lib\\urllib\\response.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 58,
      "nosec": 0
    },
    "cpython\\Lib\\urllib\\robotparser.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 212,
      "nosec": 0
    },
    "cpython\\Lib\\uu.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 134,
      "nosec": 0
    },
    "cpython\\Lib\\uuid.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 520,
      "nosec": 0
    },
    "cpython\\Lib\\venv\\__init__.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 438,
      "nosec": 0
    },
    "cpython\\Lib\\venv\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 9,
      "nosec": 0
    },
    "cpython\\Lib\\warnings.py": {
      "CONFIDENCE.HIGH": 8.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 8.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 429,
      "nosec": 0
    },
    "cpython\\Lib\\wave.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 430,
      "nosec": 0
    },
    "cpython\\Lib\\weakref.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 524,
      "nosec": 0
    },
    "cpython\\Lib\\webbrowser.py": {
      "CONFIDENCE.HIGH": 18.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 1.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 19.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 508,
      "nosec": 0
    },
    "cpython\\Lib\\wsgiref\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 13,
      "nosec": 0
    },
    "cpython\\Lib\\wsgiref\\handlers.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 387,
      "nosec": 0
    },
    "cpython\\Lib\\wsgiref\\headers.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 144,
      "nosec": 0
    },
    "cpython\\Lib\\wsgiref\\simple_server.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 123,
      "nosec": 0
    },
    "cpython\\Lib\\wsgiref\\util.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 133,
      "nosec": 0
    },
    "cpython\\Lib\\wsgiref\\validate.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 324,
      "nosec": 0
    },
    "cpython\\Lib\\xdrlib.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 182,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 12,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\dom\\NodeFilter.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 22,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\dom\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 95,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\dom\\domreg.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 75,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\dom\\expatbuilder.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 7.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 768,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\dom\\minicompat.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 51,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\dom\\minidom.py": {
      "CONFIDENCE.HIGH": 10.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 8.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1581,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\dom\\pulldom.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 291,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\dom\\xmlbuilder.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 300,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\etree\\ElementInclude.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 85,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\etree\\ElementPath.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 287,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\etree\\ElementTree.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1560,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\etree\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\etree\\cElementTree.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\parsers\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 5,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\parsers\\expat.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 5,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\sax\\__init__.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 74,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\sax\\_exceptions.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 92,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\sax\\expatreader.py": {
      "CONFIDENCE.HIGH": 8.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 8.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 341,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\sax\\handler.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 223,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\sax\\saxutils.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 268,
      "nosec": 0
    },
    "cpython\\Lib\\xml\\sax\\xmlreader.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 276,
      "nosec": 0
    },
    "cpython\\Lib\\xmlrpc\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Lib\\xmlrpc\\client.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 900,
      "nosec": 0
    },
    "cpython\\Lib\\xmlrpc\\server.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 737,
      "nosec": 0
    },
    "cpython\\Lib\\zipapp.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 149,
      "nosec": 0
    },
    "cpython\\Lib\\zipfile.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1954,
      "nosec": 0
    },
    "cpython\\Lib\\zipimport.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 490,
      "nosec": 0
    },
    "cpython\\Lib\\zoneinfo\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 24,
      "nosec": 0
    },
    "cpython\\Lib\\zoneinfo\\_common.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 95,
      "nosec": 0
    },
    "cpython\\Lib\\zoneinfo\\_tzpath.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 118,
      "nosec": 0
    },
    "cpython\\Lib\\zoneinfo\\_zoneinfo.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 498,
      "nosec": 0
    },
    "cpython\\Mac\\BuildScript\\build-installer.py": {
      "CONFIDENCE.HIGH": 11.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 8.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1310,
      "nosec": 0
    },
    "cpython\\Mac\\Extras.install.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 48,
      "nosec": 0
    },
    "cpython\\Mac\\IDLE\\IDLE.app\\Contents\\Resources\\idlemain.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 19,
      "nosec": 0
    },
    "cpython\\Mac\\Tools\\plistlib_generate_testdata.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 75,
      "nosec": 0
    },
    "cpython\\Modules\\_blake2\\blake2b2s.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 33,
      "nosec": 0
    },
    "cpython\\Modules\\_decimal\\libmpdec\\literature\\fnt.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 91,
      "nosec": 0
    },
    "cpython\\Modules\\_decimal\\tests\\bench.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 93,
      "nosec": 0
    },
    "cpython\\Modules\\_decimal\\tests\\bignum.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 25,
      "nosec": 0
    },
    "cpython\\Modules\\_decimal\\tests\\deccheck.py": {
      "CONFIDENCE.HIGH": 24.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 24.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1031,
      "nosec": 0
    },
    "cpython\\Modules\\_decimal\\tests\\formathelper.py": {
      "CONFIDENCE.HIGH": 24.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 24.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 264,
      "nosec": 0
    },
    "cpython\\Modules\\_decimal\\tests\\randdec.py": {
      "CONFIDENCE.HIGH": 74.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 74.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 444,
      "nosec": 0
    },
    "cpython\\Modules\\_decimal\\tests\\randfloat.py": {
      "CONFIDENCE.HIGH": 30.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 30.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 190,
      "nosec": 0
    },
    "cpython\\Modules\\_sha3\\cleanup.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 31,
      "nosec": 0
    },
    "cpython\\Objects\\typeslots.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 36,
      "nosec": 0
    },
    "cpython\\PC\\layout\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\PC\\layout\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 8,
      "nosec": 0
    },
    "cpython\\PC\\layout\\main.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 550,
      "nosec": 0
    },
    "cpython\\PC\\layout\\support\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\PC\\layout\\support\\appxmanifest.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 439,
      "nosec": 0
    },
    "cpython\\PC\\layout\\support\\catalog.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 29,
      "nosec": 0
    },
    "cpython\\PC\\layout\\support\\constants.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 32,
      "nosec": 0
    },
    "cpython\\PC\\layout\\support\\distutils.command.bdist_wininst.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 16,
      "nosec": 0
    },
    "cpython\\PC\\layout\\support\\filesets.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 81,
      "nosec": 0
    },
    "cpython\\PC\\layout\\support\\logging.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 66,
      "nosec": 0
    },
    "cpython\\PC\\layout\\support\\nuspec.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 65,
      "nosec": 0
    },
    "cpython\\PC\\layout\\support\\options.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 114,
      "nosec": 0
    },
    "cpython\\PC\\layout\\support\\pip.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 77,
      "nosec": 0
    },
    "cpython\\PC\\layout\\support\\props.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 82,
      "nosec": 0
    },
    "cpython\\PC\\testpy.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 21,
      "nosec": 0
    },
    "cpython\\PC\\validate_ucrtbase.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 70,
      "nosec": 0
    },
    "cpython\\PCbuild\\field3.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 17,
      "nosec": 0
    },
    "cpython\\PCbuild\\fix_encoding.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 22,
      "nosec": 0
    },
    "cpython\\PCbuild\\get_external.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 48,
      "nosec": 0
    },
    "cpython\\PCbuild\\prepare_ssl.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 2.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 148,
      "nosec": 0
    },
    "cpython\\PCbuild\\rmpyc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 12,
      "nosec": 0
    },
    "cpython\\PCbuild\\urlretrieve.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 33,
      "nosec": 0
    },
    "cpython\\Parser\\asdl.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 288,
      "nosec": 0
    },
    "cpython\\Parser\\asdl_c.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1300,
      "nosec": 0
    },
    "cpython\\Python\\makeopcodetargets.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 44,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c-analyzer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 5,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_analyzer\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 83,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_analyzer\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 405,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_analyzer\\analyze.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 247,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_analyzer\\datafiles.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 82,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_analyzer\\info.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 285,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_common\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_common\\clsutil.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 86,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_common\\fsutil.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 283,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_common\\info.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_common\\iterutil.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 43,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_common\\logging.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 42,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_common\\misc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 6,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_common\\scriptutil.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 449,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_common\\show.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_common\\strutil.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 30,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_common\\tables.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 177,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 32,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 208,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\_state_machine.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 139,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\datafiles.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 101,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\info.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1329,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\parser\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 171,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\parser\\_alt.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\parser\\_common.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 87,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\parser\\_compound_decl_body.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 120,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\parser\\_delim.py": {
      "loc": 45,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\parser\\_func_body.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 222,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\parser\\_global.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 141,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\parser\\_info.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 129,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\parser\\_regexes.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 660,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\preprocessor\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 131,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\preprocessor\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 148,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\preprocessor\\common.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 122,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\preprocessor\\errors.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 79,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\preprocessor\\gcc.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 94,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\preprocessor\\pure.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 19,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\c_parser\\source.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 49,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\check-c-globals.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 28,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\cpython\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 17,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\cpython\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 217,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\cpython\\_analyzer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 262,
      "nosec": 0
    },
    "cpython\\Tools\\c-analyzer\\cpython\\_parser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 227,
      "nosec": 0
    },
    "cpython\\Tools\\ccbench\\ccbench.py": {
      "CONFIDENCE.HIGH": 11.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 5.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 468,
      "nosec": 0
    },
    "cpython\\Tools\\clinic\\clinic.py": {
      "CONFIDENCE.HIGH": 39.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 35.0,
      "SEVERITY.MEDIUM": 4.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 3832,
      "nosec": 0
    },
    "cpython\\Tools\\clinic\\cpp.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 133,
      "nosec": 0
    },
    "cpython\\Tools\\demo\\beer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 18,
      "nosec": 0
    },
    "cpython\\Tools\\demo\\eiffel.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 101,
      "nosec": 0
    },
    "cpython\\Tools\\demo\\hanoi.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 108,
      "nosec": 0
    },
    "cpython\\Tools\\demo\\life.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 209,
      "nosec": 0
    },
    "cpython\\Tools\\demo\\markov.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 114,
      "nosec": 0
    },
    "cpython\\Tools\\demo\\mcast.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 53,
      "nosec": 0
    },
    "cpython\\Tools\\demo\\queens.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 69,
      "nosec": 0
    },
    "cpython\\Tools\\demo\\redemo.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 140,
      "nosec": 0
    },
    "cpython\\Tools\\demo\\rpython.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 31,
      "nosec": 0
    },
    "cpython\\Tools\\demo\\rpythond.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 50,
      "nosec": 0
    },
    "cpython\\Tools\\demo\\sortvisu.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 538,
      "nosec": 0
    },
    "cpython\\Tools\\demo\\spreadsheet.py": {
      "CONFIDENCE.HIGH": 17.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 16.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 695,
      "nosec": 0
    },
    "cpython\\Tools\\demo\\vector.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 51,
      "nosec": 0
    },
    "cpython\\Tools\\freeze\\bkfile.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 25,
      "nosec": 0
    },
    "cpython\\Tools\\freeze\\checkextensions.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 77,
      "nosec": 0
    },
    "cpython\\Tools\\freeze\\checkextensions_win32.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 133,
      "nosec": 0
    },
    "cpython\\Tools\\freeze\\flag.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Tools\\freeze\\freeze.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 367,
      "nosec": 0
    },
    "cpython\\Tools\\freeze\\hello.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1,
      "nosec": 0
    },
    "cpython\\Tools\\freeze\\makeconfig.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 50,
      "nosec": 0
    },
    "cpython\\Tools\\freeze\\makefreeze.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 62,
      "nosec": 0
    },
    "cpython\\Tools\\freeze\\makemakefile.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 21,
      "nosec": 0
    },
    "cpython\\Tools\\freeze\\parsesetup.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 86,
      "nosec": 0
    },
    "cpython\\Tools\\freeze\\test\\ok.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 2,
      "nosec": 0
    },
    "cpython\\Tools\\freeze\\winmakemakefile.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 119,
      "nosec": 0
    },
    "cpython\\Tools\\gdb\\libpython.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1459,
      "nosec": 0
    },
    "cpython\\Tools\\i18n\\makelocalealias.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 123,
      "nosec": 0
    },
    "cpython\\Tools\\i18n\\msgfmt.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 189,
      "nosec": 0
    },
    "cpython\\Tools\\i18n\\pygettext.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 470,
      "nosec": 0
    },
    "cpython\\Tools\\importbench\\importbench.py": {
      "CONFIDENCE.HIGH": 6.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 210,
      "nosec": 0
    },
    "cpython\\Tools\\iobench\\iobench.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 466,
      "nosec": 0
    },
    "cpython\\Tools\\msi\\csv_to_wxs.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 103,
      "nosec": 0
    },
    "cpython\\Tools\\msi\\distutils.command.bdist_wininst.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 15,
      "nosec": 0
    },
    "cpython\\Tools\\msi\\generate_md5.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 20,
      "nosec": 0
    },
    "cpython\\Tools\\msi\\purge.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 62,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\data\\cprog.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 11,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\peg_extension\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\pegen\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\pegen\\__main__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 156,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\pegen\\ast_dump.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 60,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\pegen\\build.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 209,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\pegen\\c_generator.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 699,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\pegen\\first_sets.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 113,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\pegen\\grammar.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 338,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\pegen\\grammar_parser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 670,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\pegen\\grammar_visualizer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 46,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\pegen\\keywordgen.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 57,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\pegen\\parser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 252,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\pegen\\parser_generator.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 173,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\pegen\\python_generator.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 203,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\pegen\\sccutils.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 96,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\pegen\\testutil.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 97,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\pegen\\tokenizer.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 71,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\scripts\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\scripts\\ast_timings.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 21,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\scripts\\benchmark.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 79,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\scripts\\download_pypi_packages.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 65,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\scripts\\find_max_nesting.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 40,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\scripts\\grammar_grapher.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 84,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\scripts\\joinstats.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 50,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\scripts\\test_parse_directory.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 117,
      "nosec": 0
    },
    "cpython\\Tools\\peg_generator\\scripts\\test_pypi_packages.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 71,
      "nosec": 0
    },
    "cpython\\Tools\\pynche\\ChipViewer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 94,
      "nosec": 0
    },
    "cpython\\Tools\\pynche\\ColorDB.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 192,
      "nosec": 0
    },
    "cpython\\Tools\\pynche\\DetailsViewer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 233,
      "nosec": 0
    },
    "cpython\\Tools\\pynche\\ListViewer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 143,
      "nosec": 0
    },
    "cpython\\Tools\\pynche\\Main.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 164,
      "nosec": 0
    },
    "cpython\\Tools\\pynche\\PyncheWidget.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 242,
      "nosec": 0
    },
    "cpython\\Tools\\pynche\\StripViewer.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 5.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 292,
      "nosec": 0
    },
    "cpython\\Tools\\pynche\\Switchboard.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 109,
      "nosec": 0
    },
    "cpython\\Tools\\pynche\\TextViewer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 157,
      "nosec": 0
    },
    "cpython\\Tools\\pynche\\TypeinViewer.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 137,
      "nosec": 0
    },
    "cpython\\Tools\\pynche\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Tools\\pynche\\pyColorChooser.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 96,
      "nosec": 0
    },
    "cpython\\Tools\\pynche\\pynche.pyw": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 5,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\abitype.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 161,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\analyze_dxp.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 95,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\byext.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 113,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\byteyears.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 41,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\checkpip.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 24,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\cleanfuture.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 211,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\combinerefs.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 91,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\copytime.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 20,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\crlf.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 19,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\db2pickle.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 118,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\diff.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 48,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\dutree.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 50,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\eptags.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 48,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\find-uname.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 34,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\find_recursionlimit.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 98,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\finddiv.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 77,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\findlinksto.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 34,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\findnocoding.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 77,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\fixcid.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 234,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\fixdiv.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 333,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\fixheader.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 42,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\fixnotice.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 87,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\fixps.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 23,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\generate_opcode_h.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 53,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\generate_token.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 190,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\get-remote-certificate.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 3.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 66,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\google.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 17,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\gprof2html.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 77,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\highlight.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 219,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\ifdef.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 79,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\import_diagnostics.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 29,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\lfcr.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 19,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\linktree.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 63,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\lll.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 18,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\mailerdaemon.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 203,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\make_ctype.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 63,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\md5sum.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 82,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\mkreal.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 51,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\ndiff.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 92,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\nm2def.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 79,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\objgraph.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 143,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\parse_html5_entities.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 81,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\parseentities.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 51,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\patchcheck.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 224,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\pathfix.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 162,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\pdeps.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 93,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\pep384_macrocheck.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 130,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\pickle2db.py": {
      "CONFIDENCE.HIGH": 3.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 129,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\pindent.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 2.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 310,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\ptags.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 36,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\pysource.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 95,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\reindent-rst.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 6,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\reindent.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 247,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\rgrep.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 57,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\run_tests.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 1.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 3.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 40,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\serve.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 31,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\smelly.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 56,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\suff.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\texi2html.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1551,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\untabify.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 46,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\update_file.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 22,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\var_access_benchmark.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 253,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\which.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 47,
      "nosec": 0
    },
    "cpython\\Tools\\scripts\\win_add2path.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 48,
      "nosec": 0
    },
    "cpython\\Tools\\ssl\\make_ssl_data.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 81,
      "nosec": 0
    },
    "cpython\\Tools\\ssl\\multissltests.py": {
      "CONFIDENCE.HIGH": 7.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 6.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 459,
      "nosec": 0
    },
    "cpython\\Tools\\stringbench\\stringbench.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1223,
      "nosec": 0
    },
    "cpython\\Tools\\test2to3\\maintest.py": {
      "loc": 5,
      "nosec": 0
    },
    "cpython\\Tools\\test2to3\\setup.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 22,
      "nosec": 0
    },
    "cpython\\Tools\\test2to3\\test2to3\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "cpython\\Tools\\test2to3\\test2to3\\hello.py": {
      "loc": 5,
      "nosec": 0
    },
    "cpython\\Tools\\test2to3\\test\\runtests.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 10,
      "nosec": 0
    },
    "cpython\\Tools\\test2to3\\test\\test_foo.py": {
      "loc": 6,
      "nosec": 0
    },
    "cpython\\Tools\\tz\\zdump.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 70,
      "nosec": 0
    },
    "cpython\\Tools\\unicode\\comparecodecs.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 43,
      "nosec": 0
    },
    "cpython\\Tools\\unicode\\gencjkcodecs.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 52,
      "nosec": 0
    },
    "cpython\\Tools\\unicode\\gencodec.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 332,
      "nosec": 0
    },
    "cpython\\Tools\\unicode\\genmap_japanese.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 5.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 206,
      "nosec": 0
    },
    "cpython\\Tools\\unicode\\genmap_korean.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 43,
      "nosec": 0
    },
    "cpython\\Tools\\unicode\\genmap_schinese.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 4.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 119,
      "nosec": 0
    },
    "cpython\\Tools\\unicode\\genmap_support.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 154,
      "nosec": 0
    },
    "cpython\\Tools\\unicode\\genwincodec.py": {
      "CONFIDENCE.HIGH": 2.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 2.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 49,
      "nosec": 0
    },
    "cpython\\Tools\\unicode\\listcodecs.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 29,
      "nosec": 0
    },
    "cpython\\Tools\\unicode\\makeunicodedata.py": {
      "CONFIDENCE.HIGH": 17.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 16.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 990,
      "nosec": 0
    },
    "cpython\\Tools\\unicode\\mkstringprep.py": {
      "CONFIDENCE.HIGH": 26.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 26.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 313,
      "nosec": 0
    },
    "cpython\\Tools\\unittestgui\\unittestgui.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 365,
      "nosec": 0
    },
    "cpython\\setup.py": {
      "CONFIDENCE.HIGH": 5.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 1.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 1828,
      "nosec": 0
    }
  },
  "results": [
    {
      "code": "3 \n4 import pickle\n5 import sqlite3\n",
      "filename": "cpython\\Doc\\includes\\dbpickle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "31 \n32 ans = input(\"View full message?\")\n33 if ans.lower()[0] == 'n':\n",
      "filename": "cpython\\Doc\\includes\\email-read-alternative.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 32,
      "line_range": [
        32
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "1 import xml.dom.minidom\n2 \n3 document = \"\"\"\\\n4 <slideshow>\n",
      "filename": "cpython\\Doc\\includes\\minidom-example.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.dom.minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 1,
      "line_range": [
        1,
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b408-import-xml-minidom",
      "test_id": "B408",
      "test_name": "blacklist"
    },
    {
      "code": "18 \n19 dom = xml.dom.minidom.parseString(document)\n20 \n",
      "filename": "cpython\\Doc\\includes\\minidom-example.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 19,
      "line_range": [
        19
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "59     f1.g()\n60     assert not hasattr(f1, '_h')\n61     assert sorted(f1._exposed_) == sorted(['f', 'g'])\n",
      "filename": "cpython\\Doc\\includes\\mp_newtype.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 60,
      "line_range": [
        60
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "60     assert not hasattr(f1, '_h')\n61     assert sorted(f1._exposed_) == sorted(['f', 'g'])\n62 \n63     print('-' * 20)\n",
      "filename": "cpython\\Doc\\includes\\mp_newtype.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 61,
      "line_range": [
        61,
        62
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "67     f2._h()\n68     assert not hasattr(f2, 'f')\n69     assert sorted(f2._exposed_) == sorted(['g', '_h'])\n",
      "filename": "cpython\\Doc\\includes\\mp_newtype.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 68,
      "line_range": [
        68
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "68     assert not hasattr(f2, 'f')\n69     assert sorted(f2._exposed_) == sorted(['g', '_h'])\n70 \n71     print('-' * 20)\n",
      "filename": "cpython\\Doc\\includes\\mp_newtype.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 69,
      "line_range": [
        69,
        70
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "20 def mul(a, b):\n21     time.sleep(0.5 * random.random())\n22     return a * b\n",
      "filename": "cpython\\Doc\\includes\\mp_pool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 21,
      "line_range": [
        21
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "24 def plus(a, b):\n25     time.sleep(0.5 * random.random())\n26     return a + b\n",
      "filename": "cpython\\Doc\\includes\\mp_pool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 25,
      "line_range": [
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "116 \n117         assert i == 9\n118         print('\\tGot ZeroDivisionError as expected from IMapIterator.next()')\n",
      "filename": "cpython\\Doc\\includes\\mp_pool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 117,
      "line_range": [
        117
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "28 def mul(a, b):\n29     time.sleep(0.5*random.random())\n30     return a * b\n",
      "filename": "cpython\\Doc\\includes\\mp_workers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 29,
      "line_range": [
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "32 def plus(a, b):\n33     time.sleep(0.5*random.random())\n34     return a + b\n",
      "filename": "cpython\\Doc\\includes\\mp_workers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 33,
      "line_range": [
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "14 while True:\n15     line = input()\n16     if line == \"\":\n",
      "filename": "cpython\\Doc\\includes\\sqlite3\\complete_statement.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "4 def md5sum(t):\n5     return hashlib.md5(t).hexdigest()\n6 \n",
      "filename": "cpython\\Doc\\includes\\sqlite3\\md5func.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "8 for row in cur:\n9     assert row[0] == row[\"name\"]\n10     assert row[\"name\"] == row[\"nAmE\"]\n",
      "filename": "cpython\\Doc\\includes\\sqlite3\\rowclass.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "9     assert row[0] == row[\"name\"]\n10     assert row[\"name\"] == row[\"nAmE\"]\n11     assert row[1] == row[\"age\"]\n",
      "filename": "cpython\\Doc\\includes\\sqlite3\\rowclass.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "10     assert row[\"name\"] == row[\"nAmE\"]\n11     assert row[1] == row[\"age\"]\n12     assert row[1] == row[\"AgE\"]\n",
      "filename": "cpython\\Doc\\includes\\sqlite3\\rowclass.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "11     assert row[1] == row[\"age\"]\n12     assert row[1] == row[\"AgE\"]\n13 \n",
      "filename": "cpython\\Doc\\includes\\sqlite3\\rowclass.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "10 row = cur.fetchone()\n11 assert row[0] == AUSTRIA\n12 \n13 # but we can make sqlite3 always return bytestrings ...\n14 con.text_factory = bytes\n",
      "filename": "cpython\\Doc\\includes\\sqlite3\\text_factory.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 11,
      "line_range": [
        11,
        12,
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "16 row = cur.fetchone()\n17 assert type(row[0]) is bytes\n18 # the bytestrings will be encoded in UTF-8, unless you stored garbage in the\n19 # database ...\n20 assert row[0] == AUSTRIA.encode(\"utf-8\")\n",
      "filename": "cpython\\Doc\\includes\\sqlite3\\text_factory.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 17,
      "line_range": [
        17,
        18,
        19
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "19 # database ...\n20 assert row[0] == AUSTRIA.encode(\"utf-8\")\n21 \n22 # we can also implement a custom text_factory ...\n23 # here we implement one that appends \"foo\" to all strings\n24 con.text_factory = lambda x: x.decode(\"utf-8\") + \"foo\"\n",
      "filename": "cpython\\Doc\\includes\\sqlite3\\text_factory.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 20,
      "line_range": [
        20,
        21,
        22,
        23
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "26 row = cur.fetchone()\n27 assert row[0] == \"barfoo\"\n28 \n29 con.close()\n",
      "filename": "cpython\\Doc\\includes\\sqlite3\\text_factory.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 27,
      "line_range": [
        27,
        28
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "23     def fromutc(self, dt):\n24         assert dt.tzinfo is self\n25         stamp = (dt - datetime(1970, 1, 1, tzinfo=self)) // SECOND\n",
      "filename": "cpython\\Doc\\includes\\tzinfo_examples.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "136             return ZERO\n137         assert dt.tzinfo is self\n138         start, end = us_dst_range(dt.year)\n",
      "filename": "cpython\\Doc\\includes\\tzinfo_examples.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 137,
      "line_range": [
        137
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "154     def fromutc(self, dt):\n155         assert dt.tzinfo is self\n156         start, end = us_dst_range(dt.year)\n",
      "filename": "cpython\\Doc\\includes\\tzinfo_examples.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 155,
      "line_range": [
        155
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "6 try:\n7     import subprocess\n8 except ImportError:  # pragma: no cover\n",
      "filename": "cpython\\Lib\\_aix_support.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "33         def getpreferredencoding(do_setlocale=True):\n34             assert not do_setlocale\n35             if sys.flags.utf8_mode:\n",
      "filename": "cpython\\Lib\\_bootlocale.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 34,
      "line_range": [
        34
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "22                 if self._env is not None:\n23                     os.execve(self._cmd[0], self._cmd, self._env)\n24                 else:\n",
      "filename": "cpython\\Lib\\_bootsubprocess.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 23,
      "line_range": [
        23
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "24                 else:\n25                     os.execv(self._cmd[0], self._cmd)\n26             finally:\n",
      "filename": "cpython\\Lib\\_bootsubprocess.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 25,
      "line_range": [
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "79         # system() spawns a shell\n80         status = os.system(cmd)\n81         exitcode = os.waitstatus_to_exitcode(status)\n",
      "filename": "cpython\\Lib\\_bootsubprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 80,
      "line_range": [
        80
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "165 REVERSE_IMPORT_MAPPING = dict((v, k) for (k, v) in IMPORT_MAPPING.items())\n166 assert len(REVERSE_IMPORT_MAPPING) == len(IMPORT_MAPPING)\n167 REVERSE_NAME_MAPPING = dict((v, k) for (k, v) in NAME_MAPPING.items())\n",
      "filename": "cpython\\Lib\\_compat_pickle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 166,
      "line_range": [
        166
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "167 REVERSE_NAME_MAPPING = dict((v, k) for (k, v) in NAME_MAPPING.items())\n168 assert len(REVERSE_NAME_MAPPING) == len(NAME_MAPPING)\n169 \n170 # Non-mutual mappings.\n171 \n172 IMPORT_MAPPING.update({\n",
      "filename": "cpython\\Lib\\_compat_pickle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 168,
      "line_range": [
        168,
        169,
        170,
        171
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "72         j = i + 2\n73         assert rawdata[i:j] == \"<!\", \"unexpected call to parse_declaration\"\n74         if rawdata[j:j+1] == \">\":\n",
      "filename": "cpython\\Lib\\_markupbase.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 73,
      "line_range": [
        73
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "142         rawdata= self.rawdata\n143         assert rawdata[i:i+3] == '<![', \"unexpected call to parse_marked_section()\"\n144         sectName, j = self._scan_name( i+3, i )\n",
      "filename": "cpython\\Lib\\_markupbase.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 143,
      "line_range": [
        143
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "70         cmd = \"%s 2>/dev/null >'%s'\" % (commandstring, fp.name)\n71         return fp.read().decode('utf-8').strip() if not os.system(cmd) else None\n72 \n",
      "filename": "cpython\\Lib\\_osx_support.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 71,
      "line_range": [
        71
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "237         # issues when building Python itself\n238         status = os.system(\n239             \"\"\"echo 'int main{};' | \"\"\"\n240             \"\"\"'%s' -c -arch ppc -x c -o /dev/null /dev/null 2>/dev/null\"\"\"\n241             %(_config_vars['CC'].replace(\"'\", \"'\\\"'\\\"'\"),))\n242         if status:\n",
      "filename": "cpython\\Lib\\_osx_support.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 238,
      "line_range": [
        238,
        239,
        240,
        241
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "124         if ok is not NotImplemented:\n125             assert isinstance(ok, bool)\n126             if ok:\n",
      "filename": "cpython\\Lib\\_py_abc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 125,
      "line_range": [
        125
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "429                 self.close()\n430             except:\n431                 pass\n",
      "filename": "cpython\\Lib\\_pyio.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 430,
      "line_range": [
        430
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "2357             skip_back = 1\n2358             assert skip_bytes <= len(next_input)\n2359             while skip_bytes > 0:\n",
      "filename": "cpython\\Lib\\_pyio.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2358,
      "line_range": [
        2358
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "23             sys.stdin.close()\n24         except:\n25             pass\n",
      "filename": "cpython\\Lib\\_sitebuiltins.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "80                 while key is None:\n81                     key = input(prompt)\n82                     if key not in ('', 'q'):\n",
      "filename": "cpython\\Lib\\_sitebuiltins.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 81,
      "line_range": [
        81
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "14     # https://xkcd.com/426/\n15     h = hashlib.md5(datedow, usedforsecurity=False).hexdigest()\n16     p, q = [('%f' % float.fromhex('0.' + x)) for x in (h[:16], h[16:32])]\n",
      "filename": "cpython\\Lib\\antigravity.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "197         self._current_indent -= self._indent_increment\n198         assert self._current_indent >= 0, 'Indent decreased below 0.'\n199         self._level -= 1\n",
      "filename": "cpython\\Lib\\argparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 198,
      "line_range": [
        198
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "337                 pos_parts = _re.findall(part_regexp, pos_usage)\n338                 assert ' '.join(opt_parts) == opt_usage\n339                 assert ' '.join(pos_parts) == pos_usage\n",
      "filename": "cpython\\Lib\\argparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 338,
      "line_range": [
        338
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "338                 assert ' '.join(opt_parts) == opt_usage\n339                 assert ' '.join(pos_parts) == pos_usage\n340 \n341                 # helper for wrapping lines\n342                 def get_lines(parts, indent, prefix=None):\n",
      "filename": "cpython\\Lib\\argparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 339,
      "line_range": [
        339,
        340,
        341
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1997             # the Optional's string args stopped\n1998             assert action_tuples\n1999             for action, args, option_string in action_tuples:\n",
      "filename": "cpython\\Lib\\argparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1998,
      "line_range": [
        1998
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "44         major, minor = feature_version  # Should be a 2-tuple.\n45         assert major == 3\n46         feature_version = minor\n",
      "filename": "cpython\\Lib\\ast.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 45,
      "line_range": [
        45
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "17 from .streams import *\n18 from .subprocess import *\n19 from .tasks import *\n",
      "filename": "cpython\\Lib\\asyncio\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with * module.",
      "line_number": 18,
      "line_range": [
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "24 import stat\n25 import subprocess\n26 import threading\n",
      "filename": "cpython\\Lib\\asyncio\\base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 25,
      "line_range": [
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "291     def _attach(self):\n292         assert self._sockets is not None\n293         self._active_count += 1\n",
      "filename": "cpython\\Lib\\asyncio\\base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 292,
      "line_range": [
        292
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "295     def _detach(self):\n296         assert self._active_count > 0\n297         self._active_count -= 1\n",
      "filename": "cpython\\Lib\\asyncio\\base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 296,
      "line_range": [
        296
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1292                     if addr is not None:\n1293                         assert isinstance(addr, tuple) and len(addr) == 2, (\n1294                             '2-tuple is expected')\n1295 \n1296                         infos = await self._ensure_resolved(\n",
      "filename": "cpython\\Lib\\asyncio\\base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1293,
      "line_range": [
        1293,
        1294,
        1295
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1798         \"\"\"Add a Handle to _scheduled (TimerHandle) or _ready.\"\"\"\n1799         assert isinstance(handle, events.Handle), 'A Handle is required here'\n1800         if handle._cancelled:\n",
      "filename": "cpython\\Lib\\asyncio\\base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1799,
      "line_range": [
        1799
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1801             return\n1802         assert not isinstance(handle, events.TimerHandle)\n1803         self._ready.append(handle)\n",
      "filename": "cpython\\Lib\\asyncio\\base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1802,
      "line_range": [
        1802
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1 import collections\n2 import subprocess\n3 import warnings\n",
      "filename": "cpython\\Lib\\asyncio\\base_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "35         try:\n36             self._start(args=args, shell=shell, stdin=stdin, stdout=stdout,\n37                         stderr=stderr, bufsize=bufsize, **kwargs)\n38         except:\n",
      "filename": "cpython\\Lib\\asyncio\\base_subprocess.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with shell=True parameter identified, possible security issue.",
      "line_number": 36,
      "line_range": [
        36,
        37
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b604_any_other_function_with_shell_equals_true.html",
      "test_id": "B604",
      "test_name": "any_other_function_with_shell_equals_true"
    },
    {
      "code": "178 \n179             assert self._pending_calls is not None\n180 \n181             loop.call_soon(self._protocol.connection_made, self)\n",
      "filename": "cpython\\Lib\\asyncio\\base_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 179,
      "line_range": [
        179,
        180
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "207     def _process_exited(self, returncode):\n208         assert returncode is not None, returncode\n209         assert self._returncode is None, self._returncode\n",
      "filename": "cpython\\Lib\\asyncio\\base_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 208,
      "line_range": [
        208
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "208         assert returncode is not None, returncode\n209         assert self._returncode is None, self._returncode\n210         if self._loop.get_debug():\n",
      "filename": "cpython\\Lib\\asyncio\\base_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 209,
      "line_range": [
        209
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "237     def _try_finish(self):\n238         assert not self._finished\n239         if self._returncode is None:\n",
      "filename": "cpython\\Lib\\asyncio\\base_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 238,
      "line_range": [
        238
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "39     def __init__(self, gen, func=None):\n40         assert inspect.isgenerator(gen) or inspect.iscoroutine(gen), gen\n41         self.gen = gen\n",
      "filename": "cpython\\Lib\\asyncio\\coroutines.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 40,
      "line_range": [
        40
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "193 def _format_coroutine(coro):\n194     assert iscoroutine(coro)\n195 \n196     is_corowrapper = isinstance(coro, CoroWrapper)\n",
      "filename": "cpython\\Lib\\asyncio\\coroutines.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 194,
      "line_range": [
        194,
        195
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "16 import socket\n17 import subprocess\n18 import sys\n",
      "filename": "cpython\\Lib\\asyncio\\events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 17,
      "line_range": [
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "103     def __init__(self, when, callback, args, loop, context=None):\n104         assert when is not None\n105         super().__init__(callback, args, loop, context)\n",
      "filename": "cpython\\Lib\\asyncio\\events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 104,
      "line_range": [
        104
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "649         self._local._set_called = True\n650         assert loop is None or isinstance(loop, AbstractEventLoop)\n651         self._local._loop = loop\n",
      "filename": "cpython\\Lib\\asyncio\\events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 650,
      "line_range": [
        650
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "733     global _event_loop_policy\n734     assert policy is None or isinstance(policy, AbstractEventLoopPolicy)\n735     _event_loop_policy = policy\n",
      "filename": "cpython\\Lib\\asyncio\\events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 734,
      "line_range": [
        734
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "328     \"\"\"Copy state from a future to a concurrent.futures.Future.\"\"\"\n329     assert source.done()\n330     if source.cancelled():\n",
      "filename": "cpython\\Lib\\asyncio\\futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 329,
      "line_range": [
        329
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "346     \"\"\"\n347     assert source.done()\n348     if dest.cancelled():\n",
      "filename": "cpython\\Lib\\asyncio\\futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 347,
      "line_range": [
        347
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "349         return\n350     assert not dest.done()\n351     if source.cancelled():\n",
      "filename": "cpython\\Lib\\asyncio\\futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 350,
      "line_range": [
        350
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "407         return future\n408     assert isinstance(future, concurrent.futures.Future), \\\n409         f'concurrent.futures.Future is expected, got {future!r}'\n410     if loop is None:\n",
      "filename": "cpython\\Lib\\asyncio\\futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 408,
      "line_range": [
        408,
        409
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "250             # The protocol will be called on resume_reading().\n251             assert self._pending_data_length == -1\n252             self._pending_data_length = length\n",
      "filename": "cpython\\Lib\\asyncio\\proactor_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 251,
      "line_range": [
        251
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "276             if fut is not None:\n277                 assert self._read_fut is fut or (self._read_fut is None and\n278                                                  self._closing)\n279                 self._read_fut = None\n",
      "filename": "cpython\\Lib\\asyncio\\proactor_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 277,
      "line_range": [
        277,
        278
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "358         if self._write_fut is None:  # IDLE -> WRITING\n359             assert self._buffer is None\n360             # Pass a copy, except if it's already immutable.\n361             self._loop_writing(data=bytes(data))\n",
      "filename": "cpython\\Lib\\asyncio\\proactor_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 359,
      "line_range": [
        359,
        360
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "376                 return\n377             assert f is self._write_fut\n378             self._write_fut = None\n",
      "filename": "cpython\\Lib\\asyncio\\proactor_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 377,
      "line_range": [
        377
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "398                 if not self._write_fut.done():\n399                     assert self._pending_write == 0\n400                     self._pending_write = len(data)\n",
      "filename": "cpython\\Lib\\asyncio\\proactor_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 399,
      "line_range": [
        399
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "442             return\n443         assert fut.result() == b''\n444         if self._closing:\n",
      "filename": "cpython\\Lib\\asyncio\\proactor_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 443,
      "line_range": [
        443
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "444         if self._closing:\n445             assert self._read_fut is None\n446             return\n",
      "filename": "cpython\\Lib\\asyncio\\proactor_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 445,
      "line_range": [
        445
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "446             return\n447         assert fut is self._read_fut, (fut, self._read_fut)\n448         self._read_fut = None\n",
      "filename": "cpython\\Lib\\asyncio\\proactor_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 447,
      "line_range": [
        447
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "510 \n511             assert fut is self._write_fut\n512             self._write_fut = None\n",
      "filename": "cpython\\Lib\\asyncio\\proactor_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 511,
      "line_range": [
        511
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "544 \n545             assert self._read_fut is fut or (self._read_fut is None and\n546                                              self._closing)\n547 \n548             self._read_fut = None\n",
      "filename": "cpython\\Lib\\asyncio\\proactor_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 545,
      "line_range": [
        545,
        546,
        547
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "937     def _write_ready(self):\n938         assert self._buffer, 'Data should not be empty'\n939 \n940         if self._conn_lost:\n",
      "filename": "cpython\\Lib\\asyncio\\selector_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 938,
      "line_range": [
        938,
        939
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "122         ssldata, appdata = self.feed_ssldata(b'', only_handshake=True)\n123         assert len(appdata) == 0\n124         return ssldata\n",
      "filename": "cpython\\Lib\\asyncio\\sslproto.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 123,
      "line_range": [
        123
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "138             raise RuntimeError('shutdown in progress')\n139         assert self._state in (_WRAPPED, _DO_HANDSHAKE)\n140         self._state = _SHUTDOWN\n",
      "filename": "cpython\\Lib\\asyncio\\sslproto.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 139,
      "line_range": [
        139
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "142         ssldata, appdata = self.feed_ssldata(b'')\n143         assert appdata == [] or appdata == [b'']\n144         return ssldata\n",
      "filename": "cpython\\Lib\\asyncio\\sslproto.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 143,
      "line_range": [
        143
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "153         ssldata, appdata = self.feed_ssldata(b'')\n154         assert appdata == [] or appdata == [b'']\n155 \n",
      "filename": "cpython\\Lib\\asyncio\\sslproto.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 154,
      "line_range": [
        154
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "245         \"\"\"\n246         assert 0 <= offset <= len(data)\n247         if self._state == _UNWRAPPED:\n",
      "filename": "cpython\\Lib\\asyncio\\sslproto.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 246,
      "line_range": [
        246
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "689                     # We need to enable reading if it is paused!\n690                     assert self._sslpipe.need_ssldata\n691                     if self._transport._paused:\n",
      "filename": "cpython\\Lib\\asyncio\\sslproto.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 690,
      "line_range": [
        690
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "100         running_tasks.append(next_task)\n101         assert len(running_tasks) == this_index + 2\n102         # Prepare place to put this coroutine's exceptions if not won\n103         exceptions.append(None)\n",
      "filename": "cpython\\Lib\\asyncio\\staggered.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 101,
      "line_range": [
        101,
        102
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "103         exceptions.append(None)\n104         assert len(exceptions) == this_index + 1\n105 \n106         try:\n",
      "filename": "cpython\\Lib\\asyncio\\staggered.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 104,
      "line_range": [
        104,
        105
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "115             nonlocal winner_index, winner_result\n116             assert winner_index is None\n117             winner_index = this_index\n",
      "filename": "cpython\\Lib\\asyncio\\staggered.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 116,
      "line_range": [
        116
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "154     def pause_writing(self):\n155         assert not self._paused\n156         self._paused = True\n",
      "filename": "cpython\\Lib\\asyncio\\streams.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 155,
      "line_range": [
        155
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "160     def resume_writing(self):\n161         assert self._paused\n162         self._paused = False\n",
      "filename": "cpython\\Lib\\asyncio\\streams.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 161,
      "line_range": [
        161
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "193         waiter = self._drain_waiter\n194         assert waiter is None or waiter.cancelled()\n195         waiter = self._loop.create_future()\n",
      "filename": "cpython\\Lib\\asyncio\\streams.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 194,
      "line_range": [
        194
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "323         # drain() expects that the reader has an exception() method\n324         assert reader is None or isinstance(reader, StreamReader)\n325         self._reader = reader\n",
      "filename": "cpython\\Lib\\asyncio\\streams.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 324,
      "line_range": [
        324
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "454     def set_transport(self, transport):\n455         assert self._transport is None, 'Transport already set'\n456         self._transport = transport\n",
      "filename": "cpython\\Lib\\asyncio\\streams.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 455,
      "line_range": [
        455
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "471     def feed_data(self, data):\n472         assert not self._eof, 'feed_data after feed_eof'\n473 \n474         if not data:\n",
      "filename": "cpython\\Lib\\asyncio\\streams.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 472,
      "line_range": [
        472,
        473
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "506 \n507         assert not self._eof, '_wait_for_data after EOF'\n508 \n509         # Waiting for data while paused will make deadlock, so prevent it.\n510         # This is essential for readexactly(n) for case when n > self._limit.\n511         if self._paused:\n",
      "filename": "cpython\\Lib\\asyncio\\streams.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 507,
      "line_range": [
        507,
        508,
        509,
        510
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2 \n3 import subprocess\n4 import warnings\n",
      "filename": "cpython\\Lib\\asyncio\\subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "170         else:\n171             assert fd == 1\n172             stream = self.stdout\n",
      "filename": "cpython\\Lib\\asyncio\\subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 171,
      "line_range": [
        171
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "500     \"\"\"\n501     assert fs, 'Set of Futures is empty.'\n502     waiter = loop.create_future()\n",
      "filename": "cpython\\Lib\\asyncio\\tasks.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 501,
      "line_range": [
        501
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "265         super().__init__(extra)\n266         assert loop is not None\n267         self._loop = loop\n",
      "filename": "cpython\\Lib\\asyncio\\transports.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 266,
      "line_range": [
        266
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "10 import stat\n11 import subprocess\n12 import sys\n",
      "filename": "cpython\\Lib\\asyncio\\unix_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "222             ssl_handshake_timeout=None):\n223         assert server_hostname is None or isinstance(server_hostname, str)\n224         if ssl:\n",
      "filename": "cpython\\Lib\\asyncio\\unix_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 223,
      "line_range": [
        223
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "648     def write(self, data):\n649         assert isinstance(data, (bytes, bytearray, memoryview)), repr(data)\n650         if isinstance(data, bytearray):\n",
      "filename": "cpython\\Lib\\asyncio\\unix_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 649,
      "line_range": [
        649
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "683     def _write_ready(self):\n684         assert self._buffer, 'Data should not be empty'\n685 \n686         try:\n",
      "filename": "cpython\\Lib\\asyncio\\unix_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 684,
      "line_range": [
        684,
        685
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "716             return\n717         assert self._pipe\n718         self._closing = True\n",
      "filename": "cpython\\Lib\\asyncio\\unix_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 717,
      "line_range": [
        717
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "789             self._proc = subprocess.Popen(\n790                 args, shell=shell, stdin=stdin, stdout=stdout, stderr=stderr,\n791                 universal_newlines=False, bufsize=bufsize, **kwargs)\n792             if stdin_w is not None:\n793                 stdin.close()\n",
      "filename": "cpython\\Lib\\asyncio\\unix_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 790,
      "line_range": [
        789,
        790,
        791
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "991     def attach_loop(self, loop):\n992         assert loop is None or isinstance(loop, events.AbstractEventLoop)\n993 \n994         if self._loop is not None and loop is None and self._callbacks:\n",
      "filename": "cpython\\Lib\\asyncio\\unix_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 992,
      "line_range": [
        992,
        993
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1065     def _do_waitpid(self, expected_pid):\n1066         assert expected_pid > 0\n1067 \n1068         try:\n",
      "filename": "cpython\\Lib\\asyncio\\unix_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1066,
      "line_range": [
        1066,
        1067
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1141     def add_child_handler(self, pid, callback, *args):\n1142         assert self._forks, \"Must use the context manager\"\n1143 \n1144         with self._lock:\n",
      "filename": "cpython\\Lib\\asyncio\\unix_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1142,
      "line_range": [
        1142,
        1143
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1280     def _do_waitpid(self, expected_pid):\n1281         assert expected_pid > 0\n1282 \n1283         try:\n",
      "filename": "cpython\\Lib\\asyncio\\unix_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1281,
      "line_range": [
        1281,
        1282
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1388     def _do_waitpid(self, loop, expected_pid, callback, args):\n1389         assert expected_pid > 0\n1390 \n1391         try:\n",
      "filename": "cpython\\Lib\\asyncio\\unix_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1389,
      "line_range": [
        1389,
        1390
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1456 \n1457         assert watcher is None or isinstance(watcher, AbstractChildWatcher)\n1458 \n1459         if self._watcher is not None:\n",
      "filename": "cpython\\Lib\\asyncio\\unix_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1457,
      "line_range": [
        1457,
        1458
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "313         try:\n314             assert self._self_reading_future is None\n315             self.call_soon(self._loop_self_reading)\n",
      "filename": "cpython\\Lib\\asyncio\\windows_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 314,
      "line_range": [
        314
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "885         self._proc = windows_utils.Popen(\n886             args, shell=shell, stdin=stdin, stdout=stdout, stderr=stderr,\n887             bufsize=bufsize, **kwargs)\n888 \n889         def callback(f):\n",
      "filename": "cpython\\Lib\\asyncio\\windows_events.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with shell=True parameter identified, possible security issue.",
      "line_number": 886,
      "line_range": [
        885,
        886,
        887
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b604_any_other_function_with_shell_equals_true.html",
      "test_id": "B604",
      "test_name": "any_other_function_with_shell_equals_true"
    },
    {
      "code": "11 import os\n12 import subprocess\n13 import tempfile\n",
      "filename": "cpython\\Lib\\asyncio\\windows_utils.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "33     \"\"\"Like os.pipe() but with overlapped support and using handles not fds.\"\"\"\n34     address = tempfile.mktemp(\n35         prefix=r'\\\\.\\pipe\\python-pipe-{:d}-{:d}-'.format(\n36             os.getpid(), next(_mmap_counter)))\n37 \n",
      "filename": "cpython\\Lib\\asyncio\\windows_utils.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 34,
      "line_range": [
        34,
        35,
        36
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "130     def __init__(self, args, stdin=None, stdout=None, stderr=None, **kwds):\n131         assert not kwds.get('universal_newlines')\n132         assert kwds.get('bufsize', 0) == 0\n",
      "filename": "cpython\\Lib\\asyncio\\windows_utils.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 131,
      "line_range": [
        131
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "131         assert not kwds.get('universal_newlines')\n132         assert kwds.get('bufsize', 0) == 0\n133         stdin_rfd = stdout_wfd = stderr_wfd = None\n",
      "filename": "cpython\\Lib\\asyncio\\windows_utils.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 132,
      "line_range": [
        132
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "59     if altchars is not None:\n60         assert len(altchars) == 2, repr(altchars)\n61         return encoded.translate(bytes.maketrans(b'+/', altchars))\n",
      "filename": "cpython\\Lib\\base64.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 60,
      "line_range": [
        60
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "82         altchars = _bytes_from_decode_data(altchars)\n83         assert len(altchars) == 2, repr(altchars)\n84         s = s.translate(bytes.maketrans(altchars, b'+/'))\n",
      "filename": "cpython\\Lib\\base64.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 83,
      "line_range": [
        83
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "214         map01 = _bytes_from_decode_data(map01)\n215         assert len(map01) == 1, repr(map01)\n216         s = s.translate(bytes.maketrans(b'01', b'O' + map01))\n",
      "filename": "cpython\\Lib\\base64.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 215,
      "line_range": [
        215
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "598     print(repr(s2))\n599     assert s0 == s2\n600 \n",
      "filename": "cpython\\Lib\\base64.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 599,
      "line_range": [
        599
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "579         try:\n580             exec(cmd, globals, locals)\n581         except BdbQuit:\n",
      "filename": "cpython\\Lib\\bdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 580,
      "line_range": [
        580
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "599         try:\n600             return eval(expr, globals, locals)\n601         except BdbQuit:\n",
      "filename": "cpython\\Lib\\bdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 600,
      "line_range": [
        600
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "815             try:\n816                 val = eval(b.cond, frame.f_globals, frame.f_locals)\n817                 if val:\n",
      "filename": "cpython\\Lib\\bdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 816,
      "line_range": [
        816
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "99         try:\n100             exec(cmd, globals, locals)\n101         finally:\n",
      "filename": "cpython\\Lib\\cProfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 100,
      "line_range": [
        100
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "854         def f():\n855             exec(\"testing print_exception() -- <I>italics?</I>\")\n856         def g(f=f):\n",
      "filename": "cpython\\Lib\\cgi.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 855,
      "line_range": [
        855
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "310             self.file.flush()\n311         except: pass\n312 \n",
      "filename": "cpython\\Lib\\cgitb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 311,
      "line_range": [
        311
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "125                         try:\n126                             line = input(self.prompt)\n127                         except EOFError:\n",
      "filename": "cpython\\Lib\\cmd.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 126,
      "line_range": [
        126
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "89         try:\n90             exec(code, self.locals)\n91         except SystemExit:\n",
      "filename": "cpython\\Lib\\code.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 90,
      "line_range": [
        90
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "273         \"\"\"\n274         return input(prompt)\n275 \n",
      "filename": "cpython\\Lib\\code.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 274,
      "line_range": [
        274
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "429     code = f'lambda _cls, {arg_list}: _tuple_new(_cls, ({arg_list}))'\n430     __new__ = eval(code, namespace)\n431     __new__.__name__ = '__new__'\n",
      "filename": "cpython\\Lib\\collections\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 430,
      "line_range": [
        430
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "372         result_reader = self.result_queue._reader\n373         assert not self.thread_wakeup._closed\n374         wakeup_reader = self.thread_wakeup._reader\n",
      "filename": "cpython\\Lib\\concurrent\\futures\\process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 373,
      "line_range": [
        373
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "403             # (avoids marking the executor broken)\n404             assert self.is_shutting_down()\n405             p = self.processes.pop(result_item)\n",
      "filename": "cpython\\Lib\\concurrent\\futures\\process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 404,
      "line_range": [
        404
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "495             is_sync, cb = self._exit_callbacks.pop()\n496             assert is_sync\n497             try:\n",
      "filename": "cpython\\Lib\\contextlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 496,
      "line_range": [
        496
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "36 \n37     pickle(complex, pickle_complex, complex)\n38 \n",
      "filename": "cpython\\Lib\\copyreg.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 37,
      "line_range": [
        37
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "55 def _reduce_ex(self, proto):\n56     assert proto < 2\n57     cls = self.__class__\n",
      "filename": "cpython\\Lib\\copyreg.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 56,
      "line_range": [
        56
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "148         cls.__slotnames__ = names\n149     except:\n150         pass # But don't die if we can't\n",
      "filename": "cpython\\Lib\\copyreg.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 149,
      "line_range": [
        149
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "52 from ctypes import c_void_p, sizeof\n53 from subprocess import Popen, PIPE, DEVNULL\n54 \n55 # Executable bit size - 32 or 64\n56 # Used to filter the search in an archive by size, e.g., -X64\n57 AIX_ABI = sizeof(c_void_p) * 8\n",
      "filename": "cpython\\Lib\\ctypes\\_aix.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with Popen module.",
      "line_number": 53,
      "line_range": [
        53,
        54,
        55,
        56
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "107     ldr_headers = []\n108     p = Popen([\"/usr/bin/dump\", f\"-X{AIX_ABI}\", \"-H\", file],\n109         universal_newlines=True, stdout=PIPE, stderr=DEVNULL)\n110     # be sure to read to the end-of-file - getting all entries\n",
      "filename": "cpython\\Lib\\ctypes\\_aix.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 108,
      "line_range": [
        108,
        109
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "156     env = {}\n157     assert dyld_find('libSystem.dylib') == '/usr/lib/libSystem.dylib'\n158     assert dyld_find('System.framework/System') == '/System/Library/Frameworks/System.framework/System'\n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\dyld.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 157,
      "line_range": [
        157
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "157     assert dyld_find('libSystem.dylib') == '/usr/lib/libSystem.dylib'\n158     assert dyld_find('System.framework/System') == '/System/Library/Frameworks/System.framework/System'\n159 \n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\dyld.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 158,
      "line_range": [
        158
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "53         )\n54     assert dylib_info('completely/invalid') is None\n55     assert dylib_info('completely/invalide_debug') is None\n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\dylib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 54,
      "line_range": [
        54
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "54     assert dylib_info('completely/invalid') is None\n55     assert dylib_info('completely/invalide_debug') is None\n56     assert dylib_info('P/Foo.dylib') == d('P', 'Foo.dylib', 'Foo')\n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\dylib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 55,
      "line_range": [
        55
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "55     assert dylib_info('completely/invalide_debug') is None\n56     assert dylib_info('P/Foo.dylib') == d('P', 'Foo.dylib', 'Foo')\n57     assert dylib_info('P/Foo_debug.dylib') == d('P', 'Foo_debug.dylib', 'Foo', suffix='debug')\n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\dylib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 56,
      "line_range": [
        56
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "56     assert dylib_info('P/Foo.dylib') == d('P', 'Foo.dylib', 'Foo')\n57     assert dylib_info('P/Foo_debug.dylib') == d('P', 'Foo_debug.dylib', 'Foo', suffix='debug')\n58     assert dylib_info('P/Foo.A.dylib') == d('P', 'Foo.A.dylib', 'Foo', 'A')\n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\dylib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 57,
      "line_range": [
        57
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "57     assert dylib_info('P/Foo_debug.dylib') == d('P', 'Foo_debug.dylib', 'Foo', suffix='debug')\n58     assert dylib_info('P/Foo.A.dylib') == d('P', 'Foo.A.dylib', 'Foo', 'A')\n59     assert dylib_info('P/Foo_debug.A.dylib') == d('P', 'Foo_debug.A.dylib', 'Foo_debug', 'A')\n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\dylib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 58,
      "line_range": [
        58
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "58     assert dylib_info('P/Foo.A.dylib') == d('P', 'Foo.A.dylib', 'Foo', 'A')\n59     assert dylib_info('P/Foo_debug.A.dylib') == d('P', 'Foo_debug.A.dylib', 'Foo_debug', 'A')\n60     assert dylib_info('P/Foo.A_debug.dylib') == d('P', 'Foo.A_debug.dylib', 'Foo', 'A', 'debug')\n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\dylib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 59,
      "line_range": [
        59
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "59     assert dylib_info('P/Foo_debug.A.dylib') == d('P', 'Foo_debug.A.dylib', 'Foo_debug', 'A')\n60     assert dylib_info('P/Foo.A_debug.dylib') == d('P', 'Foo.A_debug.dylib', 'Foo', 'A', 'debug')\n61 \n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\dylib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 60,
      "line_range": [
        60
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "52         )\n53     assert framework_info('completely/invalid') is None\n54     assert framework_info('completely/invalid/_debug') is None\n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\framework.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 53,
      "line_range": [
        53
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "53     assert framework_info('completely/invalid') is None\n54     assert framework_info('completely/invalid/_debug') is None\n55     assert framework_info('P/F.framework') is None\n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\framework.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 54,
      "line_range": [
        54
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "54     assert framework_info('completely/invalid/_debug') is None\n55     assert framework_info('P/F.framework') is None\n56     assert framework_info('P/F.framework/_debug') is None\n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\framework.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 55,
      "line_range": [
        55
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "55     assert framework_info('P/F.framework') is None\n56     assert framework_info('P/F.framework/_debug') is None\n57     assert framework_info('P/F.framework/F') == d('P', 'F.framework/F', 'F')\n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\framework.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 56,
      "line_range": [
        56
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "56     assert framework_info('P/F.framework/_debug') is None\n57     assert framework_info('P/F.framework/F') == d('P', 'F.framework/F', 'F')\n58     assert framework_info('P/F.framework/F_debug') == d('P', 'F.framework/F_debug', 'F', suffix='debug')\n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\framework.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 57,
      "line_range": [
        57
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "57     assert framework_info('P/F.framework/F') == d('P', 'F.framework/F', 'F')\n58     assert framework_info('P/F.framework/F_debug') == d('P', 'F.framework/F_debug', 'F', suffix='debug')\n59     assert framework_info('P/F.framework/Versions') is None\n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\framework.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 58,
      "line_range": [
        58
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "58     assert framework_info('P/F.framework/F_debug') == d('P', 'F.framework/F_debug', 'F', suffix='debug')\n59     assert framework_info('P/F.framework/Versions') is None\n60     assert framework_info('P/F.framework/Versions/A') is None\n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\framework.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 59,
      "line_range": [
        59
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "59     assert framework_info('P/F.framework/Versions') is None\n60     assert framework_info('P/F.framework/Versions/A') is None\n61     assert framework_info('P/F.framework/Versions/A/F') == d('P', 'F.framework/Versions/A/F', 'F', 'A')\n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\framework.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 60,
      "line_range": [
        60
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "60     assert framework_info('P/F.framework/Versions/A') is None\n61     assert framework_info('P/F.framework/Versions/A/F') == d('P', 'F.framework/Versions/A/F', 'F', 'A')\n62     assert framework_info('P/F.framework/Versions/A/F_debug') == d('P', 'F.framework/Versions/A/F_debug', 'F', 'A', 'debug')\n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\framework.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 61,
      "line_range": [
        61
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "61     assert framework_info('P/F.framework/Versions/A/F') == d('P', 'F.framework/Versions/A/F', 'F', 'A')\n62     assert framework_info('P/F.framework/Versions/A/F_debug') == d('P', 'F.framework/Versions/A/F_debug', 'F', 'A', 'debug')\n63 \n",
      "filename": "cpython\\Lib\\ctypes\\macholib\\framework.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 62,
      "line_range": [
        62
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "78     def test_find_on_libpath(self):\n79         import subprocess\n80         import tempfile\n",
      "filename": "cpython\\Lib\\ctypes\\test\\test_find.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 79,
      "line_range": [
        79
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "82         try:\n83             p = subprocess.Popen(['gcc', '--version'], stdout=subprocess.PIPE,\n84                                  stderr=subprocess.DEVNULL)\n85             out, _ = p.communicate()\n",
      "filename": "cpython\\Lib\\ctypes\\test\\test_find.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 83,
      "line_range": [
        83,
        84
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "82         try:\n83             p = subprocess.Popen(['gcc', '--version'], stdout=subprocess.PIPE,\n84                                  stderr=subprocess.DEVNULL)\n85             out, _ = p.communicate()\n",
      "filename": "cpython\\Lib\\ctypes\\test\\test_find.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 83,
      "line_range": [
        83,
        84
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "98                    '-Wl,-soname,lib%s.so' % libname, srcname]\n99             out = subprocess.check_output(cmd)\n100             self.assertTrue(os.path.exists(dstname))\n",
      "filename": "cpython\\Lib\\ctypes\\test\\test_find.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 99,
      "line_range": [
        99
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3 import shutil\n4 import subprocess\n5 import sys\n",
      "filename": "cpython\\Lib\\ctypes\\test\\test_loading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "140                 with self.subTest(command):\n141                     subprocess.check_output(\n142                         [sys.executable, \"-c\",\n143                          \"from ctypes import *; import nt;\" + command],\n144                         cwd=tmp\n145                     )\n",
      "filename": "cpython\\Lib\\ctypes\\test\\test_loading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 141,
      "line_range": [
        141,
        142,
        143,
        144
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "149                     with self.assertRaises(subprocess.CalledProcessError):\n150                         subprocess.check_output(\n151                             [sys.executable, \"-c\",\n152                              \"from ctypes import *; import nt;\" + command],\n153                             cwd=tmp, stderr=subprocess.STDOUT,\n154                         )\n",
      "filename": "cpython\\Lib\\ctypes\\test\\test_loading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 150,
      "line_range": [
        150,
        151,
        152,
        153
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1 import unittest\n2 import pickle\n3 from ctypes import *\n",
      "filename": "cpython\\Lib\\ctypes\\test\\test_pickling.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "21     def loads(self, item):\n22         return pickle.loads(item)\n23 \n",
      "filename": "cpython\\Lib\\ctypes\\test\\test_pickling.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 22,
      "line_range": [
        22
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "37     a += 1 << num_bits\n38     assert a >= 0\n39     return a\n",
      "filename": "cpython\\Lib\\ctypes\\test\\test_prototypes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 38,
      "line_range": [
        38
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2 import shutil\n3 import subprocess\n4 import sys\n",
      "filename": "cpython\\Lib\\ctypes\\util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "123             try:\n124                 proc = subprocess.Popen(args,\n125                                         stdout=subprocess.PIPE,\n126                                         stderr=subprocess.STDOUT,\n127                                         env=env)\n128             except OSError:  # E.g. bad executable\n",
      "filename": "cpython\\Lib\\ctypes\\util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 124,
      "line_range": [
        124,
        125,
        126,
        127
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "158             try:\n159                 proc = subprocess.Popen((\"/usr/ccs/bin/dump\", \"-Lpv\", f),\n160                                         stdout=subprocess.PIPE,\n161                                         stderr=subprocess.DEVNULL)\n162             except OSError:  # E.g. command not found\n",
      "filename": "cpython\\Lib\\ctypes\\util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 159,
      "line_range": [
        159,
        160,
        161
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "180             try:\n181                 proc = subprocess.Popen((objdump, '-p', '-j', '.dynamic', f),\n182                                         stdout=subprocess.PIPE,\n183                                         stderr=subprocess.DEVNULL)\n184             except OSError:  # E.g. bad executable\n",
      "filename": "cpython\\Lib\\ctypes\\util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 181,
      "line_range": [
        181,
        182,
        183
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "211             try:\n212                 proc = subprocess.Popen(('/sbin/ldconfig', '-r'),\n213                                         stdout=subprocess.PIPE,\n214                                         stderr=subprocess.DEVNULL)\n215             except OSError:  # E.g. command not found\n",
      "filename": "cpython\\Lib\\ctypes\\util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 212,
      "line_range": [
        212,
        213,
        214
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "242             try:\n243                 proc = subprocess.Popen(args,\n244                                         stdout=subprocess.PIPE,\n245                                         stderr=subprocess.DEVNULL,\n246                                         env=env)\n247             except OSError:  # E.g. bad executable\n",
      "filename": "cpython\\Lib\\ctypes\\util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 243,
      "line_range": [
        243,
        244,
        245,
        246
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "288             try:\n289                 with subprocess.Popen(['/sbin/ldconfig', '-p'],\n290                                       stdin=subprocess.DEVNULL,\n291                                       stderr=subprocess.DEVNULL,\n292                                       stdout=subprocess.PIPE,\n293                                       env={'LC_ALL': 'C', 'LANG': 'C'}) as p:\n294                     res = re.search(regex, p.stdout.read())\n",
      "filename": "cpython\\Lib\\ctypes\\util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 289,
      "line_range": [
        289,
        290,
        291,
        292,
        293
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "310             try:\n311                 p = subprocess.Popen(cmd, stdout=subprocess.PIPE,\n312                                      stderr=subprocess.PIPE,\n313                                      universal_newlines=True)\n314                 out, _ = p.communicate()\n",
      "filename": "cpython\\Lib\\ctypes\\util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 311,
      "line_range": [
        311,
        312,
        313
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "322                     return os.fsdecode(file)\n323             except Exception:\n324                 pass  # result will be None\n",
      "filename": "cpython\\Lib\\ctypes\\util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 323,
      "line_range": [
        323
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "90             start_color()\n91         except:\n92             pass\n",
      "filename": "cpython\\Lib\\curses\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 91,
      "line_range": [
        91
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "400     ns = {}\n401     exec(txt, globals, ns)\n402     func = ns['__create_fn__'](**locals)\n",
      "filename": "cpython\\Lib\\dataclasses.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 401,
      "line_range": [
        401
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "52     \"year, month -> number of days in that month in that year.\"\n53     assert 1 <= month <= 12, month\n54     if month == 2 and _is_leap(year):\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 53,
      "line_range": [
        53
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "59     \"year, month -> number of days in year preceding first day of month.\"\n60     assert 1 <= month <= 12, 'month must be in 1..12'\n61     return _DAYS_BEFORE_MONTH[month] + (month > 2 and _is_leap(year))\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 60,
      "line_range": [
        60
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "64     \"year, month, day -> ordinal, considering 01-Jan-0001 as day 1.\"\n65     assert 1 <= month <= 12, 'month must be in 1..12'\n66     dim = _days_in_month(year, month)\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 65,
      "line_range": [
        65
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "66     dim = _days_in_month(year, month)\n67     assert 1 <= day <= dim, ('day must be in 1..%d' % dim)\n68     return (_days_before_year(year) +\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 67,
      "line_range": [
        67
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "77 # together 4 single years.\n78 assert _DI4Y == 4 * 365 + 1\n79 \n80 # Similarly, a 400-year cycle has an extra leap day over what we'd get from\n81 # pasting together 4 100-year cycles.\n82 assert _DI400Y == 4 * _DI100Y + 1\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 78,
      "line_range": [
        78,
        79,
        80,
        81
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "81 # pasting together 4 100-year cycles.\n82 assert _DI400Y == 4 * _DI100Y + 1\n83 \n84 # OTOH, a 100-year cycle has one fewer leap day than we'd get from\n85 # pasting together 25 4-year cycles.\n86 assert _DI100Y == 25 * _DI4Y - 1\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 82,
      "line_range": [
        82,
        83,
        84,
        85
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "85 # pasting together 25 4-year cycles.\n86 assert _DI100Y == 25 * _DI4Y - 1\n87 \n88 def _ord2ymd(n):\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 86,
      "line_range": [
        86,
        87
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "130     if n1 == 4 or n100 == 4:\n131         assert n == 0\n132         return year-1, 12, 31\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 131,
      "line_range": [
        131
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "136     leapyear = n1 == 3 and (n4 != 24 or n100 == 3)\n137     assert leapyear == _is_leap(year)\n138     month = (n + 50) >> 5\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 137,
      "line_range": [
        137
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "143     n -= preceding\n144     assert 0 <= n < _days_in_month(year, month)\n145 \n146     # Now the year and month are correct, and n is the offset from the\n147     # start of that month:  we're done!\n148     return year, month, n+1\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 144,
      "line_range": [
        144,
        145,
        146,
        147
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "242                                     zreplace = '%c%02d%02d' % (sign, h, m)\n243                     assert '%' not in zreplace\n244                     newformat.append(zreplace)\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 243,
      "line_range": [
        243
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "372 def _check_utc_offset(name, offset):\n373     assert name in (\"utcoffset\", \"dst\")\n374     if offset is None:\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 373,
      "line_range": [
        373
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "486             daysecondsfrac, daysecondswhole = _math.modf(dayfrac * (24.*3600.))\n487             assert daysecondswhole == int(daysecondswhole)  # can't overflow\n488             s = int(daysecondswhole)\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 487,
      "line_range": [
        487
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "488             s = int(daysecondswhole)\n489             assert days == int(days)\n490             d = int(days)\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 489,
      "line_range": [
        489
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "493             d = days\n494         assert isinstance(daysecondsfrac, float)\n495         assert abs(daysecondsfrac) <= 1.0\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 494,
      "line_range": [
        494
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "494         assert isinstance(daysecondsfrac, float)\n495         assert abs(daysecondsfrac) <= 1.0\n496         assert isinstance(d, int)\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 495,
      "line_range": [
        495
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "495         assert abs(daysecondsfrac) <= 1.0\n496         assert isinstance(d, int)\n497         assert abs(s) <= 24 * 3600\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 496,
      "line_range": [
        496
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "496         assert isinstance(d, int)\n497         assert abs(s) <= 24 * 3600\n498         # days isn't referenced again before redefinition\n499 \n500         if isinstance(seconds, float):\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 497,
      "line_range": [
        497,
        498,
        499
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "501             secondsfrac, seconds = _math.modf(seconds)\n502             assert seconds == int(seconds)\n503             seconds = int(seconds)\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 502,
      "line_range": [
        502
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "504             secondsfrac += daysecondsfrac\n505             assert abs(secondsfrac) <= 2.0\n506         else:\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 505,
      "line_range": [
        505
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "508         # daysecondsfrac isn't referenced again\n509         assert isinstance(secondsfrac, float)\n510         assert abs(secondsfrac) <= 2.0\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 509,
      "line_range": [
        509
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "509         assert isinstance(secondsfrac, float)\n510         assert abs(secondsfrac) <= 2.0\n511 \n512         assert isinstance(seconds, int)\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 510,
      "line_range": [
        510,
        511
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "511 \n512         assert isinstance(seconds, int)\n513         days, seconds = divmod(seconds, 24*3600)\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 512,
      "line_range": [
        512
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "515         s += int(seconds)    # can't overflow\n516         assert isinstance(s, int)\n517         assert abs(s) <= 2 * 24 * 3600\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 516,
      "line_range": [
        516
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "516         assert isinstance(s, int)\n517         assert abs(s) <= 2 * 24 * 3600\n518         # seconds isn't referenced again before redefinition\n519 \n520         usdouble = secondsfrac * 1e6\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 517,
      "line_range": [
        517,
        518,
        519
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "520         usdouble = secondsfrac * 1e6\n521         assert abs(usdouble) < 2.1e6    # exact value not critical\n522         # secondsfrac isn't referenced again\n523 \n524         if isinstance(microseconds, float):\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 521,
      "line_range": [
        521,
        522,
        523
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "536             microseconds = round(microseconds + usdouble)\n537         assert isinstance(s, int)\n538         assert isinstance(microseconds, int)\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 537,
      "line_range": [
        537
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "537         assert isinstance(s, int)\n538         assert isinstance(microseconds, int)\n539         assert abs(s) <= 3 * 24 * 3600\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 538,
      "line_range": [
        538
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "538         assert isinstance(microseconds, int)\n539         assert abs(s) <= 3 * 24 * 3600\n540         assert abs(microseconds) < 3.1e6\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 539,
      "line_range": [
        539
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "539         assert abs(s) <= 3 * 24 * 3600\n540         assert abs(microseconds) < 3.1e6\n541 \n542         # Just a little bit of carrying possible for microseconds and seconds.\n543         seconds, us = divmod(microseconds, 1000000)\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 540,
      "line_range": [
        540,
        541,
        542
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "547 \n548         assert isinstance(d, int)\n549         assert isinstance(s, int) and 0 <= s < 24*3600\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 548,
      "line_range": [
        548
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "548         assert isinstance(d, int)\n549         assert isinstance(s, int) and 0 <= s < 24*3600\n550         assert isinstance(us, int) and 0 <= us < 1000000\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 549,
      "line_range": [
        549
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "549         assert isinstance(s, int) and 0 <= s < 24*3600\n550         assert isinstance(us, int) and 0 <= us < 1000000\n551 \n552         if abs(d) > 999999999:\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 550,
      "line_range": [
        550,
        551
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "735     def _cmp(self, other):\n736         assert isinstance(other, timedelta)\n737         return _cmp(self._getstate(), other._getstate())\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 736,
      "line_range": [
        736
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "854         try:\n855             assert len(date_string) == 10\n856             return cls(*_parse_isoformat_date(date_string))\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 855,
      "line_range": [
        855
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1020     def _cmp(self, other):\n1021         assert isinstance(other, date)\n1022         y, m, d = self._year, self._month, self._day\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1021,
      "line_range": [
        1021
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1342     def _cmp(self, other, allow_mixed=False):\n1343         assert isinstance(other, time)\n1344         mytz = self._tzinfo\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1343,
      "line_range": [
        1343
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1382                               timedelta(hours=1))\n1383                 assert not m % timedelta(minutes=1), \"whole minute\"\n1384                 m //= timedelta(minutes=1)\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1383,
      "line_range": [
        1383
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1409         if self._tzinfo is not None:\n1410             assert s[-1:] == \")\"\n1411             s = s[:-1] + \", tzinfo=%r\" % self._tzinfo + \")\"\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1410,
      "line_range": [
        1410
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1412         if self._fold:\n1413             assert s[-1:] == \")\"\n1414             s = s[:-1] + \", fold=1)\"\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1413,
      "line_range": [
        1413
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1780             b = t1 - u1\n1781             assert a != b\n1782         u2 = t - b\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1781,
      "line_range": [
        1781
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1935         if self._tzinfo is not None:\n1936             assert s[-1:] == \")\"\n1937             s = s[:-1] + \", tzinfo=%r\" % self._tzinfo + \")\"\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1936,
      "line_range": [
        1936
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1938         if self._fold:\n1939             assert s[-1:] == \")\"\n1940             s = s[:-1] + \", fold=1)\"\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1939,
      "line_range": [
        1939
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2032     def _cmp(self, other, allow_mixed=False):\n2033         assert isinstance(other, datetime)\n2034         mytz = self._tzinfo\n",
      "filename": "cpython\\Lib\\datetime.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2033,
      "line_range": [
        2033
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "919     def _plain_replace(self, a, alo, ahi, b, blo, bhi):\n920         assert alo < ahi and blo < bhi\n921         # dump the shorter block first -- reduces the burden on short-term\n922         # memory if the blocks are of very different sizes\n923         if bhi - blo < ahi - alo:\n",
      "filename": "cpython\\Lib\\difflib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 920,
      "line_range": [
        920,
        921,
        922
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "16 import os\n17 import subprocess\n18 import winreg\n",
      "filename": "cpython\\Lib\\distutils\\_msvccompiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 17,
      "line_range": [
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "70     try:\n71         path = subprocess.check_output([\n72             os.path.join(root, \"Microsoft Visual Studio\", \"Installer\", \"vswhere.exe\"),\n73             \"-latest\",\n74             \"-prerelease\",\n75             \"-requires\", \"Microsoft.VisualStudio.Component.VC.Tools.x86.x64\",\n76             \"-property\", \"installationPath\",\n77             \"-products\", \"*\",\n78         ], encoding=\"mbcs\", errors=\"strict\").strip()\n79     except (subprocess.CalledProcessError, OSError, UnicodeDecodeError):\n",
      "filename": "cpython\\Lib\\distutils\\_msvccompiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 71,
      "line_range": [
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "124     try:\n125         out = subprocess.check_output(\n126             'cmd /u /c \"{}\" {} && set'.format(vcvarsall, plat_spec),\n127             stderr=subprocess.STDOUT,\n128         ).decode('utf-16le', errors='replace')\n",
      "filename": "cpython\\Lib\\distutils\\_msvccompiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 125,
      "line_range": [
        125,
        126,
        127
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "208         # multi-init means we would need to check platform same each time...\n209         assert not self.initialized, \"don't init multiple times\"\n210         if plat_name is None:\n",
      "filename": "cpython\\Lib\\distutils\\_msvccompiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 209,
      "line_range": [
        209
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "338                                         output_dir=outdir)\n339         assert len(objects) == len(sources)\n340 \n341         pp_opts = gen_preprocess_options(macros, incdirs)\n",
      "filename": "cpython\\Lib\\distutils\\ccompiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 339,
      "line_range": [
        339,
        340
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "403         objects = self.object_filenames(sources, output_dir=output_dir)\n404         assert len(objects) == len(sources)\n405 \n406         # Return an empty dict for the \"which source files can be skipped\"\n407         # return value to preserve API compatibility.\n408         return objects, {}\n",
      "filename": "cpython\\Lib\\distutils\\ccompiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 404,
      "line_range": [
        404,
        405,
        406,
        407
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "864     def shared_object_filename(self, basename, strip_dir=0, output_dir=''):\n865         assert output_dir is not None\n866         if strip_dir:\n",
      "filename": "cpython\\Lib\\distutils\\ccompiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 865,
      "line_range": [
        865
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "870     def executable_filename(self, basename, strip_dir=0, output_dir=''):\n871         assert output_dir is not None\n872         if strip_dir:\n",
      "filename": "cpython\\Lib\\distutils\\ccompiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 871,
      "line_range": [
        871
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "877                          strip_dir=0, output_dir=''):\n878         assert output_dir is not None\n879         if lib_type not in (\"static\", \"shared\", \"dylib\", \"xcode_stub\"):\n",
      "filename": "cpython\\Lib\\distutils\\ccompiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 878,
      "line_range": [
        878
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "208             if not target_version:\n209                 assert self.skip_build, \"Should have already checked this\"\n210                 target_version = '%d.%d' % sys.version_info[:2]\n",
      "filename": "cpython\\Lib\\distutils\\command\\bdist_msi.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 209,
      "line_range": [
        209
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "382             start += 4\n383             assert start < 500\n384 \n",
      "filename": "cpython\\Lib\\distutils\\command\\bdist_msi.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 383,
      "line_range": [
        383
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5 \n6 import subprocess, sys, os\n7 from distutils.core import Command\n",
      "filename": "cpython\\Lib\\distutils\\command\\bdist_rpm.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "339 \n340         out = os.popen(q_cmd)\n341         try:\n",
      "filename": "cpython\\Lib\\distutils\\command\\bdist_rpm.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 340,
      "line_range": [
        340
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "348                 l = line.strip().split()\n349                 assert(len(l) == 2)\n350                 binary_rpms.append(l[1])\n",
      "filename": "cpython\\Lib\\distutils\\command\\bdist_rpm.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 349,
      "line_range": [
        349
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "371                 srpm = os.path.join(rpm_dir['SRPMS'], source_rpm)\n372                 assert(os.path.exists(srpm))\n373                 self.move_file(srpm, self.dist_dir)\n",
      "filename": "cpython\\Lib\\distutils\\command\\bdist_rpm.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 372,
      "line_range": [
        372
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "153             if not target_version:\n154                 assert self.skip_build, \"Should have already checked this\"\n155                 target_version = '%d.%d' % sys.version_info[:2]\n",
      "filename": "cpython\\Lib\\distutils\\command\\bdist_wininst.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 154,
      "line_range": [
        154
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "184         from tempfile import mktemp\n185         archive_basename = mktemp()\n186         fullname = self.distribution.get_fullname()\n",
      "filename": "cpython\\Lib\\distutils\\command\\bdist_wininst.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 185,
      "line_range": [
        185
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "62                 self.optimize = int(self.optimize)\n63                 assert 0 <= self.optimize <= 2\n64             except (ValueError, AssertionError):\n",
      "filename": "cpython\\Lib\\distutils\\command\\build_py.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 63,
      "line_range": [
        63
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "370             for (package_, module, module_file) in modules:\n371                 assert package == package_\n372                 self.build_module(module, module_file, package)\n",
      "filename": "cpython\\Lib\\distutils\\command\\build_py.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 371,
      "line_range": [
        371
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "88         url = self.repository+'?:action=list_classifiers'\n89         response = urllib.request.urlopen(url)\n90         log.info(self._read_pypi_response(response))\n",
      "filename": "cpython\\Lib\\distutils\\command\\register.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 89,
      "line_range": [
        89
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "146 Your selection [default 1]: ''', log.INFO)\n147             choice = input()\n148             if not choice:\n",
      "filename": "cpython\\Lib\\distutils\\command\\register.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 147,
      "line_range": [
        147
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "155             while not username:\n156                 username = input('Username: ')\n157             while not password:\n",
      "filename": "cpython\\Lib\\distutils\\command\\register.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 156,
      "line_range": [
        156
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "182                     while choice.lower() not in 'yn':\n183                         choice = input('Save your login (y/N)?')\n184                         if not choice:\n",
      "filename": "cpython\\Lib\\distutils\\command\\register.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 183,
      "line_range": [
        183
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "193             while not data['name']:\n194                 data['name'] = input('Username: ')\n195             while data['password'] != data['confirm']:\n",
      "filename": "cpython\\Lib\\distutils\\command\\register.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 194,
      "line_range": [
        194
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "204             while not data['email']:\n205                 data['email'] = input('   EMail: ')\n206             code, result = self.post_to_server(data)\n",
      "filename": "cpython\\Lib\\distutils\\command\\register.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 205,
      "line_range": [
        205
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "216             while not data['email']:\n217                 data['email'] = input('Your email address: ')\n218             code, result = self.post_to_server(data)\n",
      "filename": "cpython\\Lib\\distutils\\command\\register.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 217,
      "line_range": [
        217
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "193         try:\n194             result = urlopen(request)\n195             status = result.getcode()\n",
      "filename": "cpython\\Lib\\distutils\\command\\upload.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 194,
      "line_range": [
        194
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "214             with open(script_name, 'rb') as f:\n215                 exec(f.read(), g)\n216         finally:\n",
      "filename": "cpython\\Lib\\distutils\\core.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 215,
      "line_range": [
        215
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "50 import copy\n51 from subprocess import Popen, PIPE, check_output\n52 import re\n",
      "filename": "cpython\\Lib\\distutils\\cygwinccompiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with Popen module.",
      "line_number": 51,
      "line_range": [
        51
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "379         return None\n380     out = Popen(cmd, shell=True, stdout=PIPE).stdout\n381     try:\n",
      "filename": "cpython\\Lib\\distutils\\cygwinccompiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 380,
      "line_range": [
        380
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "401     '''Try to determine if the gcc that would be used is from cygwin.'''\n402     out_string = check_output(['gcc', '-dumpmachine'])\n403     return out_string.strip().endswith(b'cygwin')\n",
      "filename": "cpython\\Lib\\distutils\\cygwinccompiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 402,
      "line_range": [
        402
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "401     '''Try to determine if the gcc that would be used is from cygwin.'''\n402     out_string = check_output(['gcc', '-dumpmachine'])\n403     return out_string.strip().endswith(b'cygwin')\n",
      "filename": "cpython\\Lib\\distutils\\cygwinccompiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 402,
      "line_range": [
        402
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "110     def _check_alias_dict(self, aliases, what):\n111         assert isinstance(aliases, dict)\n112         for (alias, opt) in aliases.items():\n",
      "filename": "cpython\\Lib\\distutils\\fancy_getopt.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 111,
      "line_range": [
        111
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "240             else:\n241                 assert len(opt) > 2 and opt[:2] == '--'\n242                 opt = opt[2:]\n",
      "filename": "cpython\\Lib\\distutils\\fancy_getopt.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 241,
      "line_range": [
        241
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "248             if not self.takes_arg[opt]:     # boolean option?\n249                 assert val == '', \"boolean option can't have value\"\n250                 alias = self.negative_alias.get(opt)\n",
      "filename": "cpython\\Lib\\distutils\\fancy_getopt.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 249,
      "line_range": [
        249
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "309         pattern_re = glob_to_re(pattern)\n310         assert pattern_re.startswith(start) and pattern_re.endswith(end)\n311     else:\n",
      "filename": "cpython\\Lib\\distutils\\filelist.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 310,
      "line_range": [
        310
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "315         prefix_re = glob_to_re(prefix)\n316         assert prefix_re.startswith(start) and prefix_re.endswith(end)\n317         prefix_re = prefix_re[len(start): len(prefix_re) - len(end)]\n",
      "filename": "cpython\\Lib\\distutils\\filelist.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 316,
      "line_range": [
        316
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "15 import os\n16 import subprocess\n17 import sys\n",
      "filename": "cpython\\Lib\\distutils\\msvc9compiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 16,
      "line_range": [
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "261     log.debug(\"Calling 'vcvarsall.bat %s' (version=%s)\", arch, version)\n262     popen = subprocess.Popen('\"%s\" %s & set' % (vcvarsall, arch),\n263                              stdout=subprocess.PIPE,\n264                              stderr=subprocess.PIPE)\n265     try:\n",
      "filename": "cpython\\Lib\\distutils\\msvc9compiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 262,
      "line_range": [
        262,
        263,
        264
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "340         # multi-init means we would need to check platform same each time...\n341         assert not self.initialized, \"don't init multiple times\"\n342         if plat_name is None:\n",
      "filename": "cpython\\Lib\\distutils\\msvc9compiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 341,
      "line_range": [
        341
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "10 import os\n11 import subprocess\n12 \n13 from distutils.errors import DistutilsPlatformError, DistutilsExecError\n",
      "filename": "cpython\\Lib\\distutils\\spawn.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 11,
      "line_range": [
        11,
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "74     try:\n75         proc = subprocess.Popen(cmd, env=env)\n76         proc.wait()\n",
      "filename": "cpython\\Lib\\distutils\\spawn.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 75,
      "line_range": [
        75
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "296                 make_archive('xxx', 'xxx', root_dir=self.mkdtemp())\n297             except:\n298                 pass\n",
      "filename": "cpython\\Lib\\distutils\\tests\\test_archive_util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 297,
      "line_range": [
        297
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "24         else:\n25             self.stdout = os.popen(cmd, 'r')\n26 \n",
      "filename": "cpython\\Lib\\distutils\\tests\\test_cygwinccompiler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 25,
      "line_range": [
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "31 \n32         os.chmod(exe, 0o777)\n33         self.assertRaises(DistutilsExecError, spawn, [exe])\n",
      "filename": "cpython\\Lib\\distutils\\tests\\test_spawn.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0o777 on file (exe).",
      "line_number": 32,
      "line_range": [
        32
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "42 \n43         os.chmod(exe, 0o777)\n44         spawn([exe])  # should work without any error\n",
      "filename": "cpython\\Lib\\distutils\\tests\\test_spawn.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0o777 on file (exe).",
      "line_number": 43,
      "line_range": [
        43
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "4 import shutil\n5 import subprocess\n6 import sys\n",
      "filename": "cpython\\Lib\\distutils\\tests\\test_sysconfig.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "261                 '''))\n262         p = subprocess.Popen([str(sys.executable), TESTFN],\n263                 stdout=subprocess.PIPE,\n264                 stderr=subprocess.STDOUT,\n265                 universal_newlines=True)\n266         outs, errs = p.communicate()\n",
      "filename": "cpython\\Lib\\distutils\\tests\\test_sysconfig.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 262,
      "line_range": [
        262,
        263,
        264,
        265
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "358     # setup.py, but setup.py uses distutils.\n359     import subprocess\n360 \n361     # nothing is done if sys.dont_write_bytecode is True\n362     if sys.dont_write_bytecode:\n",
      "filename": "cpython\\Lib\\distutils\\util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 359,
      "line_range": [
        359,
        360,
        361
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "385             from tempfile import mktemp\n386             (script_fd, script_name) = None, mktemp(\".py\")\n387         log.info(\"writing byte-compilation script '%s'\", script_name)\n",
      "filename": "cpython\\Lib\\distutils\\util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 386,
      "line_range": [
        386
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "199         else:\n200             assert False, \"never get here\"\n201 \n",
      "filename": "cpython\\Lib\\distutils\\version.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 200,
      "line_range": [
        200
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "280     ws = want.split(ELLIPSIS_MARKER)\n281     assert len(ws) >= 2\n282 \n283     # Deal with exact matches possibly needed at one or both ends.\n284     startpos, endpos = 0, len(got)\n",
      "filename": "cpython\\Lib\\doctest.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 281,
      "line_range": [
        281,
        282,
        283
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "532         \"\"\"\n533         assert not isinstance(examples, str), \\\n534                \"DocTest no longer accepts str; use DocTestParser instead\"\n535         self.examples = examples\n",
      "filename": "cpython\\Lib\\doctest.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 533,
      "line_range": [
        533,
        534
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1335                 # Don't blink!  This is where the user's code gets run.\n1336                 exec(compile(example.source, filename, \"single\",\n1337                              compileflags, True), test.globs)\n1338                 self.debugger.set_continue() # ==== Example Finished ====\n",
      "filename": "cpython\\Lib\\doctest.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 1336,
      "line_range": [
        1336,
        1337
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1391             else:\n1392                 assert False, (\"unknown outcome\", outcome)\n1393 \n",
      "filename": "cpython\\Lib\\doctest.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1392,
      "line_range": [
        1392
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1516             name, (f, t) = x\n1517             assert f <= t\n1518             totalt += t\n",
      "filename": "cpython\\Lib\\doctest.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1517,
      "line_range": [
        1517
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1699             else:\n1700                 assert 0, 'Bad diff option'\n1701             return 'Differences (%s):\\n' % kind + _indent(''.join(diff))\n",
      "filename": "cpython\\Lib\\doctest.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1700,
      "line_range": [
        1700
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2628         try:\n2629             exec(src, globs, globs)\n2630         except:\n",
      "filename": "cpython\\Lib\\doctest.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 2629,
      "line_range": [
        2629
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "2468                 token, rest = get_extended_attrtext(inner_value)\n2469             except:\n2470                 pass\n",
      "filename": "cpython\\Lib\\email\\_header_value_parser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 2469,
      "line_range": [
        2469
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "2496             if remainder is not None:\n2497                 assert not value, value\n2498                 value = remainder\n",
      "filename": "cpython\\Lib\\email\\_header_value_parser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2497,
      "line_range": [
        2497
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2548     if remainder is not None:\n2549         assert not value, value\n2550         value = remainder\n",
      "filename": "cpython\\Lib\\email\\_header_value_parser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2549,
      "line_range": [
        2549
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "262         \"\"\"\n263         assert self.body_encoding != SHORTEST\n264         if self.body_encoding == QP:\n",
      "filename": "cpython\\Lib\\email\\charset.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 263,
      "line_range": [
        263
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "97         # Let the consumer push a line back into the buffer.\n98         assert line is not NeedMoreData\n99         self._lines.appendleft(line)\n",
      "filename": "cpython\\Lib\\email\\feedparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 98,
      "line_range": [
        98
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "188         root = self._pop_message()\n189         assert not self._msgstack\n190         # Look for final set of defects\n191         if root.get_content_maintype() == 'multipart' \\\n",
      "filename": "cpython\\Lib\\email\\feedparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 189,
      "line_range": [
        189,
        190
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "416                     # I think we must be in the preamble\n417                     assert capturing_preamble\n418                     preamble.append(line)\n",
      "filename": "cpython\\Lib\\email\\feedparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 417,
      "line_range": [
        417
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "523 \n524             assert i>0, \"_parse_headers fed line with no : and no leading WS\"\n525             lastheader = line[:i]\n",
      "filename": "cpython\\Lib\\email\\feedparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 524,
      "line_range": [
        524
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "376         # boundary doesn't appear in the text.\n377         token = random.randrange(sys.maxsize)\n378         boundary = ('=' * 15) + (_fmt % token) + '=='\n",
      "filename": "cpython\\Lib\\email\\generator.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 377,
      "line_range": [
        377
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "337         address_list, value = parser.get_address_list(value)\n338         assert not value, 'this should not happen'\n339         return address_list\n",
      "filename": "cpython\\Lib\\email\\headerregistry.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 338,
      "line_range": [
        338
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "13 def base64_encode(input, errors='strict'):\n14     assert errors == 'strict'\n15     return (base64.encodebytes(input), len(input))\n",
      "filename": "cpython\\Lib\\encodings\\base64_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "17 def base64_decode(input, errors='strict'):\n18     assert errors == 'strict'\n19     return (base64.decodebytes(input), len(input))\n",
      "filename": "cpython\\Lib\\encodings\\base64_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 18,
      "line_range": [
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "28     def encode(self, input, final=False):\n29         assert self.errors == 'strict'\n30         return base64.encodebytes(input)\n",
      "filename": "cpython\\Lib\\encodings\\base64_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 29,
      "line_range": [
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "33     def decode(self, input, final=False):\n34         assert self.errors == 'strict'\n35         return base64.decodebytes(input)\n",
      "filename": "cpython\\Lib\\encodings\\base64_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 34,
      "line_range": [
        34
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "15 def bz2_encode(input, errors='strict'):\n16     assert errors == 'strict'\n17     return (bz2.compress(input), len(input))\n",
      "filename": "cpython\\Lib\\encodings\\bz2_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 16,
      "line_range": [
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "19 def bz2_decode(input, errors='strict'):\n20     assert errors == 'strict'\n21     return (bz2.decompress(input), len(input))\n",
      "filename": "cpython\\Lib\\encodings\\bz2_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 20,
      "line_range": [
        20
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "30     def __init__(self, errors='strict'):\n31         assert errors == 'strict'\n32         self.errors = errors\n",
      "filename": "cpython\\Lib\\encodings\\bz2_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 31,
      "line_range": [
        31
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "46     def __init__(self, errors='strict'):\n47         assert errors == 'strict'\n48         self.errors = errors\n",
      "filename": "cpython\\Lib\\encodings\\bz2_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 47,
      "line_range": [
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "13 def hex_encode(input, errors='strict'):\n14     assert errors == 'strict'\n15     return (binascii.b2a_hex(input), len(input))\n",
      "filename": "cpython\\Lib\\encodings\\hex_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "17 def hex_decode(input, errors='strict'):\n18     assert errors == 'strict'\n19     return (binascii.a2b_hex(input), len(input))\n",
      "filename": "cpython\\Lib\\encodings\\hex_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 18,
      "line_range": [
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "28     def encode(self, input, final=False):\n29         assert self.errors == 'strict'\n30         return binascii.b2a_hex(input)\n",
      "filename": "cpython\\Lib\\encodings\\hex_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 29,
      "line_range": [
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "33     def decode(self, input, final=False):\n34         assert self.errors == 'strict'\n35         return binascii.a2b_hex(input)\n",
      "filename": "cpython\\Lib\\encodings\\hex_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 34,
      "line_range": [
        34
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "10 def quopri_encode(input, errors='strict'):\n11     assert errors == 'strict'\n12     f = BytesIO(input)\n",
      "filename": "cpython\\Lib\\encodings\\quopri_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "17 def quopri_decode(input, errors='strict'):\n18     assert errors == 'strict'\n19     f = BytesIO(input)\n",
      "filename": "cpython\\Lib\\encodings\\quopri_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 18,
      "line_range": [
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "16 def uu_encode(input, errors='strict', filename='<data>', mode=0o666):\n17     assert errors == 'strict'\n18     infile = BytesIO(input)\n",
      "filename": "cpython\\Lib\\encodings\\uu_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 17,
      "line_range": [
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "37 def uu_decode(input, errors='strict'):\n38     assert errors == 'strict'\n39     infile = BytesIO(input)\n",
      "filename": "cpython\\Lib\\encodings\\uu_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 38,
      "line_range": [
        38
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "13 def zlib_encode(input, errors='strict'):\n14     assert errors == 'strict'\n15     return (zlib.compress(input), len(input))\n",
      "filename": "cpython\\Lib\\encodings\\zlib_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "17 def zlib_decode(input, errors='strict'):\n18     assert errors == 'strict'\n19     return (zlib.decompress(input), len(input))\n",
      "filename": "cpython\\Lib\\encodings\\zlib_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 18,
      "line_range": [
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "28     def __init__(self, errors='strict'):\n29         assert errors == 'strict'\n30         self.errors = errors\n",
      "filename": "cpython\\Lib\\encodings\\zlib_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 29,
      "line_range": [
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "44     def __init__(self, errors='strict'):\n45         assert errors == 'strict'\n46         self.errors = errors\n",
      "filename": "cpython\\Lib\\encodings\\zlib_codec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 45,
      "line_range": [
        45
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5 import tempfile\n6 import subprocess\n7 from importlib import resources\n",
      "filename": "cpython\\Lib\\ensurepip\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "37 \"\"\"\n38     return subprocess.run([sys.executable, \"-c\", code], check=True).returncode\n39 \n",
      "filename": "cpython\\Lib\\ensurepip\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 38,
      "line_range": [
        38
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "423         if o == '-b': backup = a\n424     for line in input(args, inplace=inplace, backup=backup):\n425         if line[-1:] == '\\n': line = line[:-1]\n",
      "filename": "cpython\\Lib\\fileinput.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 424,
      "line_range": [
        424
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "137             add(re.escape(c))\n138     assert i == n\n139 \n140     # Deal with STARs.\n141     inp = res\n",
      "filename": "cpython\\Lib\\fnmatch.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 138,
      "line_range": [
        138,
        139,
        140
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "163     while i < n:\n164         assert inp[i] is STAR\n165         i += 1\n",
      "filename": "cpython\\Lib\\fnmatch.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 164,
      "line_range": [
        164
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "168             break\n169         assert inp[i] is not STAR\n170         fixed = []\n",
      "filename": "cpython\\Lib\\fnmatch.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 169,
      "line_range": [
        169
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "180             add(f\"(?=(?P<g{groupnum}>.*?{fixed}))(?P=g{groupnum})\")\n181     assert i == n\n182     res = \"\".join(res)\n",
      "filename": "cpython\\Lib\\fnmatch.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 181,
      "line_range": [
        181
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "106 \n107     def __init__(self, host='', user='', passwd='', acct='',\n108                  timeout=_GLOBAL_DEFAULT_TIMEOUT, source_address=None, *,\n109                  encoding='utf-8'):\n110         \"\"\"Initialization method (called by class instantiation).\n111         Initialize host to localhost, port to standard ftp port.\n112         Optional arguments are host (for connect()),\n113         and user, passwd, acct (for login()).\n114         \"\"\"\n115         self.encoding = encoding\n116         self.source_address = source_address\n117         self.timeout = timeout\n118         if host:\n119             self.connect(host)\n120             if user:\n121                 self.login(user, passwd, acct)\n122 \n123     def __enter__(self):\n",
      "filename": "cpython\\Lib\\ftplib.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: ''",
      "line_number": 107,
      "line_range": [
        107,
        108,
        109,
        110,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        122
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b107_hardcoded_password_default.html",
      "test_id": "B107",
      "test_name": "hardcoded_password_default"
    },
    {
      "code": "387 \n388     def login(self, user = '', passwd = '', acct = ''):\n389         '''Login, default anonymous.'''\n390         if not user:\n391             user = 'anonymous'\n392         if not passwd:\n393             passwd = ''\n394         if not acct:\n395             acct = ''\n396         if user == 'anonymous' and passwd in {'', '-'}:\n397             # If there is no anonymous ftp password specified\n398             # then we'll just use anonymous@\n399             # We don't send any other thing because:\n400             # - We want to remain anonymous\n401             # - We want to stop SPAM\n402             # - We don't want to let ftp sites to discriminate by the user,\n403             #   host or country.\n404             passwd = passwd + 'anonymous@'\n405         resp = self.sendcmd('USER ' + user)\n406         if resp[0] == '3':\n407             resp = self.sendcmd('PASS ' + passwd)\n408         if resp[0] == '3':\n409             resp = self.sendcmd('ACCT ' + acct)\n410         if resp[0] != '2':\n411             raise error_reply(resp)\n412         return resp\n413 \n414     def retrbinary(self, cmd, callback, blocksize=8192, rest=None):\n",
      "filename": "cpython\\Lib\\ftplib.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: ''",
      "line_number": 388,
      "line_range": [
        388,
        389,
        390,
        391,
        392,
        393,
        394,
        395,
        396,
        397,
        398,
        399,
        400,
        401,
        402,
        403,
        404,
        405,
        406,
        407,
        408,
        409,
        410,
        411,
        412,
        413
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b107_hardcoded_password_default.html",
      "test_id": "B107",
      "test_name": "hardcoded_password_default"
    },
    {
      "code": "710 \n711         def __init__(self, host='', user='', passwd='', acct='',\n712                      keyfile=None, certfile=None, context=None,\n713                      timeout=_GLOBAL_DEFAULT_TIMEOUT, source_address=None, *,\n714                      encoding='utf-8'):\n715             if context is not None and keyfile is not None:\n716                 raise ValueError(\"context and keyfile arguments are mutually \"\n717                                  \"exclusive\")\n718             if context is not None and certfile is not None:\n719                 raise ValueError(\"context and certfile arguments are mutually \"\n720                                  \"exclusive\")\n721             if keyfile is not None or certfile is not None:\n722                 import warnings\n723                 warnings.warn(\"keyfile and certfile are deprecated, use a \"\n724                               \"custom context instead\", DeprecationWarning, 2)\n725             self.keyfile = keyfile\n726             self.certfile = certfile\n727             if context is None:\n728                 context = ssl._create_stdlib_context(self.ssl_version,\n729                                                      certfile=certfile,\n730                                                      keyfile=keyfile)\n731             self.context = context\n732             self._prot_p = False\n733             super().__init__(host, user, passwd, acct,\n734                              timeout, source_address, encoding=encoding)\n735 \n736         def login(self, user='', passwd='', acct='', secure=True):\n",
      "filename": "cpython\\Lib\\ftplib.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: ''",
      "line_number": 711,
      "line_range": [
        711,
        712,
        713,
        714,
        715,
        716,
        717,
        718,
        719,
        720,
        721,
        722,
        723,
        724,
        725,
        726,
        727,
        728,
        729,
        730,
        731,
        732,
        733,
        734,
        735
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b107_hardcoded_password_default.html",
      "test_id": "B107",
      "test_name": "hardcoded_password_default"
    },
    {
      "code": "735 \n736         def login(self, user='', passwd='', acct='', secure=True):\n737             if secure and not isinstance(self.sock, ssl.SSLSocket):\n738                 self.auth()\n739             return super().login(user, passwd, acct)\n740 \n741         def auth(self):\n",
      "filename": "cpython\\Lib\\ftplib.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: ''",
      "line_number": 736,
      "line_range": [
        736,
        737,
        738,
        739,
        740
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b107_hardcoded_password_default.html",
      "test_id": "B107",
      "test_name": "hardcoded_password_default"
    },
    {
      "code": "184         raise GetoptError(_('option --%s not a unique prefix') % opt, opt)\n185     assert len(possibilities) == 1\n186     unique_match = possibilities[0]\n",
      "filename": "cpython\\Lib\\getopt.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 185,
      "line_range": [
        185
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "198         ns = {'_as_int': _as_int}\n199         exec('''if True:\n200             def func(n):\n201                 if not isinstance(n, int):\n202                     n = _as_int(n)\n203                 return int(%s)\n204             ''' % result, ns)\n205         return ns['func']\n",
      "filename": "cpython\\Lib\\gettext.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 199,
      "line_range": [
        199,
        200,
        201,
        202,
        203,
        204
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "53     if not has_magic(pathname):\n54         assert not dironly\n55         if basename:\n",
      "filename": "cpython\\Lib\\glob.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 54,
      "line_range": [
        54
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "119 def _glob2(dirname, pattern, dir_fd, dironly):\n120     assert _isrecursive(pattern)\n121     yield pattern[:0]\n",
      "filename": "cpython\\Lib\\glob.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 120,
      "line_range": [
        120
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "181                 else:\n182                     assert False, f\"node {node!r}: unknown status {stat}\"\n183 \n",
      "filename": "cpython\\Lib\\graphlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 182,
      "line_range": [
        182
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "241             else:\n242                 assert 0, \"interesting.search() lied\"\n243         # end while\n",
      "filename": "cpython\\Lib\\html\\parser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 242,
      "line_range": [
        242
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "256         rawdata = self.rawdata\n257         assert rawdata[i:i+2] == '<!', ('unexpected call to '\n258                                         'parse_html_declaration()')\n259         if rawdata[i:i+4] == '<!--':\n",
      "filename": "cpython\\Lib\\html\\parser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 257,
      "line_range": [
        257,
        258
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "277         rawdata = self.rawdata\n278         assert rawdata[i:i+2] in ('<!', '</'), ('unexpected call to '\n279                                                 'parse_comment()')\n280         pos = rawdata.find('>', i+2)\n",
      "filename": "cpython\\Lib\\html\\parser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 278,
      "line_range": [
        278,
        279
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "289         rawdata = self.rawdata\n290         assert rawdata[i:i+2] == '<?', 'unexpected call to parse_pi()'\n291         match = piclose.search(rawdata, i+2) # >\n",
      "filename": "cpython\\Lib\\html\\parser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 290,
      "line_range": [
        290
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "310         match = tagfind_tolerant.match(rawdata, i+1)\n311         assert match, 'unexpected call to parse_starttag()'\n312         k = match.end()\n",
      "filename": "cpython\\Lib\\html\\parser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 311,
      "line_range": [
        311
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "386         rawdata = self.rawdata\n387         assert rawdata[i:i+2] == \"</\", \"unexpected call to parse_endtag\"\n388         match = endendtag.search(rawdata, i+1) # >\n",
      "filename": "cpython\\Lib\\html\\parser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 387,
      "line_range": [
        387
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "574     def _read_chunked(self, amt=None):\n575         assert self.chunked != _UNKNOWN\n576         value = []\n",
      "filename": "cpython\\Lib\\http\\client.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 575,
      "line_range": [
        575
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "596     def _readinto_chunked(self, b):\n597         assert self.chunked != _UNKNOWN\n598         total_bytes = 0\n",
      "filename": "cpython\\Lib\\http\\client.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 597,
      "line_range": [
        597
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1365                 raise\n1366             assert response.will_close != _UNKNOWN\n1367             self.__state = _CS_IDLE\n",
      "filename": "cpython\\Lib\\http\\client.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1366,
      "line_range": [
        1366
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "393     \"\"\"\n394     assert not isinstance(header_values, str)\n395     result = []\n",
      "filename": "cpython\\Lib\\http\\cookiejar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 394,
      "line_range": [
        394
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "426                 non_junk, nr_junk_chars = re.subn(r\"^[=\\s;]*\", \"\", text)\n427                 assert nr_junk_chars > 0, (\n428                     \"split_header_words bug: '%s', '%s', %s\" %\n429                     (orig_text, text, pairs))\n430                 text = non_junk\n",
      "filename": "cpython\\Lib\\http\\cookiejar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 427,
      "line_range": [
        427,
        428,
        429
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "958 \n959         assert cookie.name is not None\n960 \n961         for n in \"version\", \"verifiability\", \"name\", \"path\", \"domain\", \"port\":\n",
      "filename": "cpython\\Lib\\http\\cookiejar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 959,
      "line_range": [
        959,
        960
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2057                 initial_dot = domain.startswith(\".\")\n2058                 assert domain_specified == initial_dot\n2059 \n2060                 discard = False\n",
      "filename": "cpython\\Lib\\http\\cookiejar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2058,
      "line_range": [
        2058,
        2059
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "590             if tp == TYPE_ATTRIBUTE:\n591                 assert M is not None\n592                 M[key] = value\n",
      "filename": "cpython\\Lib\\http\\cookies.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 591,
      "line_range": [
        591
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "593             else:\n594                 assert tp == TYPE_KEYVALUE\n595                 rval, cval = value\n",
      "filename": "cpython\\Lib\\http\\cookies.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 594,
      "line_range": [
        594
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1178                 os.dup2(self.wfile.fileno(), 1)\n1179                 os.execve(scriptfile, args, env)\n1180             except:\n",
      "filename": "cpython\\Lib\\http\\server.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 1179,
      "line_range": [
        1179
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "1185             # Non-Unix -- use subprocess\n1186             import subprocess\n1187             cmdline = [scriptfile]\n",
      "filename": "cpython\\Lib\\http\\server.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 1186,
      "line_range": [
        1186
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "1200                 nbytes = 0\n1201             p = subprocess.Popen(cmdline,\n1202                                  stdin=subprocess.PIPE,\n1203                                  stdout=subprocess.PIPE,\n1204                                  stderr=subprocess.PIPE,\n1205                                  env = env\n1206                                  )\n",
      "filename": "cpython\\Lib\\http\\server.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1201,
      "line_range": [
        1201,
        1202,
        1203,
        1204,
        1205
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "177                                  **__main__.__dict__}\n178                     bigl = eval(\"dir()\", namespace)\n179                     kwds = (s for s in keyword.kwlist\n",
      "filename": "cpython\\Lib\\idlelib\\autocomplete.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 178,
      "line_range": [
        178
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "183                     if \"__all__\" in bigl:\n184                         smalll = sorted(eval(\"__all__\", namespace))\n185                     else:\n",
      "filename": "cpython\\Lib\\idlelib\\autocomplete.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 184,
      "line_range": [
        184
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "215         \"Lookup name in a namespace spanning sys.modules and __main.dict__.\"\n216         return eval(name, {**sys.modules, **__main__.__dict__})\n217 \n",
      "filename": "cpython\\Lib\\idlelib\\autocomplete.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 216,
      "line_range": [
        216
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "378                 else:\n379                     assert keysym == \"Next\"\n380                     newsel = min(len(self.completions)-1, cursel+jump)\n",
      "filename": "cpython\\Lib\\idlelib\\autocomplete_w.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 379,
      "line_range": [
        379
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "383             else:\n384                 assert keysym == \"Down\"\n385                 newsel = min(len(self.completions)-1, cursel+1)\n",
      "filename": "cpython\\Lib\\idlelib\\autocomplete_w.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 384,
      "line_range": [
        384
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "107         try:\n108             return eval(expression, namespace)  # Only protect user code.\n109         except BaseException:\n",
      "filename": "cpython\\Lib\\idlelib\\calltip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 108,
      "line_range": [
        108
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "154         \"\"\"\n155         assert stopline > 0\n156         lines = []\n",
      "filename": "cpython\\Lib\\idlelib\\codecontext.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 155,
      "line_range": [
        155
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "114             self.quit()\n115         except Exception:\n116             pass\n",
      "filename": "cpython\\Lib\\idlelib\\debugger.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 115,
      "line_range": [
        115
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "216                     m1 = \"%s: %s\" % (m1, str(value))\n217                 except:\n218                     pass\n",
      "filename": "cpython\\Lib\\idlelib\\debugger.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 217,
      "line_range": [
        217
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "50         traceback = info[2]\n51         assert isinstance(traceback, types.TracebackType)\n52         traceback_id = id(traceback)\n",
      "filename": "cpython\\Lib\\idlelib\\debugger_r.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 51,
      "line_range": [
        51
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "387                                          (gui_adap_oid,), {})\n388     assert idb_adap_oid_ret == idb_adap_oid, 'Idb restarted with different oid'\n389 \n",
      "filename": "cpython\\Lib\\idlelib\\debugger_r.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 388,
      "line_range": [
        388
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "34         try:\n35             value = eval(text)\n36             self.setfunction(value)\n",
      "filename": "cpython\\Lib\\idlelib\\debugobj.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 35,
      "line_range": [
        35
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "36             self.setfunction(value)\n37         except:\n38             pass\n",
      "filename": "cpython\\Lib\\idlelib\\debugobj.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 37,
      "line_range": [
        37
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "98             keys.sort()\n99         except:\n100             pass\n",
      "filename": "cpython\\Lib\\idlelib\\debugobj.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 99,
      "line_range": [
        99
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "596             try:\n597                 os.startfile(self.help_url)\n598             except OSError as why:\n",
      "filename": "cpython\\Lib\\idlelib\\editor.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 597,
      "line_range": [
        597
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "738     def open_turtle_demo(self, event = None):\n739         import subprocess\n740 \n741         cmd = [sys.executable,\n",
      "filename": "cpython\\Lib\\idlelib\\editor.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 739,
      "line_range": [
        739,
        740
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "743                'from turtledemo.__main__ import main; main()']\n744         subprocess.Popen(cmd, shell=False)\n745         return \"break\"\n",
      "filename": "cpython\\Lib\\idlelib\\editor.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 744,
      "line_range": [
        744
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "927                 try:\n928                     os.startfile(helpfile)\n929                 except OSError as why:\n",
      "filename": "cpython\\Lib\\idlelib\\editor.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 928,
      "line_range": [
        928
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "1298         have = len(chars.expandtabs(tabwidth))\n1299         assert have > 0\n1300         want = ((have - 1) // self.indentwidth) * self.indentwidth\n",
      "filename": "cpython\\Lib\\idlelib\\editor.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1299,
      "line_range": [
        1299
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1448                 else:\n1449                     assert 0, \"bogus continuation type %r\" % (c,)\n1450                 return \"break\"\n",
      "filename": "cpython\\Lib\\idlelib\\editor.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1449,
      "line_range": [
        1449
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "18     def open(self, filename, action=None):\n19         assert filename\n20         filename = self.canonize(filename)\n",
      "filename": "cpython\\Lib\\idlelib\\filelist.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 19,
      "line_range": [
        19
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "132         if tag in ['h1', 'h2', 'h3']:\n133             assert self.level == 0\n134             if self.show:\n",
      "filename": "cpython\\Lib\\idlelib\\help.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 133,
      "line_range": [
        133
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "212         uni = \"(A\\u0391\\u0410\\u05d0\\u0627\\u0905\\u1e00\\u3042, a)\"\n213         assert calltip._first_param.sub('', uni) == '(a)'\n214 \n",
      "filename": "cpython\\Lib\\idlelib\\idle_test\\test_calltip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 213,
      "line_range": [
        213
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "78         def cmd(tkpath, func):\n79             assert isinstance(tkpath, str)\n80             assert isinstance(func, type(cmd))\n",
      "filename": "cpython\\Lib\\idlelib\\idle_test\\test_macosx.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 79,
      "line_range": [
        79
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "79             assert isinstance(tkpath, str)\n80             assert isinstance(func, type(cmd))\n81         cls.root.createcommand = cmd\n",
      "filename": "cpython\\Lib\\idlelib\\idle_test\\test_macosx.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 80,
      "line_range": [
        80
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "134                               expected=expected):\n135                 text = eval(text_code)\n136                 with patch.object(editwin, 'width', line_width):\n",
      "filename": "cpython\\Lib\\idlelib\\idle_test\\test_squeezer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 135,
      "line_range": [
        135
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "329             command = command % shlex.quote(filename)\n330             pipe = os.popen(command, \"r\")\n331             # things can get ugly on NT if there is no printer available.\n",
      "filename": "cpython\\Lib\\idlelib\\iomenu.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 330,
      "line_range": [
        330
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "322     class MultiCall (widget):\n323         assert issubclass(widget, tkinter.Misc)\n324 \n325         def __init__(self, *args, **kwargs):\n",
      "filename": "cpython\\Lib\\idlelib\\multicall.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 323,
      "line_range": [
        323,
        324
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "111         \"\"\"\n112         assert isinstance(s, str)\n113         self.text.insert(mark, s, tags)\n",
      "filename": "cpython\\Lib\\idlelib\\outwin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 112,
      "line_range": [
        112
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "35         # Perhaps rename to pushfilter()?\n36         assert isinstance(filter, Delegator)\n37         assert filter.delegate is None\n",
      "filename": "cpython\\Lib\\idlelib\\percolator.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 36,
      "line_range": [
        36
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "36         assert isinstance(filter, Delegator)\n37         assert filter.delegate is None\n38         filter.setdelegate(self.top)\n",
      "filename": "cpython\\Lib\\idlelib\\percolator.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 37,
      "line_range": [
        37
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "42         # XXX Perhaps should only support popfilter()?\n43         assert isinstance(filter, Delegator)\n44         assert filter.delegate is not None\n",
      "filename": "cpython\\Lib\\idlelib\\percolator.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 43,
      "line_range": [
        43
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "43         assert isinstance(filter, Delegator)\n44         assert filter.delegate is not None\n45         f = self.top\n",
      "filename": "cpython\\Lib\\idlelib\\percolator.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 44,
      "line_range": [
        44
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "50             while f.delegate is not filter:\n51                 assert f is not self.bottom\n52                 f.resetcache()\n",
      "filename": "cpython\\Lib\\idlelib\\percolator.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 51,
      "line_range": [
        51
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "131     def set_code(self, s):\n132         assert len(s) == 0 or s[-1] == '\\n'\n133         self.code = s\n",
      "filename": "cpython\\Lib\\idlelib\\pyparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 132,
      "line_range": [
        132
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "196         \"\"\"\n197         assert lo == 0 or self.code[lo-1] == '\\n'\n198         if lo > 0:\n",
      "filename": "cpython\\Lib\\idlelib\\pyparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 197,
      "line_range": [
        197
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "287                     if ch == '\\\\':\n288                         assert i < n\n289                         if code[i] == '\\n':\n",
      "filename": "cpython\\Lib\\idlelib\\pyparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 288,
      "line_range": [
        288
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "309                 i = code.find('\\n', i)\n310                 assert i >= 0\n311                 continue\n",
      "filename": "cpython\\Lib\\idlelib\\pyparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 310,
      "line_range": [
        310
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "312 \n313             assert ch == '\\\\'\n314             assert i < n\n",
      "filename": "cpython\\Lib\\idlelib\\pyparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 313,
      "line_range": [
        313
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "313             assert ch == '\\\\'\n314             assert i < n\n315             if code[i] == '\\n':\n",
      "filename": "cpython\\Lib\\idlelib\\pyparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 314,
      "line_range": [
        314
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "330         # whether it's continued.\n331         assert (continuation == C_NONE) == (goodlines[-1] == lno)\n332         if goodlines[-1] != lno:\n",
      "filename": "cpython\\Lib\\idlelib\\pyparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 331,
      "line_range": [
        331
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "367         while i:\n368             assert p\n369             # Make p be the index of the stmt at line number goodlines[i].\n370             # Move p back to the stmt at line number goodlines[i-1].\n371             q = p\n",
      "filename": "cpython\\Lib\\idlelib\\pyparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 368,
      "line_range": [
        368,
        369,
        370
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "382             # nothing but junk!\n383             assert p == 0\n384             q = p\n",
      "filename": "cpython\\Lib\\idlelib\\pyparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 383,
      "line_range": [
        383
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "443                 p = code.find('\\n', p, q) + 1\n444                 assert p > 0\n445                 bracketing.append((p, len(stack)))\n",
      "filename": "cpython\\Lib\\idlelib\\pyparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 444,
      "line_range": [
        444
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "447 \n448             assert ch == '\\\\'\n449             p = p+1     # beyond backslash\n",
      "filename": "cpython\\Lib\\idlelib\\pyparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 448,
      "line_range": [
        448
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "449             p = p+1     # beyond backslash\n450             assert p < q\n451             if code[p] != '\\n':\n",
      "filename": "cpython\\Lib\\idlelib\\pyparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 450,
      "line_range": [
        450
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "467         self._study2()\n468         assert self.continuation == C_BRACKET\n469         j = self.lastopenbracketpos\n",
      "filename": "cpython\\Lib\\idlelib\\pyparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 468,
      "line_range": [
        468
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "509         self._study2()\n510         assert self.continuation == C_BACKSLASH\n511         code = self.code\n",
      "filename": "cpython\\Lib\\idlelib\\pyparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 510,
      "line_range": [
        510
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "41 import socket\n42 import subprocess\n43 from textwrap import TextWrapper\n",
      "filename": "cpython\\Lib\\idlelib\\pyshell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 42,
      "line_range": [
        42
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "180             debug.set_breakpoint_here(filename, lineno)\n181         except: # but debugger may not be active right now....\n182             pass\n",
      "filename": "cpython\\Lib\\idlelib\\pyshell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 181,
      "line_range": [
        181
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "201             self.breakpoints.remove(lineno)\n202         except:\n203             pass\n",
      "filename": "cpython\\Lib\\idlelib\\pyshell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 202,
      "line_range": [
        202
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "208             debug.clear_breakpoint_here(filename, lineno)\n209         except:\n210             pass\n",
      "filename": "cpython\\Lib\\idlelib\\pyshell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 209,
      "line_range": [
        209
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "223                 debug.clear_file_breaks(filename)\n224             except:\n225                 pass\n",
      "filename": "cpython\\Lib\\idlelib\\pyshell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 224,
      "line_range": [
        224
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "281                 if line.startswith(filename + '='):\n282                     breakpoint_linenumbers = eval(line[len(filename)+1:])\n283                     for breakpoint_linenumber in breakpoint_linenumbers:\n",
      "filename": "cpython\\Lib\\idlelib\\pyshell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 282,
      "line_range": [
        282
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "422             self.subprocess_arglist = self.build_subprocess_arglist()\n423         self.rpcsubproc = subprocess.Popen(self.subprocess_arglist)\n424 \n",
      "filename": "cpython\\Lib\\idlelib\\pyshell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 423,
      "line_range": [
        423
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "425     def build_subprocess_arglist(self):\n426         assert (self.port!=0), (\n427             \"Socket should have been assigned a port number.\")\n428         w = ['-W' + s for s in sys.warnoptions]\n",
      "filename": "cpython\\Lib\\idlelib\\pyshell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 426,
      "line_range": [
        426,
        427
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "489                 debugger_r.close_subprocess_debugger(self.rpcclt)\n490             except:\n491                 pass\n",
      "filename": "cpython\\Lib\\idlelib\\pyshell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 490,
      "line_range": [
        490
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "679         # at the moment, InteractiveInterpreter expects str\n680         assert isinstance(source, str)\n681         # InteractiveInterpreter.runsource() calls its runcode() method,\n682         # which is overridden (see below)\n683         return InteractiveInterpreter.runsource(self, source, filename)\n",
      "filename": "cpython\\Lib\\idlelib\\pyshell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 680,
      "line_range": [
        680,
        681,
        682
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "753         else:\n754             exec(code, self.locals)\n755         return 1\n",
      "filename": "cpython\\Lib\\idlelib\\pyshell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 754,
      "line_range": [
        754
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "770             else:\n771                 exec(code, self.locals)\n772         except SystemExit:\n",
      "filename": "cpython\\Lib\\idlelib\\pyshell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 771,
      "line_range": [
        771
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1103                 return # Active selection -- always use default binding\n1104         except:\n1105             pass\n",
      "filename": "cpython\\Lib\\idlelib\\pyshell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 1104,
      "line_range": [
        1104
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1156                     return \"break\"\n1157         except:\n1158             pass\n",
      "filename": "cpython\\Lib\\idlelib\\pyshell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 1157,
      "line_range": [
        1157
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "67                              self._w, 'moveableModal', '')\n68             except:\n69                 pass\n",
      "filename": "cpython\\Lib\\idlelib\\query.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 68,
      "line_range": [
        68
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "33 import os\n34 import pickle\n35 import queue\n",
      "filename": "cpython\\Lib\\idlelib\\rpc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 34,
      "line_range": [
        34
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "46     \"Return code object from marshal string ms.\"\n47     co = marshal.loads(ms)\n48     assert isinstance(co, types.CodeType)\n",
      "filename": "cpython\\Lib\\idlelib\\rpc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 47,
      "line_range": [
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "47     co = marshal.loads(ms)\n48     assert isinstance(co, types.CodeType)\n49     return co\n",
      "filename": "cpython\\Lib\\idlelib\\rpc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 48,
      "line_range": [
        48
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "52     \"Return unpickle function and tuple with marshalled co code object.\"\n53     assert isinstance(co, types.CodeType)\n54     ms = marshal.dumps(co)\n",
      "filename": "cpython\\Lib\\idlelib\\rpc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 53,
      "line_range": [
        53
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "387         try:\n388             message = pickle.loads(packet)\n389         except pickle.UnpicklingError:\n",
      "filename": "cpython\\Lib\\idlelib\\rpc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 388,
      "line_range": [
        388
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "124     try:\n125         assert(len(sys.argv) > 1)\n126         port = int(sys.argv[-1])\n",
      "filename": "cpython\\Lib\\idlelib\\run.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 125,
      "line_range": [
        125
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "554             try:\n555                 exec(code, self.locals)\n556             finally:\n",
      "filename": "cpython\\Lib\\idlelib\\run.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 555,
      "line_range": [
        555
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "60         else:\n61             assert s[pos] == '\\t'\n62             current_column += tabwidth - (current_column % tabwidth)\n",
      "filename": "cpython\\Lib\\idlelib\\squeezer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 61,
      "line_range": [
        61
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "24 \n25 import binascii, errno, random, re, socket, subprocess, sys, time, calendar\n26 from datetime import datetime, timezone, timedelta\n",
      "filename": "cpython\\Lib\\imaplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 25,
      "line_range": [
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "230 \n231         self.tagpre = Int2AP(random.randint(4096, 65535))\n232         self.tagre = re.compile(br'(?P<tag>'\n",
      "filename": "cpython\\Lib\\imaplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 231,
      "line_range": [
        231
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1273                     self._mesg(*self._cmd_log[i])\n1274                 except:\n1275                     pass\n",
      "filename": "cpython\\Lib\\imaplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 1274,
      "line_range": [
        1274
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1369             stdin=subprocess.PIPE, stdout=subprocess.PIPE,\n1370             shell=True, close_fds=True)\n1371         self.writefile = self.process.stdin\n1372         self.readfile = self.process.stdout\n1373 \n1374     def read(self, size):\n",
      "filename": "cpython\\Lib\\imaplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 1370,
      "line_range": [
        1367,
        1368,
        1369,
        1370
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "116                 raise RuntimeError('cannot release un-acquired lock')\n117             assert self.count > 0\n118             self.count -= 1\n",
      "filename": "cpython\\Lib\\importlib\\_bootstrap.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 117,
      "line_range": [
        117
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "286             return loader.module_repr(module)\n287         except Exception:\n288             pass\n",
      "filename": "cpython\\Lib\\importlib\\_bootstrap.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 287,
      "line_range": [
        287
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "837         code = _call_with_frames_removed(_imp.get_frozen_object, name)\n838         exec(code, module.__dict__)\n839 \n",
      "filename": "cpython\\Lib\\importlib\\_bootstrap.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 838,
      "line_range": [
        838
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "52     \"\"\"Convert 4 bytes in little-endian to an integer.\"\"\"\n53     assert len(data) == 4\n54     return int.from_bytes(data, 'little')\n",
      "filename": "cpython\\Lib\\importlib\\_bootstrap_external.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 53,
      "line_range": [
        53
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "57     \"\"\"Convert 2 bytes in little-endian to an integer.\"\"\"\n58     assert len(data) == 2\n59     return int.from_bytes(data, 'little')\n",
      "filename": "cpython\\Lib\\importlib\\_bootstrap_external.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 58,
      "line_range": [
        58
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "587     \"\"\"Compile bytecode as found in a pyc.\"\"\"\n588     code = marshal.loads(data)\n589     if isinstance(code, _code_type):\n",
      "filename": "cpython\\Lib\\importlib\\_bootstrap_external.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 588,
      "line_range": [
        588
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "613     data.extend(_pack_uint32(flags))\n614     assert len(source_hash) == 8\n615     data.extend(source_hash)\n",
      "filename": "cpython\\Lib\\importlib\\_bootstrap_external.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 614,
      "line_range": [
        614
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1537         ns['__cached__'] = cpathname\n1538     except Exception:\n1539         # Not important enough to report.\n",
      "filename": "cpython\\Lib\\importlib\\_bootstrap_external.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 1538,
      "line_range": [
        1538
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1571         # Assumption made in _path_join()\n1572         assert all(len(sep) == 1 for sep in path_separators)\n1573         path_sep = path_separators[0]\n",
      "filename": "cpython\\Lib\\importlib\\_bootstrap_external.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1572,
      "line_range": [
        1572
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "433                 get_obj = getattr(cls, name)\n434             except Exception as exc:\n435                 pass\n",
      "filename": "cpython\\Lib\\inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 434,
      "line_range": [
        434
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1812         if transform_to_kwonly:\n1813             assert param.kind is not _POSITIONAL_ONLY\n1814 \n1815             if param.kind is _POSITIONAL_OR_KEYWORD:\n",
      "filename": "cpython\\Lib\\inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1813,
      "line_range": [
        1813,
        1814
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1900 \n1901     assert spec.startswith('($')\n1902 \n1903     pos = spec.find(',')\n",
      "filename": "cpython\\Lib\\inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1901,
      "line_range": [
        1901,
        1902
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1907     cpos = spec.find(':')\n1908     assert cpos == -1 or cpos > pos\n1909 \n1910     cpos = spec.find('=')\n",
      "filename": "cpython\\Lib\\inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1908,
      "line_range": [
        1908,
        1909
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1910     cpos = spec.find('=')\n1911     assert cpos == -1 or cpos > pos\n1912 \n1913     return spec[2:pos]\n",
      "filename": "cpython\\Lib\\inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1911,
      "line_range": [
        1911,
        1912
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1949     t = next(token_stream)\n1950     assert t.type == tokenize.ENCODING\n1951 \n1952     for t in token_stream:\n",
      "filename": "cpython\\Lib\\inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1950,
      "line_range": [
        1950,
        1951
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1959                 else:\n1960                     assert not delayed_comma\n1961                     delayed_comma = True\n",
      "filename": "cpython\\Lib\\inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1960,
      "line_range": [
        1960
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1965             if string == '/':\n1966                 assert not skip_next_comma\n1967                 assert last_positional_only is None\n",
      "filename": "cpython\\Lib\\inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1966,
      "line_range": [
        1966
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1966                 assert not skip_next_comma\n1967                 assert last_positional_only is None\n1968                 skip_next_comma = True\n",
      "filename": "cpython\\Lib\\inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1967,
      "line_range": [
        1967
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1972         if (type == ERRORTOKEN) and (string == '$'):\n1973             assert self_parameter is None\n1974             self_parameter = current_parameter\n",
      "filename": "cpython\\Lib\\inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1973,
      "line_range": [
        1973
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2026     def parse_name(node):\n2027         assert isinstance(node, ast.arg)\n2028         if node.annotation is not None:\n",
      "filename": "cpython\\Lib\\inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2027,
      "line_range": [
        2027
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2033         try:\n2034             value = eval(s, module_dict)\n2035         except NameError:\n",
      "filename": "cpython\\Lib\\inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 2034,
      "line_range": [
        2034
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "2036             try:\n2037                 value = eval(s, sys_module_dict)\n2038             except NameError:\n",
      "filename": "cpython\\Lib\\inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 2037,
      "line_range": [
        2037
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "2111         #      skip_bound_arg is False.\n2112         assert parameters\n2113         _self = getattr(obj, '__self__', None)\n",
      "filename": "cpython\\Lib\\inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2112,
      "line_range": [
        2112
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2324                 sig_params = tuple(sig.parameters.values())\n2325                 assert (not sig_params or\n2326                         first_wrapped_param is not sig_params[0])\n2327                 new_params = (first_wrapped_param,) + sig_params\n",
      "filename": "cpython\\Lib\\inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2325,
      "line_range": [
        2325,
        2326
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3183                 __, lineno = findsource(obj)\n3184             except Exception:\n3185                 pass\n",
      "filename": "cpython\\Lib\\inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 3184,
      "line_range": [
        3184
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "32         syms = self.syms\n33         assert results\n34         func = results[\"func\"]\n",
      "filename": "cpython\\Lib\\lib2to3\\fixes\\fix_apply.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 33,
      "line_range": [
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "63             method_name = method_name[4:]\n64         assert method_name in (\"keys\", \"items\", \"values\"), repr(method)\n65         head = [n.clone() for n in head]\n",
      "filename": "cpython\\Lib\\lib2to3\\fixes\\fix_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 64,
      "line_range": [
        64
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "26     def transform(self, node, results):\n27         assert results\n28         syms = self.syms\n",
      "filename": "cpython\\Lib\\lib2to3\\fixes\\fix_exec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 27,
      "line_range": [
        27
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "24     def transform(self, node, results):\n25         assert results\n26         filename = results[\"filename\"]\n",
      "filename": "cpython\\Lib\\lib2to3\\fixes\\fix_execfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 25,
      "line_range": [
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "71     def transform(self, node, results):\n72         assert results\n73         syms = self.syms\n",
      "filename": "cpython\\Lib\\lib2to3\\fixes\\fix_has_key.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 72,
      "line_range": [
        72
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "143             else:\n144                 assert list_call.parent\n145                 assert list_call.next_sibling is None\n",
      "filename": "cpython\\Lib\\lib2to3\\fixes\\fix_idioms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 144,
      "line_range": [
        144
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "144                 assert list_call.parent\n145                 assert list_call.next_sibling is None\n146                 # Put a blank line after list_call and set its prefix.\n147                 end_line = BlankLine()\n",
      "filename": "cpython\\Lib\\lib2to3\\fixes\\fix_idioms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 145,
      "line_range": [
        145,
        146
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "148                 list_call.parent.append_child(end_line)\n149                 assert list_call.next_sibling is end_line\n150                 # The new prefix should be everything up to the first new line\n151                 # of sort_stmt's prefix.\n152                 end_line.prefix = btwn.rpartition(\"\\n\")[0]\n",
      "filename": "cpython\\Lib\\lib2to3\\fixes\\fix_idioms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 149,
      "line_range": [
        149,
        150,
        151
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "27             else:\n28                 assert child.type == syms.import_as_name\n29                 name_node = child.children[0]\n",
      "filename": "cpython\\Lib\\lib2to3\\fixes\\fix_itertools_imports.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 28,
      "line_range": [
        28
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "204         expr_stmt = last_metaclass.children[0]\n205         assert expr_stmt.type == syms.expr_stmt\n206         expr_stmt.children[1].prefix = ''\n",
      "filename": "cpython\\Lib\\lib2to3\\fixes\\fix_metaclass.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 205,
      "line_range": [
        205
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "46     def transform(self, node, results):\n47         assert results\n48 \n49         base = results.get(\"base\")\n",
      "filename": "cpython\\Lib\\lib2to3\\fixes\\fix_next.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 47,
      "line_range": [
        47,
        48
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "37     def transform(self, node, results):\n38         assert results\n39 \n40         bare_print = results.get(\"bare\")\n",
      "filename": "cpython\\Lib\\lib2to3\\fixes\\fix_print.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 38,
      "line_range": [
        38,
        39
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "46             return\n47         assert node.children[0] == Name(\"print\")\n48         args = node.children[1:]\n",
      "filename": "cpython\\Lib\\lib2to3\\fixes\\fix_print.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 47,
      "line_range": [
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "58         if args and args[0] == pytree.Leaf(token.RIGHTSHIFT, \">>\"):\n59             assert len(args) >= 2\n60             file = args[1].clone()\n",
      "filename": "cpython\\Lib\\lib2to3\\fixes\\fix_print.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 59,
      "line_range": [
        59
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "265             except refactor.MultiprocessingUnsupported:\n266                 assert options.processes > 1\n267                 print(\"Sorry, -j isn't supported on this platform.\",\n",
      "filename": "cpython\\Lib\\lib2to3\\main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 266,
      "line_range": [
        266
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "96 \n97         assert node.type == self.syms.Unit\n98 \n99         name = None\n",
      "filename": "cpython\\Lib\\lib2to3\\patcomp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 97,
      "line_range": [
        97,
        98
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "112         if repeat is not None:\n113             assert repeat.type == self.syms.Repeater\n114             children = repeat.children\n",
      "filename": "cpython\\Lib\\lib2to3\\patcomp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 113,
      "line_range": [
        113
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "122             elif child.type == token.LBRACE:\n123                 assert children[-1].type == token.RBRACE\n124                 assert  len(children) in (3, 5)\n",
      "filename": "cpython\\Lib\\lib2to3\\patcomp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 123,
      "line_range": [
        123
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "123                 assert children[-1].type == token.RBRACE\n124                 assert  len(children) in (3, 5)\n125                 min = max = self.get_int(children[1])\n",
      "filename": "cpython\\Lib\\lib2to3\\patcomp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 124,
      "line_range": [
        124
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "128             else:\n129                 assert False\n130             if min != 1 or max != 1:\n",
      "filename": "cpython\\Lib\\lib2to3\\patcomp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 129,
      "line_range": [
        129
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "139         # Compile STRING | NAME [Details] | (...) | [...]\n140         assert len(nodes) >= 1\n141         node = nodes[0]\n",
      "filename": "cpython\\Lib\\lib2to3\\patcomp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 140,
      "line_range": [
        140
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "167         elif node.value == \"[\":\n168             assert repeat is None\n169             subpattern = self.compile_node(nodes[1])\n",
      "filename": "cpython\\Lib\\lib2to3\\patcomp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 168,
      "line_range": [
        168
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "170             return pytree.WildcardPattern([[subpattern]], min=0, max=1)\n171         assert False, node\n172 \n",
      "filename": "cpython\\Lib\\lib2to3\\patcomp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 171,
      "line_range": [
        171
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "173     def get_int(self, node):\n174         assert node.type == token.NUMBER\n175         return int(node.value)\n",
      "filename": "cpython\\Lib\\lib2to3\\patcomp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 174,
      "line_range": [
        174
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "77                 number = int(number)\n78                 assert symbol not in self.symbol2number\n79                 assert number not in self.number2symbol\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 78,
      "line_range": [
        78
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "78                 assert symbol not in self.symbol2number\n79                 assert number not in self.number2symbol\n80                 self.symbol2number[symbol] = number\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 79,
      "line_range": [
        79
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "121         lineno, line = lineno+1, next(f)\n122         assert line == '#include \"pgenheaders.h\"\\n', (lineno, line)\n123         lineno, line = lineno+1, next(f)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 122,
      "line_range": [
        122
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "123         lineno, line = lineno+1, next(f)\n124         assert line == '#include \"grammar.h\"\\n', (lineno, line)\n125 \n126         # Parse the state definitions\n127         lineno, line = lineno+1, next(f)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 124,
      "line_range": [
        124,
        125,
        126
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "133                               line)\n134                 assert mo, (lineno, line)\n135                 n, m, k = list(map(int, mo.groups()))\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 134,
      "line_range": [
        134
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "139                     mo = re.match(r\"\\s+{(\\d+), (\\d+)},$\", line)\n140                     assert mo, (lineno, line)\n141                     i, j = list(map(int, mo.groups()))\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 140,
      "line_range": [
        140
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "143                 lineno, line = lineno+1, next(f)\n144                 assert line == \"};\\n\", (lineno, line)\n145                 allarcs[(n, m)] = arcs\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 144,
      "line_range": [
        144
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "147             mo = re.match(r\"static state states_(\\d+)\\[(\\d+)\\] = {$\", line)\n148             assert mo, (lineno, line)\n149             s, t = list(map(int, mo.groups()))\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 148,
      "line_range": [
        148
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "149             s, t = list(map(int, mo.groups()))\n150             assert s == len(states), (lineno, line)\n151             state = []\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 150,
      "line_range": [
        150
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "154                 mo = re.match(r\"\\s+{(\\d+), arcs_(\\d+)_(\\d+)},$\", line)\n155                 assert mo, (lineno, line)\n156                 k, n, m = list(map(int, mo.groups()))\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 155,
      "line_range": [
        155
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "157                 arcs = allarcs[n, m]\n158                 assert k == len(arcs), (lineno, line)\n159                 state.append(arcs)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 158,
      "line_range": [
        158
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "161             lineno, line = lineno+1, next(f)\n162             assert line == \"};\\n\", (lineno, line)\n163             lineno, line = lineno+1, next(f)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 162,
      "line_range": [
        162
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "168         mo = re.match(r\"static dfa dfas\\[(\\d+)\\] = {$\", line)\n169         assert mo, (lineno, line)\n170         ndfas = int(mo.group(1))\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 169,
      "line_range": [
        169
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "174                           line)\n175             assert mo, (lineno, line)\n176             symbol = mo.group(2)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 175,
      "line_range": [
        175
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "177             number, x, y, z = list(map(int, mo.group(1, 3, 4, 5)))\n178             assert self.symbol2number[symbol] == number, (lineno, line)\n179             assert self.number2symbol[number] == symbol, (lineno, line)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 178,
      "line_range": [
        178
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "178             assert self.symbol2number[symbol] == number, (lineno, line)\n179             assert self.number2symbol[number] == symbol, (lineno, line)\n180             assert x == 0, (lineno, line)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 179,
      "line_range": [
        179
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "179             assert self.number2symbol[number] == symbol, (lineno, line)\n180             assert x == 0, (lineno, line)\n181             state = states[z]\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 180,
      "line_range": [
        180
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "181             state = states[z]\n182             assert y == len(state), (lineno, line)\n183             lineno, line = lineno+1, next(f)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 182,
      "line_range": [
        182
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "184             mo = re.match(r'\\s+(\"(?:\\\\\\d\\d\\d)*\")},$', line)\n185             assert mo, (lineno, line)\n186             first = {}\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 185,
      "line_range": [
        185
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "186             first = {}\n187             rawbitset = eval(mo.group(1))\n188             for i, c in enumerate(rawbitset):\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 187,
      "line_range": [
        187
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "194         lineno, line = lineno+1, next(f)\n195         assert line == \"};\\n\", (lineno, line)\n196         self.dfas = dfas\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 195,
      "line_range": [
        195
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "201         mo = re.match(r\"static label labels\\[(\\d+)\\] = {$\", line)\n202         assert mo, (lineno, line)\n203         nlabels = int(mo.group(1))\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 202,
      "line_range": [
        202
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "206             mo = re.match(r'\\s+{(\\d+), (0|\"\\w+\")},$', line)\n207             assert mo, (lineno, line)\n208             x, y = mo.groups()\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 207,
      "line_range": [
        207
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "212             else:\n213                 y = eval(y)\n214             labels.append((x, y))\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 213,
      "line_range": [
        213
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "215         lineno, line = lineno+1, next(f)\n216         assert line == \"};\\n\", (lineno, line)\n217         self.labels = labels\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 216,
      "line_range": [
        216
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "220         lineno, line = lineno+1, next(f)\n221         assert line == \"grammar _PyParser_Grammar = {\\n\", (lineno, line)\n222         lineno, line = lineno+1, next(f)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 221,
      "line_range": [
        221
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "223         mo = re.match(r\"\\s+(\\d+),$\", line)\n224         assert mo, (lineno, line)\n225         ndfas = int(mo.group(1))\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 224,
      "line_range": [
        224
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "225         ndfas = int(mo.group(1))\n226         assert ndfas == len(self.dfas)\n227         lineno, line = lineno+1, next(f)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 226,
      "line_range": [
        226
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "227         lineno, line = lineno+1, next(f)\n228         assert line == \"\\tdfas,\\n\", (lineno, line)\n229         lineno, line = lineno+1, next(f)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 228,
      "line_range": [
        228
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "230         mo = re.match(r\"\\s+{(\\d+), labels},$\", line)\n231         assert mo, (lineno, line)\n232         nlabels = int(mo.group(1))\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 231,
      "line_range": [
        231
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "232         nlabels = int(mo.group(1))\n233         assert nlabels == len(self.labels), (lineno, line)\n234         lineno, line = lineno+1, next(f)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 233,
      "line_range": [
        233
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "235         mo = re.match(r\"\\s+(\\d+)$\", line)\n236         assert mo, (lineno, line)\n237         start = int(mo.group(1))\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 236,
      "line_range": [
        236
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "237         start = int(mo.group(1))\n238         assert start in self.number2symbol, (lineno, line)\n239         self.start = start\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 238,
      "line_range": [
        238
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "240         lineno, line = lineno+1, next(f)\n241         assert line == \"};\\n\", (lineno, line)\n242         try:\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 241,
      "line_range": [
        241
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "246         else:\n247             assert 0, (lineno, line)\n248 \n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\conv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 247,
      "line_range": [
        247
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "49             if start != (lineno, column):\n50                 assert (lineno, column) <= start, ((lineno, column), start)\n51                 s_lineno, s_column = start\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\driver.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 50,
      "line_range": [
        50
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "15 # Python imports\n16 import pickle\n17 \n18 # Local imports\n19 from . import token\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 16,
      "line_range": [
        16,
        17,
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "94         with open(filename, \"rb\") as f:\n95             d = pickle.load(f)\n96         self.__dict__.update(d)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 95,
      "line_range": [
        95
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "99         \"\"\"Load the grammar tables from a pickle bytes object.\"\"\"\n100         self.__dict__.update(pickle.loads(pkl))\n101 \n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 100,
      "line_range": [
        100
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "20     all, tail = m.group(0, 1)\n21     assert all.startswith(\"\\\\\")\n22     esc = simple_escapes.get(tail)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 21,
      "line_range": [
        21
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "40 def evalString(s):\n41     assert s.startswith(\"'\") or s.startswith('\"'), repr(s[:1])\n42     q = s[0]\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "44         q = q*3\n45     assert s.endswith(q), repr(s[-len(q):])\n46     assert len(s) >= 2*len(q)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 45,
      "line_range": [
        45
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "45     assert s.endswith(q), repr(s[-len(q):])\n46     assert len(s) >= 2*len(q)\n47     s = s[len(q):-len(q)]\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 46,
      "line_range": [
        46
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "129                     # Look it up in the list of labels\n130                     assert t < 256\n131                     # Shift a token; we're done with it\n132                     self.shift(type, value, newstate, context)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\parse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 130,
      "line_range": [
        130,
        131
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "76                 itoken = getattr(token, label, None)\n77                 assert isinstance(itoken, int), label\n78                 assert itoken in token.tok_name, label\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\pgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 77,
      "line_range": [
        77
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "77                 assert isinstance(itoken, int), label\n78                 assert itoken in token.tok_name, label\n79                 if itoken in c.tokens:\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\pgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 78,
      "line_range": [
        78
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "86             # Either a keyword or an operator\n87             assert label[0] in ('\"', \"'\"), label\n88             value = eval(label)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\pgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 87,
      "line_range": [
        87
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "87             assert label[0] in ('\"', \"'\"), label\n88             value = eval(label)\n89             if value[0].isalpha():\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\pgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 88,
      "line_range": [
        88
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "173         # values.\n174         assert isinstance(start, NFAState)\n175         assert isinstance(finish, NFAState)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\pgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 174,
      "line_range": [
        174
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "174         assert isinstance(start, NFAState)\n175         assert isinstance(finish, NFAState)\n176         def closure(state):\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\pgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 175,
      "line_range": [
        175
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "180         def addclosure(state, base):\n181             assert isinstance(state, NFAState)\n182             if state in base:\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\pgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 181,
      "line_range": [
        181
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "342     def addarc(self, next, label=None):\n343         assert label is None or isinstance(label, str)\n344         assert isinstance(next, NFAState)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\pgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 343,
      "line_range": [
        343
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "343         assert label is None or isinstance(label, str)\n344         assert isinstance(next, NFAState)\n345         self.arcs.append((label, next))\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\pgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 344,
      "line_range": [
        344
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "349     def __init__(self, nfaset, final):\n350         assert isinstance(nfaset, dict)\n351         assert isinstance(next(iter(nfaset)), NFAState)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\pgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 350,
      "line_range": [
        350
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "350         assert isinstance(nfaset, dict)\n351         assert isinstance(next(iter(nfaset)), NFAState)\n352         assert isinstance(final, NFAState)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\pgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 351,
      "line_range": [
        351
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "351         assert isinstance(next(iter(nfaset)), NFAState)\n352         assert isinstance(final, NFAState)\n353         self.nfaset = nfaset\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\pgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 352,
      "line_range": [
        352
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "357     def addarc(self, next, label):\n358         assert isinstance(label, str)\n359         assert label not in self.arcs\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\pgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 358,
      "line_range": [
        358
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "358         assert isinstance(label, str)\n359         assert label not in self.arcs\n360         assert isinstance(next, DFAState)\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\pgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 359,
      "line_range": [
        359
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "359         assert label not in self.arcs\n360         assert isinstance(next, DFAState)\n361         self.arcs[label] = next\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\pgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 360,
      "line_range": [
        360
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "369         # Equality test -- ignore the nfaset instance variable\n370         assert isinstance(other, DFAState)\n371         if self.isfinal != other.isfinal:\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\pgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 370,
      "line_range": [
        370
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "179         row, col = start\n180         assert row <= self.prev_row\n181         col_offset = col - self.prev_col\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\tokenize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 180,
      "line_range": [
        180
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "467                 elif initial == '#':\n468                     assert not token.endswith(\"\\n\")\n469                     if stashed:\n",
      "filename": "cpython\\Lib\\lib2to3\\pgen2\\tokenize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 468,
      "line_range": [
        468
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "50         \"\"\"Constructor that prevents Base from being instantiated.\"\"\"\n51         assert cls is not Base, \"Cannot instantiate Base\"\n52         return object.__new__(cls)\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 51,
      "line_range": [
        51
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "102         \"\"\"Replace this node with a new one in the parent.\"\"\"\n103         assert self.parent is not None, str(self)\n104         assert new is not None\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 103,
      "line_range": [
        103
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "103         assert self.parent is not None, str(self)\n104         assert new is not None\n105         if not isinstance(new, list):\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 104,
      "line_range": [
        104
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "110             if ch is self:\n111                 assert not found, (self.parent.children, self, new)\n112                 if new is not None:\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 111,
      "line_range": [
        111
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "116                 l_children.append(ch)\n117         assert found, (self.children, self, new)\n118         self.parent.changed()\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 117,
      "line_range": [
        117
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "222         \"\"\"\n223         assert type >= 256, type\n224         self.type = type\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 223,
      "line_range": [
        223
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "226         for ch in self.children:\n227             assert ch.parent is None, repr(ch)\n228             ch.parent = self\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 227,
      "line_range": [
        227
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "335         \"\"\"\n336         assert 0 <= type < 256, type\n337         if context is not None:\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 336,
      "line_range": [
        336
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "436         \"\"\"Constructor that prevents BasePattern from being instantiated.\"\"\"\n437         assert cls is not BasePattern, \"Cannot instantiate BasePattern\"\n438         return object.__new__(cls)\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 437,
      "line_range": [
        437
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "514         if type is not None:\n515             assert 0 <= type < 256, type\n516         if content is not None:\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 515,
      "line_range": [
        515
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "516         if content is not None:\n517             assert isinstance(content, str), repr(content)\n518         self.type = type\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 517,
      "line_range": [
        517
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "564         if type is not None:\n565             assert type >= 256, type\n566         if content is not None:\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 565,
      "line_range": [
        565
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "566         if content is not None:\n567             assert not isinstance(content, str), repr(content)\n568             content = list(content)\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 567,
      "line_range": [
        567
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "569             for i, item in enumerate(content):\n570                 assert isinstance(item, BasePattern), (i, item)\n571                 if isinstance(item, WildcardPattern):\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 570,
      "line_range": [
        570
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "641         \"\"\"\n642         assert 0 <= min <= max <= HUGE, (min, max)\n643         if content is not None:\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 642,
      "line_range": [
        642
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "645             # Check sanity of alternatives\n646             assert len(content), repr(content)  # Can't have zero alternatives\n647             for alt in content:\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 646,
      "line_range": [
        646
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "647             for alt in content:\n648                 assert len(alt), repr(alt) # Can have empty alternatives\n649         self.content = content\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 648,
      "line_range": [
        648
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "779         \"\"\"Helper to recursively yield the matches.\"\"\"\n780         assert self.content is not None\n781         if count >= self.min:\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 780,
      "line_range": [
        780
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "804         if content is not None:\n805             assert isinstance(content, BasePattern), repr(content)\n806         self.content = content\n",
      "filename": "cpython\\Lib\\lib2to3\\pytree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 805,
      "line_range": [
        805
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "600             clipped, new = new[:lineno-1], new[lineno-1:]\n601             assert clipped == [\"\\n\"] * (lineno-1), clipped\n602             if not new[-1].endswith(\"\\n\"):\n",
      "filename": "cpython\\Lib\\lib2to3\\refactor.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 601,
      "line_range": [
        601
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "39 ]\n40 assert sizeof(__mbstate_t) == 128, sizeof(__mbstate_t)\n41 assert alignment(__mbstate_t) == 4, alignment(__mbstate_t)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 40,
      "line_range": [
        40
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "40 assert sizeof(__mbstate_t) == 128, sizeof(__mbstate_t)\n41 assert alignment(__mbstate_t) == 4, alignment(__mbstate_t)\n42 __darwin_mbstate_t = __mbstate_t\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "75 ]\n76 assert sizeof(sigcontext) == 72, sizeof(sigcontext)\n77 assert alignment(sigcontext) == 4, alignment(sigcontext)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 76,
      "line_range": [
        76
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "76 assert sizeof(sigcontext) == 72, sizeof(sigcontext)\n77 assert alignment(sigcontext) == 4, alignment(sigcontext)\n78 u_int8_t = c_ubyte\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 77,
      "line_range": [
        77
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "99 ]\n100 assert sizeof(aes_key_st) == 244, sizeof(aes_key_st)\n101 assert alignment(aes_key_st) == 4, alignment(aes_key_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 100,
      "line_range": [
        100
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "100 assert sizeof(aes_key_st) == 244, sizeof(aes_key_st)\n101 assert alignment(aes_key_st) == 4, alignment(aes_key_st)\n102 AES_KEY = aes_key_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 101,
      "line_range": [
        101
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "117 ]\n118 assert sizeof(asn1_ctx_st) == 44, sizeof(asn1_ctx_st)\n119 assert alignment(asn1_ctx_st) == 4, alignment(asn1_ctx_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 118,
      "line_range": [
        118
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "118 assert sizeof(asn1_ctx_st) == 44, sizeof(asn1_ctx_st)\n119 assert alignment(asn1_ctx_st) == 4, alignment(asn1_ctx_st)\n120 ASN1_CTX = asn1_ctx_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 119,
      "line_range": [
        119
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "130 ]\n131 assert sizeof(asn1_object_st) == 24, sizeof(asn1_object_st)\n132 assert alignment(asn1_object_st) == 4, alignment(asn1_object_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 131,
      "line_range": [
        131
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "131 assert sizeof(asn1_object_st) == 24, sizeof(asn1_object_st)\n132 assert alignment(asn1_object_st) == 4, alignment(asn1_object_st)\n133 ASN1_OBJECT = asn1_object_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 132,
      "line_range": [
        132
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "141 ]\n142 assert sizeof(asn1_string_st) == 16, sizeof(asn1_string_st)\n143 assert alignment(asn1_string_st) == 4, alignment(asn1_string_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 142,
      "line_range": [
        142
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "142 assert sizeof(asn1_string_st) == 16, sizeof(asn1_string_st)\n143 assert alignment(asn1_string_st) == 4, alignment(asn1_string_st)\n144 ASN1_STRING = asn1_string_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 143,
      "line_range": [
        143
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "151 ]\n152 assert sizeof(ASN1_ENCODING_st) == 12, sizeof(ASN1_ENCODING_st)\n153 assert alignment(ASN1_ENCODING_st) == 4, alignment(ASN1_ENCODING_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 152,
      "line_range": [
        152
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "152 assert sizeof(ASN1_ENCODING_st) == 12, sizeof(ASN1_ENCODING_st)\n153 assert alignment(ASN1_ENCODING_st) == 4, alignment(ASN1_ENCODING_st)\n154 ASN1_ENCODING = ASN1_ENCODING_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 153,
      "line_range": [
        153
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "163 ]\n164 assert sizeof(asn1_string_table_st) == 20, sizeof(asn1_string_table_st)\n165 assert alignment(asn1_string_table_st) == 4, alignment(asn1_string_table_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 164,
      "line_range": [
        164
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "164 assert sizeof(asn1_string_table_st) == 20, sizeof(asn1_string_table_st)\n165 assert alignment(asn1_string_table_st) == 4, alignment(asn1_string_table_st)\n166 ASN1_STRING_TABLE = asn1_string_table_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 165,
      "line_range": [
        165
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "228 ]\n229 assert sizeof(N12asn1_type_st4DOLLAR_11E) == 4, sizeof(N12asn1_type_st4DOLLAR_11E)\n230 assert alignment(N12asn1_type_st4DOLLAR_11E) == 4, alignment(N12asn1_type_st4DOLLAR_11E)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 229,
      "line_range": [
        229
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "229 assert sizeof(N12asn1_type_st4DOLLAR_11E) == 4, sizeof(N12asn1_type_st4DOLLAR_11E)\n230 assert alignment(N12asn1_type_st4DOLLAR_11E) == 4, alignment(N12asn1_type_st4DOLLAR_11E)\n231 asn1_type_st._fields_ = [\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 230,
      "line_range": [
        230
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "234 ]\n235 assert sizeof(asn1_type_st) == 8, sizeof(asn1_type_st)\n236 assert alignment(asn1_type_st) == 4, alignment(asn1_type_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 235,
      "line_range": [
        235
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "235 assert sizeof(asn1_type_st) == 8, sizeof(asn1_type_st)\n236 assert alignment(asn1_type_st) == 4, alignment(asn1_type_st)\n237 ASN1_TYPE = asn1_type_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 236,
      "line_range": [
        236
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "245 ]\n246 assert sizeof(asn1_method_st) == 16, sizeof(asn1_method_st)\n247 assert alignment(asn1_method_st) == 4, alignment(asn1_method_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 246,
      "line_range": [
        246
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "246 assert sizeof(asn1_method_st) == 16, sizeof(asn1_method_st)\n247 assert alignment(asn1_method_st) == 4, alignment(asn1_method_st)\n248 ASN1_METHOD = asn1_method_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 247,
      "line_range": [
        247
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "255 ]\n256 assert sizeof(asn1_header_st) == 12, sizeof(asn1_header_st)\n257 assert alignment(asn1_header_st) == 4, alignment(asn1_header_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 256,
      "line_range": [
        256
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "256 assert sizeof(asn1_header_st) == 12, sizeof(asn1_header_st)\n257 assert alignment(asn1_header_st) == 4, alignment(asn1_header_st)\n258 ASN1_HEADER = asn1_header_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 257,
      "line_range": [
        257
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "265 ]\n266 assert sizeof(BIT_STRING_BITNAME_st) == 12, sizeof(BIT_STRING_BITNAME_st)\n267 assert alignment(BIT_STRING_BITNAME_st) == 4, alignment(BIT_STRING_BITNAME_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 266,
      "line_range": [
        266
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "266 assert sizeof(BIT_STRING_BITNAME_st) == 12, sizeof(BIT_STRING_BITNAME_st)\n267 assert alignment(BIT_STRING_BITNAME_st) == 4, alignment(BIT_STRING_BITNAME_st)\n268 BIT_STRING_BITNAME = BIT_STRING_BITNAME_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 267,
      "line_range": [
        267
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "286 ]\n287 assert sizeof(bio_method_st) == 40, sizeof(bio_method_st)\n288 assert alignment(bio_method_st) == 4, alignment(bio_method_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 287,
      "line_range": [
        287
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "287 assert sizeof(bio_method_st) == 40, sizeof(bio_method_st)\n288 assert alignment(bio_method_st) == 4, alignment(bio_method_st)\n289 BIO_METHOD = bio_method_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 288,
      "line_range": [
        288
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "298 ]\n299 assert sizeof(crypto_ex_data_st) == 8, sizeof(crypto_ex_data_st)\n300 assert alignment(crypto_ex_data_st) == 4, alignment(crypto_ex_data_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 299,
      "line_range": [
        299
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "299 assert sizeof(crypto_ex_data_st) == 8, sizeof(crypto_ex_data_st)\n300 assert alignment(crypto_ex_data_st) == 4, alignment(crypto_ex_data_st)\n301 CRYPTO_EX_DATA = crypto_ex_data_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 300,
      "line_range": [
        300
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "318 ]\n319 assert sizeof(bio_st) == 64, sizeof(bio_st)\n320 assert alignment(bio_st) == 4, alignment(bio_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 319,
      "line_range": [
        319
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "319 assert sizeof(bio_st) == 64, sizeof(bio_st)\n320 assert alignment(bio_st) == 4, alignment(bio_st)\n321 class bio_f_buffer_ctx_struct(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 320,
      "line_range": [
        320
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "332 ]\n333 assert sizeof(bio_f_buffer_ctx_struct) == 32, sizeof(bio_f_buffer_ctx_struct)\n334 assert alignment(bio_f_buffer_ctx_struct) == 4, alignment(bio_f_buffer_ctx_struct)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 333,
      "line_range": [
        333
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "333 assert sizeof(bio_f_buffer_ctx_struct) == 32, sizeof(bio_f_buffer_ctx_struct)\n334 assert alignment(bio_f_buffer_ctx_struct) == 4, alignment(bio_f_buffer_ctx_struct)\n335 BIO_F_BUFFER_CTX = bio_f_buffer_ctx_struct\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 334,
      "line_range": [
        334
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "345 ]\n346 assert sizeof(bf_key_st) == 4168, sizeof(bf_key_st)\n347 assert alignment(bf_key_st) == 4, alignment(bf_key_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 346,
      "line_range": [
        346
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "346 assert sizeof(bf_key_st) == 4168, sizeof(bf_key_st)\n347 assert alignment(bf_key_st) == 4, alignment(bf_key_st)\n348 BF_KEY = bf_key_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 347,
      "line_range": [
        347
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "357 ]\n358 assert sizeof(bignum_st) == 20, sizeof(bignum_st)\n359 assert alignment(bignum_st) == 4, alignment(bignum_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 358,
      "line_range": [
        358
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "358 assert sizeof(bignum_st) == 20, sizeof(bignum_st)\n359 assert alignment(bignum_st) == 4, alignment(bignum_st)\n360 BIGNUM = bignum_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 359,
      "line_range": [
        359
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "374 ]\n375 assert sizeof(bn_blinding_st) == 20, sizeof(bn_blinding_st)\n376 assert alignment(bn_blinding_st) == 4, alignment(bn_blinding_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 375,
      "line_range": [
        375
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "375 assert sizeof(bn_blinding_st) == 20, sizeof(bn_blinding_st)\n376 assert alignment(bn_blinding_st) == 4, alignment(bn_blinding_st)\n377 BN_BLINDING = bn_blinding_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 376,
      "line_range": [
        376
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "387 ]\n388 assert sizeof(bn_mont_ctx_st) == 72, sizeof(bn_mont_ctx_st)\n389 assert alignment(bn_mont_ctx_st) == 4, alignment(bn_mont_ctx_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 388,
      "line_range": [
        388
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "388 assert sizeof(bn_mont_ctx_st) == 72, sizeof(bn_mont_ctx_st)\n389 assert alignment(bn_mont_ctx_st) == 4, alignment(bn_mont_ctx_st)\n390 BN_MONT_CTX = bn_mont_ctx_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 389,
      "line_range": [
        389
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "399 ]\n400 assert sizeof(bn_recp_ctx_st) == 52, sizeof(bn_recp_ctx_st)\n401 assert alignment(bn_recp_ctx_st) == 4, alignment(bn_recp_ctx_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 400,
      "line_range": [
        400
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "400 assert sizeof(bn_recp_ctx_st) == 52, sizeof(bn_recp_ctx_st)\n401 assert alignment(bn_recp_ctx_st) == 4, alignment(bn_recp_ctx_st)\n402 BN_RECP_CTX = bn_recp_ctx_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 401,
      "line_range": [
        401
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "409 ]\n410 assert sizeof(buf_mem_st) == 12, sizeof(buf_mem_st)\n411 assert alignment(buf_mem_st) == 4, alignment(buf_mem_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 410,
      "line_range": [
        410
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "410 assert sizeof(buf_mem_st) == 12, sizeof(buf_mem_st)\n411 assert alignment(buf_mem_st) == 4, alignment(buf_mem_st)\n412 BUF_MEM = buf_mem_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 411,
      "line_range": [
        411
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "418 ]\n419 assert sizeof(cast_key_st) == 132, sizeof(cast_key_st)\n420 assert alignment(cast_key_st) == 4, alignment(cast_key_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 419,
      "line_range": [
        419
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "419 assert sizeof(cast_key_st) == 132, sizeof(cast_key_st)\n420 assert alignment(cast_key_st) == 4, alignment(cast_key_st)\n421 CAST_KEY = cast_key_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 420,
      "line_range": [
        420
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "433 ]\n434 assert sizeof(comp_method_st) == 32, sizeof(comp_method_st)\n435 assert alignment(comp_method_st) == 4, alignment(comp_method_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 434,
      "line_range": [
        434
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "434 assert sizeof(comp_method_st) == 32, sizeof(comp_method_st)\n435 assert alignment(comp_method_st) == 4, alignment(comp_method_st)\n436 COMP_METHOD = comp_method_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 435,
      "line_range": [
        435
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "446 ]\n447 assert sizeof(comp_ctx_st) == 28, sizeof(comp_ctx_st)\n448 assert alignment(comp_ctx_st) == 4, alignment(comp_ctx_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 447,
      "line_range": [
        447
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "447 assert sizeof(comp_ctx_st) == 28, sizeof(comp_ctx_st)\n448 assert alignment(comp_ctx_st) == 4, alignment(comp_ctx_st)\n449 COMP_CTX = comp_ctx_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 448,
      "line_range": [
        448
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "459 ]\n460 assert sizeof(CRYPTO_dynlock) == 8, sizeof(CRYPTO_dynlock)\n461 assert alignment(CRYPTO_dynlock) == 4, alignment(CRYPTO_dynlock)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 460,
      "line_range": [
        460
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "460 assert sizeof(CRYPTO_dynlock) == 8, sizeof(CRYPTO_dynlock)\n461 assert alignment(CRYPTO_dynlock) == 4, alignment(CRYPTO_dynlock)\n462 BIO_dummy = bio_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 461,
      "line_range": [
        461
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "474 ]\n475 assert sizeof(crypto_ex_data_func_st) == 20, sizeof(crypto_ex_data_func_st)\n476 assert alignment(crypto_ex_data_func_st) == 4, alignment(crypto_ex_data_func_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 475,
      "line_range": [
        475
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "475 assert sizeof(crypto_ex_data_func_st) == 20, sizeof(crypto_ex_data_func_st)\n476 assert alignment(crypto_ex_data_func_st) == 4, alignment(crypto_ex_data_func_st)\n477 CRYPTO_EX_DATA_FUNCS = crypto_ex_data_func_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 476,
      "line_range": [
        476
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "493 ]\n494 assert sizeof(N6DES_ks3DOLLAR_9E) == 8, sizeof(N6DES_ks3DOLLAR_9E)\n495 assert alignment(N6DES_ks3DOLLAR_9E) == 4, alignment(N6DES_ks3DOLLAR_9E)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 494,
      "line_range": [
        494
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "494 assert sizeof(N6DES_ks3DOLLAR_9E) == 8, sizeof(N6DES_ks3DOLLAR_9E)\n495 assert alignment(N6DES_ks3DOLLAR_9E) == 4, alignment(N6DES_ks3DOLLAR_9E)\n496 DES_ks._fields_ = [\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 495,
      "line_range": [
        495
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "498 ]\n499 assert sizeof(DES_ks) == 128, sizeof(DES_ks)\n500 assert alignment(DES_ks) == 4, alignment(DES_ks)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 499,
      "line_range": [
        499
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "499 assert sizeof(DES_ks) == 128, sizeof(DES_ks)\n500 assert alignment(DES_ks) == 4, alignment(DES_ks)\n501 DES_key_schedule = DES_ks\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 500,
      "line_range": [
        500
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "510 ]\n511 assert sizeof(N23_ossl_old_des_ks_struct4DOLLAR_10E) == 8, sizeof(N23_ossl_old_des_ks_struct4DOLLAR_10E)\n512 assert alignment(N23_ossl_old_des_ks_struct4DOLLAR_10E) == 4, alignment(N23_ossl_old_des_ks_struct4DOLLAR_10E)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 511,
      "line_range": [
        511
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "511 assert sizeof(N23_ossl_old_des_ks_struct4DOLLAR_10E) == 8, sizeof(N23_ossl_old_des_ks_struct4DOLLAR_10E)\n512 assert alignment(N23_ossl_old_des_ks_struct4DOLLAR_10E) == 4, alignment(N23_ossl_old_des_ks_struct4DOLLAR_10E)\n513 _ossl_old_des_ks_struct._fields_ = [\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 512,
      "line_range": [
        512
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "515 ]\n516 assert sizeof(_ossl_old_des_ks_struct) == 8, sizeof(_ossl_old_des_ks_struct)\n517 assert alignment(_ossl_old_des_ks_struct) == 4, alignment(_ossl_old_des_ks_struct)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 516,
      "line_range": [
        516
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "516 assert sizeof(_ossl_old_des_ks_struct) == 8, sizeof(_ossl_old_des_ks_struct)\n517 assert alignment(_ossl_old_des_ks_struct) == 4, alignment(_ossl_old_des_ks_struct)\n518 _ossl_old_des_key_schedule = _ossl_old_des_ks_struct * 16\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 517,
      "line_range": [
        517
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "533 ]\n534 assert sizeof(dh_method) == 32, sizeof(dh_method)\n535 assert alignment(dh_method) == 4, alignment(dh_method)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 534,
      "line_range": [
        534
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "534 assert sizeof(dh_method) == 32, sizeof(dh_method)\n535 assert alignment(dh_method) == 4, alignment(dh_method)\n536 DH_METHOD = dh_method\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 535,
      "line_range": [
        535
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "559 ]\n560 assert sizeof(dh_st) == 76, sizeof(dh_st)\n561 assert alignment(dh_st) == 4, alignment(dh_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 560,
      "line_range": [
        560
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "560 assert sizeof(dh_st) == 76, sizeof(dh_st)\n561 assert alignment(dh_st) == 4, alignment(dh_st)\n562 class dsa_st(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 561,
      "line_range": [
        561
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "570 ]\n571 assert sizeof(DSA_SIG_st) == 8, sizeof(DSA_SIG_st)\n572 assert alignment(DSA_SIG_st) == 4, alignment(DSA_SIG_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 571,
      "line_range": [
        571
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "571 assert sizeof(DSA_SIG_st) == 8, sizeof(DSA_SIG_st)\n572 assert alignment(DSA_SIG_st) == 4, alignment(DSA_SIG_st)\n573 DSA_SIG = DSA_SIG_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 572,
      "line_range": [
        572
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "587 ]\n588 assert sizeof(dsa_method) == 40, sizeof(dsa_method)\n589 assert alignment(dsa_method) == 4, alignment(dsa_method)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 588,
      "line_range": [
        588
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "588 assert sizeof(dsa_method) == 40, sizeof(dsa_method)\n589 assert alignment(dsa_method) == 4, alignment(dsa_method)\n590 DSA_METHOD = dsa_method\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 589,
      "line_range": [
        589
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "608 ]\n609 assert sizeof(dsa_st) == 68, sizeof(dsa_st)\n610 assert alignment(dsa_st) == 4, alignment(dsa_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 609,
      "line_range": [
        609
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "609 assert sizeof(dsa_st) == 68, sizeof(dsa_st)\n610 assert alignment(dsa_st) == 4, alignment(dsa_st)\n611 class evp_pkey_st(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 610,
      "line_range": [
        610
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "622 ]\n623 assert sizeof(N11evp_pkey_st4DOLLAR_12E) == 4, sizeof(N11evp_pkey_st4DOLLAR_12E)\n624 assert alignment(N11evp_pkey_st4DOLLAR_12E) == 4, alignment(N11evp_pkey_st4DOLLAR_12E)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 623,
      "line_range": [
        623
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "623 assert sizeof(N11evp_pkey_st4DOLLAR_12E) == 4, sizeof(N11evp_pkey_st4DOLLAR_12E)\n624 assert alignment(N11evp_pkey_st4DOLLAR_12E) == 4, alignment(N11evp_pkey_st4DOLLAR_12E)\n625 evp_pkey_st._fields_ = [\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 624,
      "line_range": [
        624
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "632 ]\n633 assert sizeof(evp_pkey_st) == 24, sizeof(evp_pkey_st)\n634 assert alignment(evp_pkey_st) == 4, alignment(evp_pkey_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 633,
      "line_range": [
        633
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "633 assert sizeof(evp_pkey_st) == 24, sizeof(evp_pkey_st)\n634 assert alignment(evp_pkey_st) == 4, alignment(evp_pkey_st)\n635 class env_md_st(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 634,
      "line_range": [
        634
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "655 ]\n656 assert sizeof(env_md_st) == 72, sizeof(env_md_st)\n657 assert alignment(env_md_st) == 4, alignment(env_md_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 656,
      "line_range": [
        656
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "656 assert sizeof(env_md_st) == 72, sizeof(env_md_st)\n657 assert alignment(env_md_st) == 4, alignment(env_md_st)\n658 EVP_MD = env_md_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 657,
      "line_range": [
        657
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "664 ]\n665 assert sizeof(env_md_ctx_st) == 16, sizeof(env_md_ctx_st)\n666 assert alignment(env_md_ctx_st) == 4, alignment(env_md_ctx_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 665,
      "line_range": [
        665
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "665 assert sizeof(env_md_ctx_st) == 16, sizeof(env_md_ctx_st)\n666 assert alignment(env_md_ctx_st) == 4, alignment(env_md_ctx_st)\n667 class evp_cipher_st(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 666,
      "line_range": [
        666
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "686 ]\n687 assert sizeof(evp_cipher_st) == 52, sizeof(evp_cipher_st)\n688 assert alignment(evp_cipher_st) == 4, alignment(evp_cipher_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 687,
      "line_range": [
        687
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "687 assert sizeof(evp_cipher_st) == 52, sizeof(evp_cipher_st)\n688 assert alignment(evp_cipher_st) == 4, alignment(evp_cipher_st)\n689 class evp_cipher_info_st(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 688,
      "line_range": [
        688
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "695 ]\n696 assert sizeof(evp_cipher_info_st) == 20, sizeof(evp_cipher_info_st)\n697 assert alignment(evp_cipher_info_st) == 4, alignment(evp_cipher_info_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 696,
      "line_range": [
        696
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "696 assert sizeof(evp_cipher_info_st) == 20, sizeof(evp_cipher_info_st)\n697 assert alignment(evp_cipher_info_st) == 4, alignment(evp_cipher_info_st)\n698 EVP_CIPHER_INFO = evp_cipher_info_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 697,
      "line_range": [
        697
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "715 ]\n716 assert sizeof(evp_cipher_ctx_st) == 140, sizeof(evp_cipher_ctx_st)\n717 assert alignment(evp_cipher_ctx_st) == 4, alignment(evp_cipher_ctx_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 716,
      "line_range": [
        716
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "716 assert sizeof(evp_cipher_ctx_st) == 140, sizeof(evp_cipher_ctx_st)\n717 assert alignment(evp_cipher_ctx_st) == 4, alignment(evp_cipher_ctx_st)\n718 class evp_Encode_Ctx_st(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 717,
      "line_range": [
        717
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "726 ]\n727 assert sizeof(evp_Encode_Ctx_st) == 96, sizeof(evp_Encode_Ctx_st)\n728 assert alignment(evp_Encode_Ctx_st) == 4, alignment(evp_Encode_Ctx_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 727,
      "line_range": [
        727
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "727 assert sizeof(evp_Encode_Ctx_st) == 96, sizeof(evp_Encode_Ctx_st)\n728 assert alignment(evp_Encode_Ctx_st) == 4, alignment(evp_Encode_Ctx_st)\n729 EVP_ENCODE_CTX = evp_Encode_Ctx_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 728,
      "line_range": [
        728
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "737 ]\n738 assert sizeof(lhash_node_st) == 12, sizeof(lhash_node_st)\n739 assert alignment(lhash_node_st) == 4, alignment(lhash_node_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 738,
      "line_range": [
        738
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "738 assert sizeof(lhash_node_st) == 12, sizeof(lhash_node_st)\n739 assert alignment(lhash_node_st) == 4, alignment(lhash_node_st)\n740 LHASH_NODE = lhash_node_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 739,
      "line_range": [
        739
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "772 ]\n773 assert sizeof(lhash_st) == 96, sizeof(lhash_st)\n774 assert alignment(lhash_st) == 4, alignment(lhash_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 773,
      "line_range": [
        773
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "773 assert sizeof(lhash_st) == 96, sizeof(lhash_st)\n774 assert alignment(lhash_st) == 4, alignment(lhash_st)\n775 LHASH = lhash_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 774,
      "line_range": [
        774
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "783 ]\n784 assert sizeof(MD2state_st) == 148, sizeof(MD2state_st)\n785 assert alignment(MD2state_st) == 4, alignment(MD2state_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 784,
      "line_range": [
        784
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "784 assert sizeof(MD2state_st) == 148, sizeof(MD2state_st)\n785 assert alignment(MD2state_st) == 4, alignment(MD2state_st)\n786 MD2_CTX = MD2state_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 785,
      "line_range": [
        785
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "798 ]\n799 assert sizeof(MD4state_st) == 92, sizeof(MD4state_st)\n800 assert alignment(MD4state_st) == 4, alignment(MD4state_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 799,
      "line_range": [
        799
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "799 assert sizeof(MD4state_st) == 92, sizeof(MD4state_st)\n800 assert alignment(MD4state_st) == 4, alignment(MD4state_st)\n801 MD4_CTX = MD4state_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 800,
      "line_range": [
        800
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "813 ]\n814 assert sizeof(MD5state_st) == 92, sizeof(MD5state_st)\n815 assert alignment(MD5state_st) == 4, alignment(MD5state_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 814,
      "line_range": [
        814
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "814 assert sizeof(MD5state_st) == 92, sizeof(MD5state_st)\n815 assert alignment(MD5state_st) == 4, alignment(MD5state_st)\n816 MD5_CTX = MD5state_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 815,
      "line_range": [
        815
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "825 ]\n826 assert sizeof(mdc2_ctx_st) == 32, sizeof(mdc2_ctx_st)\n827 assert alignment(mdc2_ctx_st) == 4, alignment(mdc2_ctx_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 826,
      "line_range": [
        826
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "826 assert sizeof(mdc2_ctx_st) == 32, sizeof(mdc2_ctx_st)\n827 assert alignment(mdc2_ctx_st) == 4, alignment(mdc2_ctx_st)\n828 MDC2_CTX = mdc2_ctx_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 827,
      "line_range": [
        827
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "836 ]\n837 assert sizeof(obj_name_st) == 16, sizeof(obj_name_st)\n838 assert alignment(obj_name_st) == 4, alignment(obj_name_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 837,
      "line_range": [
        837
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "837 assert sizeof(obj_name_st) == 16, sizeof(obj_name_st)\n838 assert alignment(obj_name_st) == 4, alignment(obj_name_st)\n839 OBJ_NAME = obj_name_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 838,
      "line_range": [
        838
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "869 ]\n870 assert sizeof(PEM_Encode_Seal_st) == 252, sizeof(PEM_Encode_Seal_st)\n871 assert alignment(PEM_Encode_Seal_st) == 4, alignment(PEM_Encode_Seal_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 870,
      "line_range": [
        870
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "870 assert sizeof(PEM_Encode_Seal_st) == 252, sizeof(PEM_Encode_Seal_st)\n871 assert alignment(PEM_Encode_Seal_st) == 4, alignment(PEM_Encode_Seal_st)\n872 PEM_ENCODE_SEAL_CTX = PEM_Encode_Seal_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 871,
      "line_range": [
        871
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "880 ]\n881 assert sizeof(pem_recip_st) == 16, sizeof(pem_recip_st)\n882 assert alignment(pem_recip_st) == 4, alignment(pem_recip_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 881,
      "line_range": [
        881
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "881 assert sizeof(pem_recip_st) == 16, sizeof(pem_recip_st)\n882 assert alignment(pem_recip_st) == 4, alignment(pem_recip_st)\n883 PEM_USER = pem_recip_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 882,
      "line_range": [
        882
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "891 ]\n892 assert sizeof(N10pem_ctx_st4DOLLAR_16E) == 8, sizeof(N10pem_ctx_st4DOLLAR_16E)\n893 assert alignment(N10pem_ctx_st4DOLLAR_16E) == 4, alignment(N10pem_ctx_st4DOLLAR_16E)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 892,
      "line_range": [
        892
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "892 assert sizeof(N10pem_ctx_st4DOLLAR_16E) == 8, sizeof(N10pem_ctx_st4DOLLAR_16E)\n893 assert alignment(N10pem_ctx_st4DOLLAR_16E) == 4, alignment(N10pem_ctx_st4DOLLAR_16E)\n894 class N10pem_ctx_st4DOLLAR_17E(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 893,
      "line_range": [
        893
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "898 ]\n899 assert sizeof(N10pem_ctx_st4DOLLAR_17E) == 4, sizeof(N10pem_ctx_st4DOLLAR_17E)\n900 assert alignment(N10pem_ctx_st4DOLLAR_17E) == 4, alignment(N10pem_ctx_st4DOLLAR_17E)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 899,
      "line_range": [
        899
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "899 assert sizeof(N10pem_ctx_st4DOLLAR_17E) == 4, sizeof(N10pem_ctx_st4DOLLAR_17E)\n900 assert alignment(N10pem_ctx_st4DOLLAR_17E) == 4, alignment(N10pem_ctx_st4DOLLAR_17E)\n901 pem_ctx_st._fields_ = [\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 900,
      "line_range": [
        900
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "920 ]\n921 assert sizeof(pem_ctx_st) == 76, sizeof(pem_ctx_st)\n922 assert alignment(pem_ctx_st) == 4, alignment(pem_ctx_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 921,
      "line_range": [
        921
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "921 assert sizeof(pem_ctx_st) == 76, sizeof(pem_ctx_st)\n922 assert alignment(pem_ctx_st) == 4, alignment(pem_ctx_st)\n923 PEM_CTX = pem_ctx_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 922,
      "line_range": [
        922
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "930 ]\n931 assert sizeof(pkcs7_issuer_and_serial_st) == 8, sizeof(pkcs7_issuer_and_serial_st)\n932 assert alignment(pkcs7_issuer_and_serial_st) == 4, alignment(pkcs7_issuer_and_serial_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 931,
      "line_range": [
        931
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "931 assert sizeof(pkcs7_issuer_and_serial_st) == 8, sizeof(pkcs7_issuer_and_serial_st)\n932 assert alignment(pkcs7_issuer_and_serial_st) == 4, alignment(pkcs7_issuer_and_serial_st)\n933 PKCS7_ISSUER_AND_SERIAL = pkcs7_issuer_and_serial_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 932,
      "line_range": [
        932
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "945 ]\n946 assert sizeof(pkcs7_signer_info_st) == 32, sizeof(pkcs7_signer_info_st)\n947 assert alignment(pkcs7_signer_info_st) == 4, alignment(pkcs7_signer_info_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 946,
      "line_range": [
        946
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "946 assert sizeof(pkcs7_signer_info_st) == 32, sizeof(pkcs7_signer_info_st)\n947 assert alignment(pkcs7_signer_info_st) == 4, alignment(pkcs7_signer_info_st)\n948 PKCS7_SIGNER_INFO = pkcs7_signer_info_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 947,
      "line_range": [
        947
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "957 ]\n958 assert sizeof(pkcs7_recip_info_st) == 20, sizeof(pkcs7_recip_info_st)\n959 assert alignment(pkcs7_recip_info_st) == 4, alignment(pkcs7_recip_info_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 958,
      "line_range": [
        958
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "958 assert sizeof(pkcs7_recip_info_st) == 20, sizeof(pkcs7_recip_info_st)\n959 assert alignment(pkcs7_recip_info_st) == 4, alignment(pkcs7_recip_info_st)\n960 PKCS7_RECIP_INFO = pkcs7_recip_info_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 959,
      "line_range": [
        959
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "972 ]\n973 assert sizeof(pkcs7_signed_st) == 24, sizeof(pkcs7_signed_st)\n974 assert alignment(pkcs7_signed_st) == 4, alignment(pkcs7_signed_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 973,
      "line_range": [
        973
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "973 assert sizeof(pkcs7_signed_st) == 24, sizeof(pkcs7_signed_st)\n974 assert alignment(pkcs7_signed_st) == 4, alignment(pkcs7_signed_st)\n975 PKCS7_SIGNED = pkcs7_signed_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 974,
      "line_range": [
        974
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "983 ]\n984 assert sizeof(pkcs7_enc_content_st) == 16, sizeof(pkcs7_enc_content_st)\n985 assert alignment(pkcs7_enc_content_st) == 4, alignment(pkcs7_enc_content_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 984,
      "line_range": [
        984
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "984 assert sizeof(pkcs7_enc_content_st) == 16, sizeof(pkcs7_enc_content_st)\n985 assert alignment(pkcs7_enc_content_st) == 4, alignment(pkcs7_enc_content_st)\n986 PKCS7_ENC_CONTENT = pkcs7_enc_content_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 985,
      "line_range": [
        985
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "993 ]\n994 assert sizeof(pkcs7_enveloped_st) == 12, sizeof(pkcs7_enveloped_st)\n995 assert alignment(pkcs7_enveloped_st) == 4, alignment(pkcs7_enveloped_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 994,
      "line_range": [
        994
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "994 assert sizeof(pkcs7_enveloped_st) == 12, sizeof(pkcs7_enveloped_st)\n995 assert alignment(pkcs7_enveloped_st) == 4, alignment(pkcs7_enveloped_st)\n996 PKCS7_ENVELOPE = pkcs7_enveloped_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 995,
      "line_range": [
        995
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1007 ]\n1008 assert sizeof(pkcs7_signedandenveloped_st) == 28, sizeof(pkcs7_signedandenveloped_st)\n1009 assert alignment(pkcs7_signedandenveloped_st) == 4, alignment(pkcs7_signedandenveloped_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1008,
      "line_range": [
        1008
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1008 assert sizeof(pkcs7_signedandenveloped_st) == 28, sizeof(pkcs7_signedandenveloped_st)\n1009 assert alignment(pkcs7_signedandenveloped_st) == 4, alignment(pkcs7_signedandenveloped_st)\n1010 PKCS7_SIGN_ENVELOPE = pkcs7_signedandenveloped_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1009,
      "line_range": [
        1009
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1018 ]\n1019 assert sizeof(pkcs7_digest_st) == 16, sizeof(pkcs7_digest_st)\n1020 assert alignment(pkcs7_digest_st) == 4, alignment(pkcs7_digest_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1019,
      "line_range": [
        1019
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1019 assert sizeof(pkcs7_digest_st) == 16, sizeof(pkcs7_digest_st)\n1020 assert alignment(pkcs7_digest_st) == 4, alignment(pkcs7_digest_st)\n1021 PKCS7_DIGEST = pkcs7_digest_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1020,
      "line_range": [
        1020
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1027 ]\n1028 assert sizeof(pkcs7_encrypted_st) == 8, sizeof(pkcs7_encrypted_st)\n1029 assert alignment(pkcs7_encrypted_st) == 4, alignment(pkcs7_encrypted_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1028,
      "line_range": [
        1028
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1028 assert sizeof(pkcs7_encrypted_st) == 8, sizeof(pkcs7_encrypted_st)\n1029 assert alignment(pkcs7_encrypted_st) == 4, alignment(pkcs7_encrypted_st)\n1030 PKCS7_ENCRYPT = pkcs7_encrypted_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1029,
      "line_range": [
        1029
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1042 ]\n1043 assert sizeof(N8pkcs7_st4DOLLAR_15E) == 4, sizeof(N8pkcs7_st4DOLLAR_15E)\n1044 assert alignment(N8pkcs7_st4DOLLAR_15E) == 4, alignment(N8pkcs7_st4DOLLAR_15E)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1043,
      "line_range": [
        1043
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1043 assert sizeof(N8pkcs7_st4DOLLAR_15E) == 4, sizeof(N8pkcs7_st4DOLLAR_15E)\n1044 assert alignment(N8pkcs7_st4DOLLAR_15E) == 4, alignment(N8pkcs7_st4DOLLAR_15E)\n1045 pkcs7_st._fields_ = [\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1044,
      "line_range": [
        1044
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1052 ]\n1053 assert sizeof(pkcs7_st) == 24, sizeof(pkcs7_st)\n1054 assert alignment(pkcs7_st) == 4, alignment(pkcs7_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1053,
      "line_range": [
        1053
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1053 assert sizeof(pkcs7_st) == 24, sizeof(pkcs7_st)\n1054 assert alignment(pkcs7_st) == 4, alignment(pkcs7_st)\n1055 PKCS7 = pkcs7_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1054,
      "line_range": [
        1054
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1060 ]\n1061 assert sizeof(rc2_key_st) == 256, sizeof(rc2_key_st)\n1062 assert alignment(rc2_key_st) == 4, alignment(rc2_key_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1061,
      "line_range": [
        1061
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1061 assert sizeof(rc2_key_st) == 256, sizeof(rc2_key_st)\n1062 assert alignment(rc2_key_st) == 4, alignment(rc2_key_st)\n1063 RC2_KEY = rc2_key_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1062,
      "line_range": [
        1062
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1070 ]\n1071 assert sizeof(rc4_key_st) == 258, sizeof(rc4_key_st)\n1072 assert alignment(rc4_key_st) == 1, alignment(rc4_key_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1071,
      "line_range": [
        1071
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1071 assert sizeof(rc4_key_st) == 258, sizeof(rc4_key_st)\n1072 assert alignment(rc4_key_st) == 1, alignment(rc4_key_st)\n1073 RC4_KEY = rc4_key_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1072,
      "line_range": [
        1072
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1079 ]\n1080 assert sizeof(rc5_key_st) == 140, sizeof(rc5_key_st)\n1081 assert alignment(rc5_key_st) == 4, alignment(rc5_key_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1080,
      "line_range": [
        1080
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1080 assert sizeof(rc5_key_st) == 140, sizeof(rc5_key_st)\n1081 assert alignment(rc5_key_st) == 4, alignment(rc5_key_st)\n1082 RC5_32_KEY = rc5_key_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1081,
      "line_range": [
        1081
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1095 ]\n1096 assert sizeof(RIPEMD160state_st) == 96, sizeof(RIPEMD160state_st)\n1097 assert alignment(RIPEMD160state_st) == 4, alignment(RIPEMD160state_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1096,
      "line_range": [
        1096
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1096 assert sizeof(RIPEMD160state_st) == 96, sizeof(RIPEMD160state_st)\n1097 assert alignment(RIPEMD160state_st) == 4, alignment(RIPEMD160state_st)\n1098 RIPEMD160_CTX = RIPEMD160state_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1097,
      "line_range": [
        1097
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1116 ]\n1117 assert sizeof(rsa_meth_st) == 52, sizeof(rsa_meth_st)\n1118 assert alignment(rsa_meth_st) == 4, alignment(rsa_meth_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1117,
      "line_range": [
        1117
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1117 assert sizeof(rsa_meth_st) == 52, sizeof(rsa_meth_st)\n1118 assert alignment(rsa_meth_st) == 4, alignment(rsa_meth_st)\n1119 RSA_METHOD = rsa_meth_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1118,
      "line_range": [
        1118
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1141 ]\n1142 assert sizeof(rsa_st) == 84, sizeof(rsa_st)\n1143 assert alignment(rsa_st) == 4, alignment(rsa_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1142,
      "line_range": [
        1142
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1142 assert sizeof(rsa_st) == 84, sizeof(rsa_st)\n1143 assert alignment(rsa_st) == 4, alignment(rsa_st)\n1144 openssl_fptr = CFUNCTYPE(None)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1143,
      "line_range": [
        1143
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1157 ]\n1158 assert sizeof(SHAstate_st) == 96, sizeof(SHAstate_st)\n1159 assert alignment(SHAstate_st) == 4, alignment(SHAstate_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1158,
      "line_range": [
        1158
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1158 assert sizeof(SHAstate_st) == 96, sizeof(SHAstate_st)\n1159 assert alignment(SHAstate_st) == 4, alignment(SHAstate_st)\n1160 SHA_CTX = SHAstate_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1159,
      "line_range": [
        1159
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1177 ]\n1178 assert sizeof(ssl_cipher_st) == 40, sizeof(ssl_cipher_st)\n1179 assert alignment(ssl_cipher_st) == 4, alignment(ssl_cipher_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1178,
      "line_range": [
        1178
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1178 assert sizeof(ssl_cipher_st) == 40, sizeof(ssl_cipher_st)\n1179 assert alignment(ssl_cipher_st) == 4, alignment(ssl_cipher_st)\n1180 SSL_CIPHER = ssl_cipher_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1179,
      "line_range": [
        1179
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1215 ]\n1216 assert sizeof(ssl_method_st) == 100, sizeof(ssl_method_st)\n1217 assert alignment(ssl_method_st) == 4, alignment(ssl_method_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1216,
      "line_range": [
        1216
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1216 assert sizeof(ssl_method_st) == 100, sizeof(ssl_method_st)\n1217 assert alignment(ssl_method_st) == 4, alignment(ssl_method_st)\n1218 ssl3_enc_method._fields_ = [\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1217,
      "line_range": [
        1217
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1249 ]\n1250 assert sizeof(ssl_session_st) == 200, sizeof(ssl_session_st)\n1251 assert alignment(ssl_session_st) == 4, alignment(ssl_session_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1250,
      "line_range": [
        1250
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1250 assert sizeof(ssl_session_st) == 200, sizeof(ssl_session_st)\n1251 assert alignment(ssl_session_st) == 4, alignment(ssl_session_st)\n1252 sess_cert_st._fields_ = [\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1251,
      "line_range": [
        1251
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1262 ]\n1263 assert sizeof(ssl_comp_st) == 12, sizeof(ssl_comp_st)\n1264 assert alignment(ssl_comp_st) == 4, alignment(ssl_comp_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1263,
      "line_range": [
        1263
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1263 assert sizeof(ssl_comp_st) == 12, sizeof(ssl_comp_st)\n1264 assert alignment(ssl_comp_st) == 4, alignment(ssl_comp_st)\n1265 SSL_COMP = ssl_comp_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1264,
      "line_range": [
        1264
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1280 ]\n1281 assert sizeof(N10ssl_ctx_st4DOLLAR_18E) == 44, sizeof(N10ssl_ctx_st4DOLLAR_18E)\n1282 assert alignment(N10ssl_ctx_st4DOLLAR_18E) == 4, alignment(N10ssl_ctx_st4DOLLAR_18E)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1281,
      "line_range": [
        1281
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1281 assert sizeof(N10ssl_ctx_st4DOLLAR_18E) == 44, sizeof(N10ssl_ctx_st4DOLLAR_18E)\n1282 assert alignment(N10ssl_ctx_st4DOLLAR_18E) == 4, alignment(N10ssl_ctx_st4DOLLAR_18E)\n1283 class cert_st(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1282,
      "line_range": [
        1282
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1330 ]\n1331 assert sizeof(ssl_ctx_st) == 248, sizeof(ssl_ctx_st)\n1332 assert alignment(ssl_ctx_st) == 4, alignment(ssl_ctx_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1331,
      "line_range": [
        1331
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1331 assert sizeof(ssl_ctx_st) == 248, sizeof(ssl_ctx_st)\n1332 assert alignment(ssl_ctx_st) == 4, alignment(ssl_ctx_st)\n1333 cert_st._fields_ = [\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1332,
      "line_range": [
        1332
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1399 ]\n1400 assert sizeof(ssl_st) == 268, sizeof(ssl_st)\n1401 assert alignment(ssl_st) == 4, alignment(ssl_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1400,
      "line_range": [
        1400
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1400 assert sizeof(ssl_st) == 268, sizeof(ssl_st)\n1401 assert alignment(ssl_st) == 4, alignment(ssl_st)\n1402 class N13ssl2_state_st4DOLLAR_19E(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1401,
      "line_range": [
        1401
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1416 ]\n1417 assert sizeof(N13ssl2_state_st4DOLLAR_19E) == 72, sizeof(N13ssl2_state_st4DOLLAR_19E)\n1418 assert alignment(N13ssl2_state_st4DOLLAR_19E) == 4, alignment(N13ssl2_state_st4DOLLAR_19E)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1417,
      "line_range": [
        1417
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1417 assert sizeof(N13ssl2_state_st4DOLLAR_19E) == 72, sizeof(N13ssl2_state_st4DOLLAR_19E)\n1418 assert alignment(N13ssl2_state_st4DOLLAR_19E) == 4, alignment(N13ssl2_state_st4DOLLAR_19E)\n1419 ssl2_state_st._fields_ = [\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1418,
      "line_range": [
        1418
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1454 ]\n1455 assert sizeof(ssl2_state_st) == 288, sizeof(ssl2_state_st)\n1456 assert alignment(ssl2_state_st) == 4, alignment(ssl2_state_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1455,
      "line_range": [
        1455
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1455 assert sizeof(ssl2_state_st) == 288, sizeof(ssl2_state_st)\n1456 assert alignment(ssl2_state_st) == 4, alignment(ssl2_state_st)\n1457 SSL2_STATE = ssl2_state_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1456,
      "line_range": [
        1456
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1467 ]\n1468 assert sizeof(ssl3_record_st) == 24, sizeof(ssl3_record_st)\n1469 assert alignment(ssl3_record_st) == 4, alignment(ssl3_record_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1468,
      "line_range": [
        1468
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1468 assert sizeof(ssl3_record_st) == 24, sizeof(ssl3_record_st)\n1469 assert alignment(ssl3_record_st) == 4, alignment(ssl3_record_st)\n1470 SSL3_RECORD = ssl3_record_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1469,
      "line_range": [
        1469
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1479 ]\n1480 assert sizeof(ssl3_buffer_st) == 16, sizeof(ssl3_buffer_st)\n1481 assert alignment(ssl3_buffer_st) == 4, alignment(ssl3_buffer_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1480,
      "line_range": [
        1480
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1480 assert sizeof(ssl3_buffer_st) == 16, sizeof(ssl3_buffer_st)\n1481 assert alignment(ssl3_buffer_st) == 4, alignment(ssl3_buffer_st)\n1482 SSL3_BUFFER = ssl3_buffer_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1481,
      "line_range": [
        1481
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1508 ]\n1509 assert sizeof(N13ssl3_state_st4DOLLAR_20E) == 296, sizeof(N13ssl3_state_st4DOLLAR_20E)\n1510 assert alignment(N13ssl3_state_st4DOLLAR_20E) == 4, alignment(N13ssl3_state_st4DOLLAR_20E)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1509,
      "line_range": [
        1509
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1509 assert sizeof(N13ssl3_state_st4DOLLAR_20E) == 296, sizeof(N13ssl3_state_st4DOLLAR_20E)\n1510 assert alignment(N13ssl3_state_st4DOLLAR_20E) == 4, alignment(N13ssl3_state_st4DOLLAR_20E)\n1511 ssl3_state_st._fields_ = [\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1510,
      "line_range": [
        1510
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1547 ]\n1548 assert sizeof(ssl3_state_st) == 648, sizeof(ssl3_state_st)\n1549 assert alignment(ssl3_state_st) == 4, alignment(ssl3_state_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1548,
      "line_range": [
        1548
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1548 assert sizeof(ssl3_state_st) == 648, sizeof(ssl3_state_st)\n1549 assert alignment(ssl3_state_st) == 4, alignment(ssl3_state_st)\n1550 SSL3_STATE = ssl3_state_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1549,
      "line_range": [
        1549
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1557 ]\n1558 assert sizeof(stack_st) == 20, sizeof(stack_st)\n1559 assert alignment(stack_st) == 4, alignment(stack_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1558,
      "line_range": [
        1558
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1558 assert sizeof(stack_st) == 20, sizeof(stack_st)\n1559 assert alignment(stack_st) == 4, alignment(stack_st)\n1560 class ui_st(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1559,
      "line_range": [
        1559
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1584 ]\n1585 assert sizeof(X509_objects_st) == 12, sizeof(X509_objects_st)\n1586 assert alignment(X509_objects_st) == 4, alignment(X509_objects_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1585,
      "line_range": [
        1585
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1585 assert sizeof(X509_objects_st) == 12, sizeof(X509_objects_st)\n1586 assert alignment(X509_objects_st) == 4, alignment(X509_objects_st)\n1587 X509_OBJECTS = X509_objects_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1586,
      "line_range": [
        1586
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1591 ]\n1592 assert sizeof(X509_algor_st) == 8, sizeof(X509_algor_st)\n1593 assert alignment(X509_algor_st) == 4, alignment(X509_algor_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1592,
      "line_range": [
        1592
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1592 assert sizeof(X509_algor_st) == 8, sizeof(X509_algor_st)\n1593 assert alignment(X509_algor_st) == 4, alignment(X509_algor_st)\n1594 class X509_val_st(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1593,
      "line_range": [
        1593
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1599 ]\n1600 assert sizeof(X509_val_st) == 8, sizeof(X509_val_st)\n1601 assert alignment(X509_val_st) == 4, alignment(X509_val_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1600,
      "line_range": [
        1600
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1600 assert sizeof(X509_val_st) == 8, sizeof(X509_val_st)\n1601 assert alignment(X509_val_st) == 4, alignment(X509_val_st)\n1602 X509_VAL = X509_val_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1601,
      "line_range": [
        1601
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1609 ]\n1610 assert sizeof(X509_pubkey_st) == 12, sizeof(X509_pubkey_st)\n1611 assert alignment(X509_pubkey_st) == 4, alignment(X509_pubkey_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1610,
      "line_range": [
        1610
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1610 assert sizeof(X509_pubkey_st) == 12, sizeof(X509_pubkey_st)\n1611 assert alignment(X509_pubkey_st) == 4, alignment(X509_pubkey_st)\n1612 X509_PUBKEY = X509_pubkey_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1611,
      "line_range": [
        1611
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1618 ]\n1619 assert sizeof(X509_sig_st) == 8, sizeof(X509_sig_st)\n1620 assert alignment(X509_sig_st) == 4, alignment(X509_sig_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1619,
      "line_range": [
        1619
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1619 assert sizeof(X509_sig_st) == 8, sizeof(X509_sig_st)\n1620 assert alignment(X509_sig_st) == 4, alignment(X509_sig_st)\n1621 X509_SIG = X509_sig_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1620,
      "line_range": [
        1620
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1629 ]\n1630 assert sizeof(X509_name_entry_st) == 16, sizeof(X509_name_entry_st)\n1631 assert alignment(X509_name_entry_st) == 4, alignment(X509_name_entry_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1630,
      "line_range": [
        1630
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1630 assert sizeof(X509_name_entry_st) == 16, sizeof(X509_name_entry_st)\n1631 assert alignment(X509_name_entry_st) == 4, alignment(X509_name_entry_st)\n1632 X509_NAME_ENTRY = X509_name_entry_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1631,
      "line_range": [
        1631
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1638 ]\n1639 assert sizeof(X509_name_st) == 16, sizeof(X509_name_st)\n1640 assert alignment(X509_name_st) == 4, alignment(X509_name_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1639,
      "line_range": [
        1639
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1639 assert sizeof(X509_name_st) == 16, sizeof(X509_name_st)\n1640 assert alignment(X509_name_st) == 4, alignment(X509_name_st)\n1641 class X509_extension_st(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1640,
      "line_range": [
        1640
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1647 ]\n1648 assert sizeof(X509_extension_st) == 12, sizeof(X509_extension_st)\n1649 assert alignment(X509_extension_st) == 4, alignment(X509_extension_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1648,
      "line_range": [
        1648
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1648 assert sizeof(X509_extension_st) == 12, sizeof(X509_extension_st)\n1649 assert alignment(X509_extension_st) == 4, alignment(X509_extension_st)\n1650 X509_EXTENSION = X509_extension_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1649,
      "line_range": [
        1649
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1659 ]\n1660 assert sizeof(N18x509_attributes_st4DOLLAR_13E) == 4, sizeof(N18x509_attributes_st4DOLLAR_13E)\n1661 assert alignment(N18x509_attributes_st4DOLLAR_13E) == 4, alignment(N18x509_attributes_st4DOLLAR_13E)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1660,
      "line_range": [
        1660
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1660 assert sizeof(N18x509_attributes_st4DOLLAR_13E) == 4, sizeof(N18x509_attributes_st4DOLLAR_13E)\n1661 assert alignment(N18x509_attributes_st4DOLLAR_13E) == 4, alignment(N18x509_attributes_st4DOLLAR_13E)\n1662 x509_attributes_st._fields_ = [\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1661,
      "line_range": [
        1661
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1666 ]\n1667 assert sizeof(x509_attributes_st) == 12, sizeof(x509_attributes_st)\n1668 assert alignment(x509_attributes_st) == 4, alignment(x509_attributes_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1667,
      "line_range": [
        1667
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1667 assert sizeof(x509_attributes_st) == 12, sizeof(x509_attributes_st)\n1668 assert alignment(x509_attributes_st) == 4, alignment(x509_attributes_st)\n1669 X509_ATTRIBUTE = x509_attributes_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1668,
      "line_range": [
        1668
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1678 ]\n1679 assert sizeof(X509_req_info_st) == 28, sizeof(X509_req_info_st)\n1680 assert alignment(X509_req_info_st) == 4, alignment(X509_req_info_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1679,
      "line_range": [
        1679
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1679 assert sizeof(X509_req_info_st) == 28, sizeof(X509_req_info_st)\n1680 assert alignment(X509_req_info_st) == 4, alignment(X509_req_info_st)\n1681 X509_REQ_INFO = X509_req_info_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1680,
      "line_range": [
        1680
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1689 ]\n1690 assert sizeof(X509_req_st) == 16, sizeof(X509_req_st)\n1691 assert alignment(X509_req_st) == 4, alignment(X509_req_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1690,
      "line_range": [
        1690
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1690 assert sizeof(X509_req_st) == 16, sizeof(X509_req_st)\n1691 assert alignment(X509_req_st) == 4, alignment(X509_req_st)\n1692 X509_REQ = X509_req_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1691,
      "line_range": [
        1691
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1706 ]\n1707 assert sizeof(x509_cinf_st) == 40, sizeof(x509_cinf_st)\n1708 assert alignment(x509_cinf_st) == 4, alignment(x509_cinf_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1707,
      "line_range": [
        1707
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1707 assert sizeof(x509_cinf_st) == 40, sizeof(x509_cinf_st)\n1708 assert alignment(x509_cinf_st) == 4, alignment(x509_cinf_st)\n1709 X509_CINF = x509_cinf_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1708,
      "line_range": [
        1708
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1718 ]\n1719 assert sizeof(x509_cert_aux_st) == 20, sizeof(x509_cert_aux_st)\n1720 assert alignment(x509_cert_aux_st) == 4, alignment(x509_cert_aux_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1719,
      "line_range": [
        1719
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1719 assert sizeof(x509_cert_aux_st) == 20, sizeof(x509_cert_aux_st)\n1720 assert alignment(x509_cert_aux_st) == 4, alignment(x509_cert_aux_st)\n1721 X509_CERT_AUX = x509_cert_aux_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1720,
      "line_range": [
        1720
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1741 ]\n1742 assert sizeof(x509_st) == 84, sizeof(x509_st)\n1743 assert alignment(x509_st) == 4, alignment(x509_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1742,
      "line_range": [
        1742
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1742 assert sizeof(x509_st) == 84, sizeof(x509_st)\n1743 assert alignment(x509_st) == 4, alignment(x509_st)\n1744 AUTHORITY_KEYID_st._fields_ = [\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1743,
      "line_range": [
        1743
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1755 ]\n1756 assert sizeof(x509_trust_st) == 24, sizeof(x509_trust_st)\n1757 assert alignment(x509_trust_st) == 4, alignment(x509_trust_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1756,
      "line_range": [
        1756
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1756 assert sizeof(x509_trust_st) == 24, sizeof(x509_trust_st)\n1757 assert alignment(x509_trust_st) == 4, alignment(x509_trust_st)\n1758 X509_TRUST = x509_trust_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1757,
      "line_range": [
        1757
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1766 ]\n1767 assert sizeof(X509_revoked_st) == 16, sizeof(X509_revoked_st)\n1768 assert alignment(X509_revoked_st) == 4, alignment(X509_revoked_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1767,
      "line_range": [
        1767
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1767 assert sizeof(X509_revoked_st) == 16, sizeof(X509_revoked_st)\n1768 assert alignment(X509_revoked_st) == 4, alignment(X509_revoked_st)\n1769 X509_REVOKED = X509_revoked_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1768,
      "line_range": [
        1768
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1781 ]\n1782 assert sizeof(X509_crl_info_st) == 40, sizeof(X509_crl_info_st)\n1783 assert alignment(X509_crl_info_st) == 4, alignment(X509_crl_info_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1782,
      "line_range": [
        1782
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1782 assert sizeof(X509_crl_info_st) == 40, sizeof(X509_crl_info_st)\n1783 assert alignment(X509_crl_info_st) == 4, alignment(X509_crl_info_st)\n1784 X509_CRL_INFO = X509_crl_info_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1783,
      "line_range": [
        1783
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1790 ]\n1791 assert sizeof(X509_crl_st) == 16, sizeof(X509_crl_st)\n1792 assert alignment(X509_crl_st) == 4, alignment(X509_crl_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1791,
      "line_range": [
        1791
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1791 assert sizeof(X509_crl_st) == 16, sizeof(X509_crl_st)\n1792 assert alignment(X509_crl_st) == 4, alignment(X509_crl_st)\n1793 class private_key_st(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1792,
      "line_range": [
        1792
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1805 ]\n1806 assert sizeof(private_key_st) == 52, sizeof(private_key_st)\n1807 assert alignment(private_key_st) == 4, alignment(private_key_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1806,
      "line_range": [
        1806
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1806 assert sizeof(private_key_st) == 52, sizeof(private_key_st)\n1807 assert alignment(private_key_st) == 4, alignment(private_key_st)\n1808 X509_PKEY = private_key_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1807,
      "line_range": [
        1807
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1819 ]\n1820 assert sizeof(X509_info_st) == 44, sizeof(X509_info_st)\n1821 assert alignment(X509_info_st) == 4, alignment(X509_info_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1820,
      "line_range": [
        1820
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1820 assert sizeof(X509_info_st) == 44, sizeof(X509_info_st)\n1821 assert alignment(X509_info_st) == 4, alignment(X509_info_st)\n1822 X509_INFO = X509_info_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1821,
      "line_range": [
        1821
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1828 ]\n1829 assert sizeof(Netscape_spkac_st) == 8, sizeof(Netscape_spkac_st)\n1830 assert alignment(Netscape_spkac_st) == 4, alignment(Netscape_spkac_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1829,
      "line_range": [
        1829
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1829 assert sizeof(Netscape_spkac_st) == 8, sizeof(Netscape_spkac_st)\n1830 assert alignment(Netscape_spkac_st) == 4, alignment(Netscape_spkac_st)\n1831 NETSCAPE_SPKAC = Netscape_spkac_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1830,
      "line_range": [
        1830
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1838 ]\n1839 assert sizeof(Netscape_spki_st) == 12, sizeof(Netscape_spki_st)\n1840 assert alignment(Netscape_spki_st) == 4, alignment(Netscape_spki_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1839,
      "line_range": [
        1839
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1839 assert sizeof(Netscape_spki_st) == 12, sizeof(Netscape_spki_st)\n1840 assert alignment(Netscape_spki_st) == 4, alignment(Netscape_spki_st)\n1841 NETSCAPE_SPKI = Netscape_spki_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1840,
      "line_range": [
        1840
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1847 ]\n1848 assert sizeof(Netscape_certificate_sequence) == 8, sizeof(Netscape_certificate_sequence)\n1849 assert alignment(Netscape_certificate_sequence) == 4, alignment(Netscape_certificate_sequence)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1848,
      "line_range": [
        1848
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1848 assert sizeof(Netscape_certificate_sequence) == 8, sizeof(Netscape_certificate_sequence)\n1849 assert alignment(Netscape_certificate_sequence) == 4, alignment(Netscape_certificate_sequence)\n1850 NETSCAPE_CERT_SEQUENCE = Netscape_certificate_sequence\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1849,
      "line_range": [
        1849
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1856 ]\n1857 assert sizeof(PBEPARAM_st) == 8, sizeof(PBEPARAM_st)\n1858 assert alignment(PBEPARAM_st) == 4, alignment(PBEPARAM_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1857,
      "line_range": [
        1857
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1857 assert sizeof(PBEPARAM_st) == 8, sizeof(PBEPARAM_st)\n1858 assert alignment(PBEPARAM_st) == 4, alignment(PBEPARAM_st)\n1859 PBEPARAM = PBEPARAM_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1858,
      "line_range": [
        1858
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1865 ]\n1866 assert sizeof(PBE2PARAM_st) == 8, sizeof(PBE2PARAM_st)\n1867 assert alignment(PBE2PARAM_st) == 4, alignment(PBE2PARAM_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1866,
      "line_range": [
        1866
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1866 assert sizeof(PBE2PARAM_st) == 8, sizeof(PBE2PARAM_st)\n1867 assert alignment(PBE2PARAM_st) == 4, alignment(PBE2PARAM_st)\n1868 PBE2PARAM = PBE2PARAM_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1867,
      "line_range": [
        1867
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1876 ]\n1877 assert sizeof(PBKDF2PARAM_st) == 16, sizeof(PBKDF2PARAM_st)\n1878 assert alignment(PBKDF2PARAM_st) == 4, alignment(PBKDF2PARAM_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1877,
      "line_range": [
        1877
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1877 assert sizeof(PBKDF2PARAM_st) == 16, sizeof(PBKDF2PARAM_st)\n1878 assert alignment(PBKDF2PARAM_st) == 4, alignment(PBKDF2PARAM_st)\n1879 PBKDF2PARAM = PBKDF2PARAM_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1878,
      "line_range": [
        1878
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1888 ]\n1889 assert sizeof(pkcs8_priv_key_info_st) == 20, sizeof(pkcs8_priv_key_info_st)\n1890 assert alignment(pkcs8_priv_key_info_st) == 4, alignment(pkcs8_priv_key_info_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1889,
      "line_range": [
        1889
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1889 assert sizeof(pkcs8_priv_key_info_st) == 20, sizeof(pkcs8_priv_key_info_st)\n1890 assert alignment(pkcs8_priv_key_info_st) == 4, alignment(pkcs8_priv_key_info_st)\n1891 PKCS8_PRIV_KEY_INFO = pkcs8_priv_key_info_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1890,
      "line_range": [
        1890
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1899 ]\n1900 assert sizeof(x509_hash_dir_st) == 16, sizeof(x509_hash_dir_st)\n1901 assert alignment(x509_hash_dir_st) == 4, alignment(x509_hash_dir_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1900,
      "line_range": [
        1900
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1900 assert sizeof(x509_hash_dir_st) == 16, sizeof(x509_hash_dir_st)\n1901 assert alignment(x509_hash_dir_st) == 4, alignment(x509_hash_dir_st)\n1902 X509_HASH_DIR_CTX = x509_hash_dir_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1901,
      "line_range": [
        1901
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1910 ]\n1911 assert sizeof(x509_file_st) == 16, sizeof(x509_file_st)\n1912 assert alignment(x509_file_st) == 4, alignment(x509_file_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1911,
      "line_range": [
        1911
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1911 assert sizeof(x509_file_st) == 16, sizeof(x509_file_st)\n1912 assert alignment(x509_file_st) == 4, alignment(x509_file_st)\n1913 X509_CERT_FILE_CTX = x509_file_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1912,
      "line_range": [
        1912
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1923 ]\n1924 assert sizeof(N14x509_object_st4DOLLAR_14E) == 4, sizeof(N14x509_object_st4DOLLAR_14E)\n1925 assert alignment(N14x509_object_st4DOLLAR_14E) == 4, alignment(N14x509_object_st4DOLLAR_14E)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1924,
      "line_range": [
        1924
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1924 assert sizeof(N14x509_object_st4DOLLAR_14E) == 4, sizeof(N14x509_object_st4DOLLAR_14E)\n1925 assert alignment(N14x509_object_st4DOLLAR_14E) == 4, alignment(N14x509_object_st4DOLLAR_14E)\n1926 x509_object_st._fields_ = [\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1925,
      "line_range": [
        1925
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1929 ]\n1930 assert sizeof(x509_object_st) == 8, sizeof(x509_object_st)\n1931 assert alignment(x509_object_st) == 4, alignment(x509_object_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1930,
      "line_range": [
        1930
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1930 assert sizeof(x509_object_st) == 8, sizeof(x509_object_st)\n1931 assert alignment(x509_object_st) == 4, alignment(x509_object_st)\n1932 X509_OBJECT = x509_object_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1931,
      "line_range": [
        1931
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1949 ]\n1950 assert sizeof(x509_lookup_method_st) == 40, sizeof(x509_lookup_method_st)\n1951 assert alignment(x509_lookup_method_st) == 4, alignment(x509_lookup_method_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1950,
      "line_range": [
        1950
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1950 assert sizeof(x509_lookup_method_st) == 40, sizeof(x509_lookup_method_st)\n1951 assert alignment(x509_lookup_method_st) == 4, alignment(x509_lookup_method_st)\n1952 X509_LOOKUP_METHOD = x509_lookup_method_st\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1951,
      "line_range": [
        1951
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1972 ]\n1973 assert sizeof(x509_store_st) == 76, sizeof(x509_store_st)\n1974 assert alignment(x509_store_st) == 4, alignment(x509_store_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1973,
      "line_range": [
        1973
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1973 assert sizeof(x509_store_st) == 76, sizeof(x509_store_st)\n1974 assert alignment(x509_store_st) == 4, alignment(x509_store_st)\n1975 x509_lookup_st._fields_ = [\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1974,
      "line_range": [
        1974
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1981 ]\n1982 assert sizeof(x509_lookup_st) == 20, sizeof(x509_lookup_st)\n1983 assert alignment(x509_lookup_st) == 4, alignment(x509_lookup_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1982,
      "line_range": [
        1982
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1982 assert sizeof(x509_lookup_st) == 20, sizeof(x509_lookup_st)\n1983 assert alignment(x509_lookup_st) == 4, alignment(x509_lookup_st)\n1984 time_t = __darwin_time_t\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1983,
      "line_range": [
        1983
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2014 ]\n2015 assert sizeof(x509_store_ctx_st) == 116, sizeof(x509_store_ctx_st)\n2016 assert alignment(x509_store_ctx_st) == 4, alignment(x509_store_ctx_st)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2015,
      "line_range": [
        2015
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2015 assert sizeof(x509_store_ctx_st) == 116, sizeof(x509_store_ctx_st)\n2016 assert alignment(x509_store_ctx_st) == 4, alignment(x509_store_ctx_st)\n2017 va_list = __darwin_va_list\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2016,
      "line_range": [
        2016
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2025 ]\n2026 assert sizeof(__sbuf) == 8, sizeof(__sbuf)\n2027 assert alignment(__sbuf) == 4, alignment(__sbuf)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2026,
      "line_range": [
        2026
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2026 assert sizeof(__sbuf) == 8, sizeof(__sbuf)\n2027 assert alignment(__sbuf) == 4, alignment(__sbuf)\n2028 class __sFILEX(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2027,
      "line_range": [
        2027
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2056 ]\n2057 assert sizeof(__sFILE) == 88, sizeof(__sFILE)\n2058 assert alignment(__sFILE) == 4, alignment(__sFILE)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2057,
      "line_range": [
        2057
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2057 assert sizeof(__sFILE) == 88, sizeof(__sFILE)\n2058 assert alignment(__sFILE) == 4, alignment(__sFILE)\n2059 FILE = __sFILE\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2058,
      "line_range": [
        2058
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2067 ]\n2068 assert sizeof(div_t) == 8, sizeof(div_t)\n2069 assert alignment(div_t) == 4, alignment(div_t)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2068,
      "line_range": [
        2068
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2068 assert sizeof(div_t) == 8, sizeof(div_t)\n2069 assert alignment(div_t) == 4, alignment(div_t)\n2070 class ldiv_t(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2069,
      "line_range": [
        2069
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2075 ]\n2076 assert sizeof(ldiv_t) == 8, sizeof(ldiv_t)\n2077 assert alignment(ldiv_t) == 4, alignment(ldiv_t)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2076,
      "line_range": [
        2076
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2076 assert sizeof(ldiv_t) == 8, sizeof(ldiv_t)\n2077 assert alignment(ldiv_t) == 4, alignment(ldiv_t)\n2078 class lldiv_t(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2077,
      "line_range": [
        2077
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2084 ]\n2085 assert sizeof(lldiv_t) == 16, sizeof(lldiv_t)\n2086 assert alignment(lldiv_t) == 4, alignment(lldiv_t)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2085,
      "line_range": [
        2085
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2085 assert sizeof(lldiv_t) == 16, sizeof(lldiv_t)\n2086 assert alignment(lldiv_t) == 4, alignment(lldiv_t)\n2087 __darwin_dev_t = __int32_t\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2086,
      "line_range": [
        2086
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2105 ]\n2106 assert sizeof(__darwin_pthread_handler_rec) == 12, sizeof(__darwin_pthread_handler_rec)\n2107 assert alignment(__darwin_pthread_handler_rec) == 4, alignment(__darwin_pthread_handler_rec)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2106,
      "line_range": [
        2106
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2106 assert sizeof(__darwin_pthread_handler_rec) == 12, sizeof(__darwin_pthread_handler_rec)\n2107 assert alignment(__darwin_pthread_handler_rec) == 4, alignment(__darwin_pthread_handler_rec)\n2108 class _opaque_pthread_attr_t(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2107,
      "line_range": [
        2107
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2113 ]\n2114 assert sizeof(_opaque_pthread_attr_t) == 40, sizeof(_opaque_pthread_attr_t)\n2115 assert alignment(_opaque_pthread_attr_t) == 4, alignment(_opaque_pthread_attr_t)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2114,
      "line_range": [
        2114
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2114 assert sizeof(_opaque_pthread_attr_t) == 40, sizeof(_opaque_pthread_attr_t)\n2115 assert alignment(_opaque_pthread_attr_t) == 4, alignment(_opaque_pthread_attr_t)\n2116 class _opaque_pthread_cond_t(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2115,
      "line_range": [
        2115
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2121 ]\n2122 assert sizeof(_opaque_pthread_cond_t) == 28, sizeof(_opaque_pthread_cond_t)\n2123 assert alignment(_opaque_pthread_cond_t) == 4, alignment(_opaque_pthread_cond_t)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2122,
      "line_range": [
        2122
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2122 assert sizeof(_opaque_pthread_cond_t) == 28, sizeof(_opaque_pthread_cond_t)\n2123 assert alignment(_opaque_pthread_cond_t) == 4, alignment(_opaque_pthread_cond_t)\n2124 class _opaque_pthread_condattr_t(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2123,
      "line_range": [
        2123
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2129 ]\n2130 assert sizeof(_opaque_pthread_condattr_t) == 8, sizeof(_opaque_pthread_condattr_t)\n2131 assert alignment(_opaque_pthread_condattr_t) == 4, alignment(_opaque_pthread_condattr_t)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2130,
      "line_range": [
        2130
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2130 assert sizeof(_opaque_pthread_condattr_t) == 8, sizeof(_opaque_pthread_condattr_t)\n2131 assert alignment(_opaque_pthread_condattr_t) == 4, alignment(_opaque_pthread_condattr_t)\n2132 class _opaque_pthread_mutex_t(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2131,
      "line_range": [
        2131
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2137 ]\n2138 assert sizeof(_opaque_pthread_mutex_t) == 44, sizeof(_opaque_pthread_mutex_t)\n2139 assert alignment(_opaque_pthread_mutex_t) == 4, alignment(_opaque_pthread_mutex_t)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2138,
      "line_range": [
        2138
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2138 assert sizeof(_opaque_pthread_mutex_t) == 44, sizeof(_opaque_pthread_mutex_t)\n2139 assert alignment(_opaque_pthread_mutex_t) == 4, alignment(_opaque_pthread_mutex_t)\n2140 class _opaque_pthread_mutexattr_t(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2139,
      "line_range": [
        2139
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2145 ]\n2146 assert sizeof(_opaque_pthread_mutexattr_t) == 12, sizeof(_opaque_pthread_mutexattr_t)\n2147 assert alignment(_opaque_pthread_mutexattr_t) == 4, alignment(_opaque_pthread_mutexattr_t)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2146,
      "line_range": [
        2146
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2146 assert sizeof(_opaque_pthread_mutexattr_t) == 12, sizeof(_opaque_pthread_mutexattr_t)\n2147 assert alignment(_opaque_pthread_mutexattr_t) == 4, alignment(_opaque_pthread_mutexattr_t)\n2148 class _opaque_pthread_once_t(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2147,
      "line_range": [
        2147
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2153 ]\n2154 assert sizeof(_opaque_pthread_once_t) == 8, sizeof(_opaque_pthread_once_t)\n2155 assert alignment(_opaque_pthread_once_t) == 4, alignment(_opaque_pthread_once_t)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2154,
      "line_range": [
        2154
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2154 assert sizeof(_opaque_pthread_once_t) == 8, sizeof(_opaque_pthread_once_t)\n2155 assert alignment(_opaque_pthread_once_t) == 4, alignment(_opaque_pthread_once_t)\n2156 class _opaque_pthread_rwlock_t(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2155,
      "line_range": [
        2155
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2161 ]\n2162 assert sizeof(_opaque_pthread_rwlock_t) == 128, sizeof(_opaque_pthread_rwlock_t)\n2163 assert alignment(_opaque_pthread_rwlock_t) == 4, alignment(_opaque_pthread_rwlock_t)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2162,
      "line_range": [
        2162
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2162 assert sizeof(_opaque_pthread_rwlock_t) == 128, sizeof(_opaque_pthread_rwlock_t)\n2163 assert alignment(_opaque_pthread_rwlock_t) == 4, alignment(_opaque_pthread_rwlock_t)\n2164 class _opaque_pthread_rwlockattr_t(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2163,
      "line_range": [
        2163
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2169 ]\n2170 assert sizeof(_opaque_pthread_rwlockattr_t) == 16, sizeof(_opaque_pthread_rwlockattr_t)\n2171 assert alignment(_opaque_pthread_rwlockattr_t) == 4, alignment(_opaque_pthread_rwlockattr_t)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2170,
      "line_range": [
        2170
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2170 assert sizeof(_opaque_pthread_rwlockattr_t) == 16, sizeof(_opaque_pthread_rwlockattr_t)\n2171 assert alignment(_opaque_pthread_rwlockattr_t) == 4, alignment(_opaque_pthread_rwlockattr_t)\n2172 class _opaque_pthread_t(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2171,
      "line_range": [
        2171
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2178 ]\n2179 assert sizeof(_opaque_pthread_t) == 604, sizeof(_opaque_pthread_t)\n2180 assert alignment(_opaque_pthread_t) == 4, alignment(_opaque_pthread_t)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2179,
      "line_range": [
        2179
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2179 assert sizeof(_opaque_pthread_t) == 604, sizeof(_opaque_pthread_t)\n2180 assert alignment(_opaque_pthread_t) == 4, alignment(_opaque_pthread_t)\n2181 __darwin_blkcnt_t = __int64_t\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2180,
      "line_range": [
        2180
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2214 ]\n2215 assert sizeof(sigaltstack) == 12, sizeof(sigaltstack)\n2216 assert alignment(sigaltstack) == 4, alignment(sigaltstack)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2215,
      "line_range": [
        2215
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2215 assert sizeof(sigaltstack) == 12, sizeof(sigaltstack)\n2216 assert alignment(sigaltstack) == 4, alignment(sigaltstack)\n2217 __darwin_stack_t = sigaltstack\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2216,
      "line_range": [
        2216
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2227 ]\n2228 assert sizeof(ucontext) == 32, sizeof(ucontext)\n2229 assert alignment(ucontext) == 4, alignment(ucontext)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2228,
      "line_range": [
        2228
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2228 assert sizeof(ucontext) == 32, sizeof(ucontext)\n2229 assert alignment(ucontext) == 4, alignment(ucontext)\n2230 __darwin_ucontext_t = ucontext\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2229,
      "line_range": [
        2229
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2240 ]\n2241 assert sizeof(ucontext64) == 32, sizeof(ucontext64)\n2242 assert alignment(ucontext64) == 4, alignment(ucontext64)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2241,
      "line_range": [
        2241
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2241 assert sizeof(ucontext64) == 32, sizeof(ucontext64)\n2242 assert alignment(ucontext64) == 4, alignment(ucontext64)\n2243 __darwin_ucontext64_t = ucontext64\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2242,
      "line_range": [
        2242
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2249 ]\n2250 assert sizeof(timeval) == 8, sizeof(timeval)\n2251 assert alignment(timeval) == 4, alignment(timeval)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2250,
      "line_range": [
        2250
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2250 assert sizeof(timeval) == 8, sizeof(timeval)\n2251 assert alignment(timeval) == 4, alignment(timeval)\n2252 rlim_t = __int64_t\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2251,
      "line_range": [
        2251
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2272 ]\n2273 assert sizeof(rusage) == 72, sizeof(rusage)\n2274 assert alignment(rusage) == 4, alignment(rusage)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2273,
      "line_range": [
        2273
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2273 assert sizeof(rusage) == 72, sizeof(rusage)\n2274 assert alignment(rusage) == 4, alignment(rusage)\n2275 class rlimit(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2274,
      "line_range": [
        2274
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2281 ]\n2282 assert sizeof(rlimit) == 16, sizeof(rlimit)\n2283 assert alignment(rlimit) == 4, alignment(rlimit)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2282,
      "line_range": [
        2282
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2282 assert sizeof(rlimit) == 16, sizeof(rlimit)\n2283 assert alignment(rlimit) == 4, alignment(rlimit)\n2284 mcontext_t = __darwin_mcontext_t\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2283,
      "line_range": [
        2283
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2296 ]\n2297 assert sizeof(sigval) == 4, sizeof(sigval)\n2298 assert alignment(sigval) == 4, alignment(sigval)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2297,
      "line_range": [
        2297
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2297 assert sizeof(sigval) == 4, sizeof(sigval)\n2298 assert alignment(sigval) == 4, alignment(sigval)\n2299 class sigevent(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2298,
      "line_range": [
        2298
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2307 ]\n2308 assert sizeof(sigevent) == 20, sizeof(sigevent)\n2309 assert alignment(sigevent) == 4, alignment(sigevent)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2308,
      "line_range": [
        2308
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2308 assert sizeof(sigevent) == 20, sizeof(sigevent)\n2309 assert alignment(sigevent) == 4, alignment(sigevent)\n2310 class __siginfo(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2309,
      "line_range": [
        2309
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2324 ]\n2325 assert sizeof(__siginfo) == 64, sizeof(__siginfo)\n2326 assert alignment(__siginfo) == 4, alignment(__siginfo)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2325,
      "line_range": [
        2325
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2325 assert sizeof(__siginfo) == 64, sizeof(__siginfo)\n2326 assert alignment(__siginfo) == 4, alignment(__siginfo)\n2327 siginfo_t = __siginfo\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2326,
      "line_range": [
        2326
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2333 ]\n2334 assert sizeof(__sigaction_u) == 4, sizeof(__sigaction_u)\n2335 assert alignment(__sigaction_u) == 4, alignment(__sigaction_u)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2334,
      "line_range": [
        2334
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2334 assert sizeof(__sigaction_u) == 4, sizeof(__sigaction_u)\n2335 assert alignment(__sigaction_u) == 4, alignment(__sigaction_u)\n2336 class __sigaction(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2335,
      "line_range": [
        2335
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2343 ]\n2344 assert sizeof(__sigaction) == 16, sizeof(__sigaction)\n2345 assert alignment(__sigaction) == 4, alignment(__sigaction)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2344,
      "line_range": [
        2344
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2344 assert sizeof(__sigaction) == 16, sizeof(__sigaction)\n2345 assert alignment(__sigaction) == 4, alignment(__sigaction)\n2346 class sigaction(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2345,
      "line_range": [
        2345
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2352 ]\n2353 assert sizeof(sigaction) == 12, sizeof(sigaction)\n2354 assert alignment(sigaction) == 4, alignment(sigaction)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2353,
      "line_range": [
        2353
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2353 assert sizeof(sigaction) == 12, sizeof(sigaction)\n2354 assert alignment(sigaction) == 4, alignment(sigaction)\n2355 sig_t = CFUNCTYPE(None, c_int)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2354,
      "line_range": [
        2354
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2363 ]\n2364 assert sizeof(sigvec) == 12, sizeof(sigvec)\n2365 assert alignment(sigvec) == 4, alignment(sigvec)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2364,
      "line_range": [
        2364
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2364 assert sizeof(sigvec) == 12, sizeof(sigvec)\n2365 assert alignment(sigvec) == 4, alignment(sigvec)\n2366 class sigstack(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2365,
      "line_range": [
        2365
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2371 ]\n2372 assert sizeof(sigstack) == 8, sizeof(sigstack)\n2373 assert alignment(sigstack) == 4, alignment(sigstack)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2372,
      "line_range": [
        2372
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2372 assert sizeof(sigstack) == 8, sizeof(sigstack)\n2373 assert alignment(sigstack) == 4, alignment(sigstack)\n2374 u_char = c_ubyte\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2373,
      "line_range": [
        2373
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2406 ]\n2407 assert sizeof(fd_set) == 128, sizeof(fd_set)\n2408 assert alignment(fd_set) == 4, alignment(fd_set)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2407,
      "line_range": [
        2407
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2407 assert sizeof(fd_set) == 128, sizeof(fd_set)\n2408 assert alignment(fd_set) == 4, alignment(fd_set)\n2409 pthread_cond_t = __darwin_pthread_cond_t\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2408,
      "line_range": [
        2408
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2433 ]\n2434 assert sizeof(N4wait3DOLLAR_3E) == 4, sizeof(N4wait3DOLLAR_3E)\n2435 assert alignment(N4wait3DOLLAR_3E) == 4, alignment(N4wait3DOLLAR_3E)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2434,
      "line_range": [
        2434
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2434 assert sizeof(N4wait3DOLLAR_3E) == 4, sizeof(N4wait3DOLLAR_3E)\n2435 assert alignment(N4wait3DOLLAR_3E) == 4, alignment(N4wait3DOLLAR_3E)\n2436 class N4wait3DOLLAR_4E(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2435,
      "line_range": [
        2435
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2442 ]\n2443 assert sizeof(N4wait3DOLLAR_4E) == 4, sizeof(N4wait3DOLLAR_4E)\n2444 assert alignment(N4wait3DOLLAR_4E) == 4, alignment(N4wait3DOLLAR_4E)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2443,
      "line_range": [
        2443
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2443 assert sizeof(N4wait3DOLLAR_4E) == 4, sizeof(N4wait3DOLLAR_4E)\n2444 assert alignment(N4wait3DOLLAR_4E) == 4, alignment(N4wait3DOLLAR_4E)\n2445 wait._fields_ = [\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2444,
      "line_range": [
        2444
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2449 ]\n2450 assert sizeof(wait) == 4, sizeof(wait)\n2451 assert alignment(wait) == 4, alignment(wait)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2450,
      "line_range": [
        2450
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2450 assert sizeof(wait) == 4, sizeof(wait)\n2451 assert alignment(wait) == 4, alignment(wait)\n2452 class timespec(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2451,
      "line_range": [
        2451
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2457 ]\n2458 assert sizeof(timespec) == 8, sizeof(timespec)\n2459 assert alignment(timespec) == 4, alignment(timespec)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2458,
      "line_range": [
        2458
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2458 assert sizeof(timespec) == 8, sizeof(timespec)\n2459 assert alignment(timespec) == 4, alignment(timespec)\n2460 class tm(Structure):\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2459,
      "line_range": [
        2459
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2474 ]\n2475 assert sizeof(tm) == 44, sizeof(tm)\n2476 assert alignment(tm) == 4, alignment(tm)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2475,
      "line_range": [
        2475
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2475 assert sizeof(tm) == 44, sizeof(tm)\n2476 assert alignment(tm) == 4, alignment(tm)\n2477 __gnuc_va_list = STRING\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\infinite_recursion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2476,
      "line_range": [
        2476
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "46                 try:\n47                     x = eval(s)\n48                 except OverflowError:\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\py3_test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 47,
      "line_range": [
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "58                 try:\n59                     x = eval(s)\n60                 except OverflowError:\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\py3_test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 59,
      "line_range": [
        59
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "170         # testlist ENDMARKER\n171         x = eval('1, 0 or 1')\n172 \n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\py3_test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 171,
      "line_range": [
        171
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "533         # assert_stmt: 'assert' test [',' test]\n534         assert 1\n535         assert 1, 1\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\py3_test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 534,
      "line_range": [
        534
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "534         assert 1\n535         assert 1, 1\n536         assert lambda x:x\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\py3_test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 535,
      "line_range": [
        535
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "535         assert 1, 1\n536         assert lambda x:x\n537         assert 1, lambda x:x+1\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\py3_test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 536,
      "line_range": [
        536
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "536         assert lambda x:x\n537         assert 1, lambda x:x+1\n538         try:\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\py3_test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 537,
      "line_range": [
        537
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "538         try:\n539             assert 0, \"msg\"\n540         except AssertionError as e:\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\py3_test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 539,
      "line_range": [
        539
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "617         except RuntimeError as msg: pass\n618         except: pass\n619         else: pass\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\data\\py3_test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 618,
      "line_range": [
        618
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "88     try:\n89         return os.system(\"diff -u %s @\" % fn)\n90     finally:\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\pytree_idempotency.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 89,
      "line_range": [
        89
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "17 import os\n18 import pickle\n19 import shutil\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\test_parser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 18,
      "line_range": [
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "19 import shutil\n20 import subprocess\n21 import sys\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\test_parser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 20,
      "line_range": [
        20
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "86             sub_env['PYTHONHASHSEED'] = 'random'\n87             subprocess.check_call(\n88                     [sys.executable, '-c', \"\"\"\n89 from lib2to3.pgen2 import driver as pgen2_driver\n90 pgen2_driver.load_grammar(%r, save=True, force=True)\n91                     \"\"\" % (grammar_sub_copy,)],\n92                     env=sub_env)\n93             self.assertTrue(os.path.exists(pickle_sub_name))\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\test_parser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 87,
      "line_range": [
        87,
        88,
        89,
        90,
        91,
        92
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "650         for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n651             err2 = pickle.loads(pickle.dumps(err, protocol=proto))\n652             self.assertEqual(err.args, err2.args)\n",
      "filename": "cpython\\Lib\\lib2to3\\tests\\test_parser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 651,
      "line_range": [
        651
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "343                     self.processName = mp.current_process().name\n344                 except Exception: #pragma: no cover\n345                     pass\n",
      "filename": "cpython\\Lib\\logging\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 344,
      "line_range": [
        344
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1354                 else:\n1355                     assert isinstance(obj, PlaceHolder)\n1356                     obj.append(alogger)\n",
      "filename": "cpython\\Lib\\logging\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1355,
      "line_range": [
        1355
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1744         if getLogger(self.name) is not self:\n1745             import pickle\n1746             raise pickle.PicklingError('logger cannot be pickled')\n",
      "filename": "cpython\\Lib\\logging\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 1745,
      "line_range": [
        1745
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "137         try:\n138             klass = eval(klass, vars(logging))\n139         except (AttributeError, NameError):\n",
      "filename": "cpython\\Lib\\logging\\config.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 138,
      "line_range": [
        138
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "141         args = section.get(\"args\", '()')\n142         args = eval(args, vars(logging))\n143         kwargs = section.get(\"kwargs\", '{}')\n",
      "filename": "cpython\\Lib\\logging\\config.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 142,
      "line_range": [
        142
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "143         kwargs = section.get(\"kwargs\", '{}')\n144         kwargs = eval(kwargs, vars(logging))\n145         h = klass(*args, **kwargs)\n",
      "filename": "cpython\\Lib\\logging\\config.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 144,
      "line_range": [
        144
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "861                             d =json.loads(chunk)\n862                             assert isinstance(d, dict)\n863                             dictConfig(d)\n",
      "filename": "cpython\\Lib\\logging\\config.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 862,
      "line_range": [
        862
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "25 \n26 import logging, socket, os, pickle, struct, time, re\n27 from stat import ST_DEV, ST_INO, ST_MTIME\n",
      "filename": "cpython\\Lib\\logging\\handlers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 26,
      "line_range": [
        26
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1184         if secure:\n1185             connection = http.client.HTTPSConnection(host, context=self.context)\n1186         else:\n",
      "filename": "cpython\\Lib\\logging\\handlers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1185,
      "line_range": [
        1185
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "664         # by adding or deleting an item).\n665         assert self._toc is not None\n666 \n667         # Check length of self._file; if it's changed, some other process\n668         # has modified the mailbox since we scanned it.\n669         self._file.seek(0, 2)\n",
      "filename": "cpython\\Lib\\mailbox.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 665,
      "line_range": [
        665,
        666,
        667,
        668
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1288         n = stop - self._file.tell()\n1289         assert n >= 0\n1290         body = self._file.read(n)\n",
      "filename": "cpython\\Lib\\mailbox.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1289,
      "line_range": [
        1289
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1314         n = stop - self._file.tell()\n1315         assert n >= 0\n1316         data = self._file.read(n)\n",
      "filename": "cpython\\Lib\\mailbox.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1315,
      "line_range": [
        1315
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "172             test = subst(e['test'], filename, plist)\n173             if test and os.system(test) != 0:\n174                 continue\n",
      "filename": "cpython\\Lib\\mailcap.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 173,
      "line_range": [
        173
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "252             print(\"Executing:\", command)\n253             sts = os.system(command)\n254             sts = os.waitstatus_to_exitcode(sts)\n",
      "filename": "cpython\\Lib\\mailcap.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 253,
      "line_range": [
        253
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "191                 parent = self.modules[pname]\n192                 assert parent is caller\n193                 self.msgout(4, \"determine_parent ->\", parent)\n",
      "filename": "cpython\\Lib\\modulefinder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 192,
      "line_range": [
        192
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "202             parent = self.modules[pname]\n203             assert caller is parent\n204             self.msgout(4, \"determine_parent ->\", parent)\n",
      "filename": "cpython\\Lib\\modulefinder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 203,
      "line_range": [
        203
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "209             parent = self.modules[pname]\n210             assert parent.__name__ == pname\n211             self.msgout(4, \"determine_parent ->\", parent)\n",
      "filename": "cpython\\Lib\\modulefinder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 210,
      "line_range": [
        210
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "347                 raise\n348             co = marshal.loads(memoryview(data)[16:])\n349         else:\n",
      "filename": "cpython\\Lib\\modulefinder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 348,
      "line_range": [
        348
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "56             elif dtype == type_short:\n57                 assert size==2\n58                 tname = \"SHORT\"\n",
      "filename": "cpython\\Lib\\msilib\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 57,
      "line_range": [
        57
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "59             elif dtype == type_long:\n60                 assert size==4\n61                 tname=\"LONG\"\n",
      "filename": "cpython\\Lib\\msilib\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 60,
      "line_range": [
        60
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "62             elif dtype == type_binary:\n63                 assert size==0\n64                 tname=\"OBJECT\"\n",
      "filename": "cpython\\Lib\\msilib\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 63,
      "line_range": [
        63
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "103     for value in values:\n104         assert len(value) == count, value\n105         for i in range(count):\n",
      "filename": "cpython\\Lib\\msilib\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 104,
      "line_range": [
        104
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "180         str = \"_\" + str\n181     assert re.match(\"^[A-Za-z_][A-Za-z0-9_.]*$\", str), \"FILE\"+str\n182     return str\n",
      "filename": "cpython\\Lib\\msilib\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 181,
      "line_range": [
        181
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "213         from tempfile import mktemp\n214         filename = mktemp()\n215         FCICreate(filename, self.files)\n",
      "filename": "cpython\\Lib\\msilib\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 214,
      "line_range": [
        214
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "320                 pos += 1\n321                 assert pos < 10000\n322                 if pos in (10, 100, 1000):\n",
      "filename": "cpython\\Lib\\msilib\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 321,
      "line_range": [
        321
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "324         self.short_names.add(file)\n325         assert not re.search(r'[\\?|><:/*\"+,;=\\[\\]]', file) # restrictions on short names\n326         return file\n",
      "filename": "cpython\\Lib\\msilib\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 325,
      "line_range": [
        325
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "340         absolute = os.path.join(self.absolute, src)\n341         assert not re.search(r'[\\?|><:/*]\"', file) # restrictions on long names\n342         if file in self.keyfiles:\n",
      "filename": "cpython\\Lib\\msilib\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 341,
      "line_range": [
        341
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "346         sequence, logical = self.cab.append(absolute, file, logical)\n347         assert logical not in self.ids\n348         self.ids.add(logical)\n",
      "filename": "cpython\\Lib\\msilib\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 347,
      "line_range": [
        347
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "80             return f\"\\0listener-{os.getpid()}-{next(_mmap_counter)}\"\n81         return tempfile.mktemp(prefix='listener-', dir=util.get_temp_dir())\n82     elif family == 'AF_PIPE':\n",
      "filename": "cpython\\Lib\\multiprocessing\\connection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 81,
      "line_range": [
        81
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "82     elif family == 'AF_PIPE':\n83         return tempfile.mktemp(prefix=r'\\\\.\\pipe\\pyc-%d-%d-' %\n84                                (os.getpid(), next(_mmap_counter)), dir=\"\")\n85     else:\n",
      "filename": "cpython\\Lib\\multiprocessing\\connection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 83,
      "line_range": [
        83,
        84
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "289                         [ov.event], False, INFINITE)\n290                     assert waitres == WAIT_OBJECT_0\n291             except:\n",
      "filename": "cpython\\Lib\\multiprocessing\\connection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 290,
      "line_range": [
        290
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "295                 nwritten, err = ov.GetOverlappedResult(True)\n296             assert err == 0\n297             assert nwritten == len(buf)\n",
      "filename": "cpython\\Lib\\multiprocessing\\connection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 296,
      "line_range": [
        296
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "296             assert err == 0\n297             assert nwritten == len(buf)\n298 \n",
      "filename": "cpython\\Lib\\multiprocessing\\connection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 297,
      "line_range": [
        297
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "311                                 [ov.event], False, INFINITE)\n312                             assert waitres == WAIT_OBJECT_0\n313                     except:\n",
      "filename": "cpython\\Lib\\multiprocessing\\connection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 312,
      "line_range": [
        312
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "341             left = _winapi.PeekNamedPipe(self._handle)[1]\n342             assert left > 0\n343             if maxsize is not None and len(buf) + left > maxsize:\n",
      "filename": "cpython\\Lib\\multiprocessing\\connection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 342,
      "line_range": [
        342
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "346             rbytes, err = ov.GetOverlappedResult(True)\n347             assert err == 0\n348             assert rbytes == left\n",
      "filename": "cpython\\Lib\\multiprocessing\\connection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 347,
      "line_range": [
        347
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "347             assert err == 0\n348             assert rbytes == left\n349             f.write(ov.getbuffer())\n",
      "filename": "cpython\\Lib\\multiprocessing\\connection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 348,
      "line_range": [
        348
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "572         _, err = overlapped.GetOverlappedResult(True)\n573         assert err == 0\n574 \n575         c1 = PipeConnection(h1, writable=duplex)\n",
      "filename": "cpython\\Lib\\multiprocessing\\connection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 573,
      "line_range": [
        573,
        574
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "690                     _, err = ov.GetOverlappedResult(True)\n691                     assert err == 0\n692             return PipeConnection(handle)\n",
      "filename": "cpython\\Lib\\multiprocessing\\connection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 691,
      "line_range": [
        691
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "757     message = connection.recv_bytes(256)         # reject large message\n758     assert message[:len(CHALLENGE)] == CHALLENGE, 'message = %r' % message\n759     message = message[len(CHALLENGE):]\n",
      "filename": "cpython\\Lib\\multiprocessing\\connection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 758,
      "line_range": [
        758
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "223                     # EOF because no more client processes left\n224                     assert os.read(alive_r, 1) == b'', \"Not at EOF?\"\n225                     raise SystemExit\n",
      "filename": "cpython\\Lib\\multiprocessing\\forkserver.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 224,
      "line_range": [
        224
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "177         blocks = self._allocated_blocks.pop(arena)\n178         assert not blocks\n179         del self._start_to_block[(arena, 0)]\n",
      "filename": "cpython\\Lib\\multiprocessing\\heap.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 178,
      "line_range": [
        178
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "204             ignore, funcname, args, kwds = request\n205             assert funcname in self.public, '%r unrecognized' % funcname\n206             func = getattr(self, funcname)\n",
      "filename": "cpython\\Lib\\multiprocessing\\managers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 205,
      "line_range": [
        205
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "220                 c.send(('#TRACEBACK', format_exc()))\n221             except Exception:\n222                 pass\n",
      "filename": "cpython\\Lib\\multiprocessing\\managers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 221,
      "line_range": [
        221
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "595         '''\n596         assert self._state.value == State.STARTED, 'server not yet started'\n597         conn = self._Client(self._address, authkey=self._authkey)\n",
      "filename": "cpython\\Lib\\multiprocessing\\managers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 596,
      "line_range": [
        596
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "661                     conn.close()\n662             except Exception:\n663                 pass\n",
      "filename": "cpython\\Lib\\multiprocessing\\managers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 662,
      "line_range": [
        662
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "703             for key, value in list(method_to_typeid.items()): # isinstance?\n704                 assert type(key) is str, '%r is not a string' % key\n705                 assert type(value) is str, '%r is not a string' % value\n",
      "filename": "cpython\\Lib\\multiprocessing\\managers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 704,
      "line_range": [
        704
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "704                 assert type(key) is str, '%r is not a string' % key\n705                 assert type(value) is str, '%r is not a string' % value\n706 \n",
      "filename": "cpython\\Lib\\multiprocessing\\managers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 705,
      "line_range": [
        705
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "951     for meth in exposed:\n952         exec('''def %s(self, /, *args, **kwds):\n953         return self._callmethod(%r, args, kwds)''' % (meth, meth), dic)\n954 \n",
      "filename": "cpython\\Lib\\multiprocessing\\managers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 952,
      "line_range": [
        952,
        953
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "581             if thread._state != RUN:\n582                 assert thread._state == TERMINATE, \"Thread not in TERMINATE\"\n583                 util.debug('result handler found thread._state=TERMINATE')\n",
      "filename": "cpython\\Lib\\multiprocessing\\pool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 582,
      "line_range": [
        582
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "97     def duplicate_for_child(self, handle):\n98         assert self is get_spawning_popen()\n99         return reduction.duplicate(handle, self.sentinel)\n",
      "filename": "cpython\\Lib\\multiprocessing\\popen_spawn_win32.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 98,
      "line_range": [
        98
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "81                  *, daemon=None):\n82         assert group is None, 'group argument must be None for now'\n83         count = next(_process_counter)\n",
      "filename": "cpython\\Lib\\multiprocessing\\process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 82,
      "line_range": [
        82
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "114         self._check_closed()\n115         assert self._popen is None, 'cannot start a process twice'\n116         assert self._parent_pid == os.getpid(), \\\n",
      "filename": "cpython\\Lib\\multiprocessing\\process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 115,
      "line_range": [
        115
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "115         assert self._popen is None, 'cannot start a process twice'\n116         assert self._parent_pid == os.getpid(), \\\n117                'can only start a process object created by current process'\n118         assert not _current_process._config.get('daemon'), \\\n",
      "filename": "cpython\\Lib\\multiprocessing\\process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 116,
      "line_range": [
        116,
        117
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "117                'can only start a process object created by current process'\n118         assert not _current_process._config.get('daemon'), \\\n119                'daemonic processes are not allowed to have children'\n120         _cleanup()\n",
      "filename": "cpython\\Lib\\multiprocessing\\process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 118,
      "line_range": [
        118,
        119
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "146         self._check_closed()\n147         assert self._parent_pid == os.getpid(), 'can only join a child process'\n148         assert self._popen is not None, 'can only join a started process'\n",
      "filename": "cpython\\Lib\\multiprocessing\\process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 147,
      "line_range": [
        147
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "147         assert self._parent_pid == os.getpid(), 'can only join a child process'\n148         assert self._popen is not None, 'can only join a started process'\n149         res = self._popen.wait(timeout)\n",
      "filename": "cpython\\Lib\\multiprocessing\\process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 148,
      "line_range": [
        148
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "159             return True\n160         assert self._parent_pid == os.getpid(), 'can only test a child process'\n161 \n162         if self._popen is None:\n",
      "filename": "cpython\\Lib\\multiprocessing\\process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 160,
      "line_range": [
        160,
        161
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "194     def name(self, name):\n195         assert isinstance(name, str), 'name must be a string'\n196         self._name = name\n",
      "filename": "cpython\\Lib\\multiprocessing\\process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 195,
      "line_range": [
        195
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "209         '''\n210         assert self._popen is None, 'process has already started'\n211         self._config['daemon'] = daemonic\n",
      "filename": "cpython\\Lib\\multiprocessing\\process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 210,
      "line_range": [
        210
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "151         debug('Queue.join_thread()')\n152         assert self._closed, \"Queue {0!r} not closed\".format(self)\n153         if self._jointhread:\n",
      "filename": "cpython\\Lib\\multiprocessing\\queues.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 152,
      "line_range": [
        152
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "14 import os\n15 import pickle\n16 import socket\n",
      "filename": "cpython\\Lib\\multiprocessing\\reduction.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "123         from .connection import Listener\n124         assert self._listener is None, \"Already have Listener\"\n125         util.debug('starting listener and thread for sending handles')\n",
      "filename": "cpython\\Lib\\multiprocessing\\resource_sharer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 124,
      "line_range": [
        124
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "101                 fds_to_pass.append(sys.stderr.fileno())\n102             except Exception:\n103                 pass\n",
      "filename": "cpython\\Lib\\multiprocessing\\resource_tracker.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 102,
      "line_range": [
        102
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "160         nbytes = os.write(self._fd, msg)\n161         assert nbytes == len(msg), \"nbytes {0:n} but len(msg) {1:n}\".format(\n162             nbytes, len(msg))\n163 \n",
      "filename": "cpython\\Lib\\multiprocessing\\resource_tracker.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 161,
      "line_range": [
        161,
        162
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "181             f.close()\n182         except Exception:\n183             pass\n",
      "filename": "cpython\\Lib\\multiprocessing\\resource_tracker.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 182,
      "line_range": [
        182
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "208                         sys.excepthook(*sys.exc_info())\n209                     except:\n210                         pass\n",
      "filename": "cpython\\Lib\\multiprocessing\\resource_tracker.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 209,
      "line_range": [
        209
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "218                                   (len(rtype_cache), rtype))\n219                 except Exception:\n220                     pass\n",
      "filename": "cpython\\Lib\\multiprocessing\\resource_tracker.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 219,
      "line_range": [
        219
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "42     nbytes = (_SHM_SAFE_NAME_LENGTH - len(_SHM_NAME_PREFIX)) // 2\n43     assert nbytes >= 2, '_SHM_NAME_PREFIX too long'\n44     name = _SHM_NAME_PREFIX + secrets.token_hex(nbytes)\n",
      "filename": "cpython\\Lib\\multiprocessing\\shared_memory.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 43,
      "line_range": [
        43
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "44     name = _SHM_NAME_PREFIX + secrets.token_hex(nbytes)\n45     assert len(name) <= _SHM_SAFE_NAME_LENGTH\n46     return name\n",
      "filename": "cpython\\Lib\\multiprocessing\\shared_memory.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 45,
      "line_range": [
        45
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "307             self._list_len = len(_formats)\n308             assert sum(len(fmt) <= 8 for fmt in _formats) == self._list_len\n309             offset = 0\n",
      "filename": "cpython\\Lib\\multiprocessing\\shared_memory.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 308,
      "line_range": [
        308
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "103 def synchronized(obj, lock=None, ctx=None):\n104     assert not isinstance(obj, SynchronizedBase), 'object already synchronized'\n105     ctx = ctx or get_context()\n",
      "filename": "cpython\\Lib\\multiprocessing\\sharedctypes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 104,
      "line_range": [
        104
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "152         d = {}\n153         exec(template % ((name,)*7), d)\n154         prop_cache[name] = d[name]\n",
      "filename": "cpython\\Lib\\multiprocessing\\sharedctypes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 153,
      "line_range": [
        153
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "95     '''\n96     assert is_forking(sys.argv), \"Not forking\"\n97     if sys.platform == 'win32':\n",
      "filename": "cpython\\Lib\\multiprocessing\\spawn.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 96,
      "line_range": [
        96
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "247     def wait(self, timeout=None):\n248         assert self._lock._semlock._is_mine(), \\\n249                'must acquire() condition before using wait()'\n250 \n251         # indicate that this thread is going to sleep\n252         self._sleeping_count.release()\n",
      "filename": "cpython\\Lib\\multiprocessing\\synchronize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 248,
      "line_range": [
        248,
        249,
        250,
        251
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "270     def notify(self, n=1):\n271         assert self._lock._semlock._is_mine(), 'lock is not owned'\n272         assert not self._wait_semaphore.acquire(\n",
      "filename": "cpython\\Lib\\multiprocessing\\synchronize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 271,
      "line_range": [
        271
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "271         assert self._lock._semlock._is_mine(), 'lock is not owned'\n272         assert not self._wait_semaphore.acquire(\n273             False), ('notify: Should not have been able to acquire '\n274                      + '_wait_semaphore')\n275 \n276         # to take account of timeouts since last notify*() we subtract\n277         # woken_count from sleeping_count and rezero woken_count\n278         while self._woken_count.acquire(False):\n",
      "filename": "cpython\\Lib\\multiprocessing\\synchronize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 272,
      "line_range": [
        272,
        273,
        274,
        275,
        276,
        277
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "279             res = self._sleeping_count.acquire(False)\n280             assert res, ('notify: Bug in sleeping_count.acquire'\n281                          + '- res should not be False')\n282 \n",
      "filename": "cpython\\Lib\\multiprocessing\\synchronize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 280,
      "line_range": [
        280,
        281
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "16                         # cleanup function before multiprocessing does\n17 from subprocess import _args_from_interpreter_flags\n18 \n19 from . import process\n",
      "filename": "cpython\\Lib\\multiprocessing\\util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with _args_from_interpreter_flags module.",
      "line_number": 17,
      "line_range": [
        17,
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "402     fds.sort()\n403     assert fds[-1] == MAXFD, 'fd too large'\n404     for i in range(len(fds) - 1):\n",
      "filename": "cpython\\Lib\\multiprocessing\\util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 403,
      "line_range": [
        403
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "251         self.current_indent -= self.indent_increment\n252         assert self.current_indent >= 0, \"Indent decreased below 0.\"\n253         self.level -= 1\n",
      "filename": "cpython\\Lib\\optparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 252,
      "line_range": [
        252
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "878         vars = {}\n879         exec(open(filename).read(), vars)\n880         self._update(vars, mode)\n",
      "filename": "cpython\\Lib\\optparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 879,
      "line_range": [
        879
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "515                     else:\n516                         assert entries is not None\n517                         name, entry = name\n",
      "filename": "cpython\\Lib\\os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 516,
      "line_range": [
        516
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "980         raise ValueError(\"popen() does not support unbuffered streams\")\n981     import subprocess, io\n982     if mode == \"r\":\n",
      "filename": "cpython\\Lib\\os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 981,
      "line_range": [
        981
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "983         proc = subprocess.Popen(cmd,\n984                                 shell=True,\n985                                 stdout=subprocess.PIPE,\n986                                 bufsize=buffering)\n987         return _wrap_close(io.TextIOWrapper(proc.stdout), proc)\n988     else:\n",
      "filename": "cpython\\Lib\\os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 984,
      "line_range": [
        983,
        984,
        985,
        986
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "989         proc = subprocess.Popen(cmd,\n990                                 shell=True,\n991                                 stdin=subprocess.PIPE,\n992                                 bufsize=buffering)\n993         return _wrap_close(io.TextIOWrapper(proc.stdin), proc)\n994 \n",
      "filename": "cpython\\Lib\\os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 990,
      "line_range": [
        989,
        990,
        991,
        992
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "380                 sys.displayhook = self.displayhook\n381                 exec(code, globals, locals)\n382             finally:\n",
      "filename": "cpython\\Lib\\pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 381,
      "line_range": [
        381
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "654                 try:\n655                     func = eval(arg,\n656                                 self.curframe.f_globals,\n657                                 self.curframe_locals)\n658                 except:\n",
      "filename": "cpython\\Lib\\pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 655,
      "line_range": [
        655,
        656,
        657
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "875             try:\n876                 reply = input('Clear all breaks? ')\n877             except EOFError:\n",
      "filename": "cpython\\Lib\\pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 876,
      "line_range": [
        876
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "928     def _select_frame(self, number):\n929         assert 0 <= number < len(self.stack)\n930         self.curindex = number\n",
      "filename": "cpython\\Lib\\pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 929,
      "line_range": [
        929
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1162         try:\n1163             return eval(arg, self.curframe.f_globals, self.curframe_locals)\n1164         except:\n",
      "filename": "cpython\\Lib\\pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 1163,
      "line_range": [
        1163
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1171             if frame is None:\n1172                 return eval(arg, self.curframe.f_globals, self.curframe_locals)\n1173             else:\n",
      "filename": "cpython\\Lib\\pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 1172,
      "line_range": [
        1172
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1173             else:\n1174                 return eval(arg, frame.f_globals, frame.f_locals)\n1175         except:\n",
      "filename": "cpython\\Lib\\pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 1174,
      "line_range": [
        1174
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1185             self.message(repr(self._getval(arg)))\n1186         except:\n1187             pass\n",
      "filename": "cpython\\Lib\\pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 1186,
      "line_range": [
        1186
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1194             self.message(pprint.pformat(self._getval(arg)))\n1195         except:\n1196             pass\n",
      "filename": "cpython\\Lib\\pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 1195,
      "line_range": [
        1195
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1317             code = value.__func__.__code__\n1318         except Exception:\n1319             pass\n",
      "filename": "cpython\\Lib\\pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 1318,
      "line_range": [
        1318
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1325             code = value.__code__\n1326         except Exception:\n1327             pass\n",
      "filename": "cpython\\Lib\\pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 1326,
      "line_range": [
        1326
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "505             return\n506         assert id(obj) not in self.memo\n507         idx = len(self.memo)\n",
      "filename": "cpython\\Lib\\pickle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 506,
      "line_range": [
        506
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1079             if code:\n1080                 assert code > 0\n1081                 if code <= 0xff:\n",
      "filename": "cpython\\Lib\\pickle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1080,
      "line_range": [
        1080
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1208                     raise EOFError\n1209                 assert isinstance(key, bytes_types)\n1210                 dispatch[key[0]](self)\n",
      "filename": "cpython\\Lib\\pickle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1209,
      "line_range": [
        1209
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1755     res = f.getvalue()\n1756     assert isinstance(res, bytes_types)\n1757     return res\n",
      "filename": "cpython\\Lib\\pickle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1756,
      "line_range": [
        1756
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "14 import io\n15 import pickle\n16 import re\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "193     def __init__(self, name, n, reader, doc):\n194         assert isinstance(name, str)\n195         self.name = name\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 194,
      "line_range": [
        194
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "196 \n197         assert isinstance(n, int) and (n >= 0 or\n198                                        n in (UP_TO_NEWLINE,\n199                                              TAKEN_FROM_ARGUMENT1,\n200                                              TAKEN_FROM_ARGUMENT4,\n201                                              TAKEN_FROM_ARGUMENT4U,\n202                                              TAKEN_FROM_ARGUMENT8U))\n203         self.n = n\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 197,
      "line_range": [
        197,
        198,
        199,
        200,
        201,
        202
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "206 \n207         assert isinstance(doc, str)\n208         self.doc = doc\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 207,
      "line_range": [
        207
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "418     n = read_uint1(f)\n419     assert n >= 0\n420     data = f.read(n)\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 419,
      "line_range": [
        419
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "481     n = read_uint1(f)\n482     assert n >= 0\n483     data = f.read(n)\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 482,
      "line_range": [
        482
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "513     n = read_uint4(f)\n514     assert n >= 0\n515     if n > sys.maxsize:\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 514,
      "line_range": [
        514
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "548     n = read_uint8(f)\n549     assert n >= 0\n550     if n > sys.maxsize:\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 549,
      "line_range": [
        549
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "583     n = read_uint8(f)\n584     assert n >= 0\n585     if n > sys.maxsize:\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 584,
      "line_range": [
        584
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "647     n = read_uint1(f)\n648     assert n >= 0\n649     data = f.read(n)\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 648,
      "line_range": [
        648
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "686     n = read_uint4(f)\n687     assert n >= 0\n688     if n > sys.maxsize:\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 687,
      "line_range": [
        687
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "727     n = read_uint8(f)\n728     assert n >= 0\n729     if n > sys.maxsize:\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 728,
      "line_range": [
        728
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "870 \n871 from pickle import decode_long\n872 \n873 def read_long1(f):\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with decode_long module.",
      "line_number": 871,
      "line_range": [
        871,
        872
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "961     def __init__(self, name, obtype, doc):\n962         assert isinstance(name, str)\n963         self.name = name\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 962,
      "line_range": [
        962
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "964 \n965         assert isinstance(obtype, type) or isinstance(obtype, tuple)\n966         if isinstance(obtype, tuple):\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 965,
      "line_range": [
        965
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "967             for contained in obtype:\n968                 assert isinstance(contained, type)\n969         self.obtype = obtype\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 968,
      "line_range": [
        968
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "970 \n971         assert isinstance(doc, str)\n972         self.doc = doc\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 971,
      "line_range": [
        971
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1125                  stack_before, stack_after, proto, doc):\n1126         assert isinstance(name, str)\n1127         self.name = name\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1126,
      "line_range": [
        1126
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1128 \n1129         assert isinstance(code, str)\n1130         assert len(code) == 1\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1129,
      "line_range": [
        1129
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1129         assert isinstance(code, str)\n1130         assert len(code) == 1\n1131         self.code = code\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1130,
      "line_range": [
        1130
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1132 \n1133         assert arg is None or isinstance(arg, ArgumentDescriptor)\n1134         self.arg = arg\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1133,
      "line_range": [
        1133
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1135 \n1136         assert isinstance(stack_before, list)\n1137         for x in stack_before:\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1136,
      "line_range": [
        1136
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1137         for x in stack_before:\n1138             assert isinstance(x, StackObject)\n1139         self.stack_before = stack_before\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1138,
      "line_range": [
        1138
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1140 \n1141         assert isinstance(stack_after, list)\n1142         for x in stack_after:\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1141,
      "line_range": [
        1141
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1142         for x in stack_after:\n1143             assert isinstance(x, StackObject)\n1144         self.stack_after = stack_after\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1143,
      "line_range": [
        1143
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1145 \n1146         assert isinstance(proto, int) and 0 <= proto <= pickle.HIGHEST_PROTOCOL\n1147         self.proto = proto\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1146,
      "line_range": [
        1146
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1148 \n1149         assert isinstance(doc, str)\n1150         self.doc = doc\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1149,
      "line_range": [
        1149
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2296         if code == b'.':\n2297             assert opcode.name == 'STOP'\n2298             break\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2297,
      "line_range": [
        2297
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2465                                     stack[-1] is markobject):\n2466             assert markobject not in after\n2467             if __debug__:\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2466,
      "line_range": [
        2466
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2468                 if markobject in before:\n2469                     assert before[-1] is stackslice\n2470             if markstack:\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2469,
      "line_range": [
        2469
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2483                 except ValueError:\n2484                     assert opcode.name == \"POP\"\n2485                     numtopop = 0\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2484,
      "line_range": [
        2484
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2494             else:\n2495                 assert arg is not None\n2496                 memo_idx = arg\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2495,
      "line_range": [
        2495
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2506             if arg in memo:\n2507                 assert len(after) == 1\n2508                 after = [memo[arg]]     # for better stack emulation\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2507,
      "line_range": [
        2507
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2539         if markobject in after:\n2540             assert markobject not in before\n2541             markstack.append(pos)\n",
      "filename": "cpython\\Lib\\pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2540,
      "line_range": [
        2540
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "159         cmd = self.makepipeline(file, '')\n160         return os.popen(cmd, 'r')\n161 \n",
      "filename": "cpython\\Lib\\pipes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 160,
      "line_range": [
        160
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "167         cmd = self.makepipeline('', file)\n168         return os.popen(cmd, 'w')\n169 \n",
      "filename": "cpython\\Lib\\pipes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 168,
      "line_range": [
        168
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "170     def copy(self, infile, outfile):\n171         return os.system(self.makepipeline(infile, outfile))\n172 \n",
      "filename": "cpython\\Lib\\pipes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 171,
      "line_range": [
        171
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "49     stream.read(12) # Skip rest of the header\n50     return marshal.load(stream)\n51 \n",
      "filename": "cpython\\Lib\\pkgutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 50,
      "line_range": [
        50
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "118 import sys\n119 import subprocess\n120 import functools\n",
      "filename": "cpython\\Lib\\platform.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 119,
      "line_range": [
        119
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "280     # Try some common cmd strings\n281     import subprocess\n282     for cmd in ('ver', 'command /c ver', 'cmd /c ver'):\n",
      "filename": "cpython\\Lib\\platform.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 281,
      "line_range": [
        281
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "286                                            text=True,\n287                                            shell=True)\n288         except (OSError, subprocess.CalledProcessError) as why:\n289             #print('Command %s failed: %s' % (cmd, why))\n290             continue\n291         else:\n",
      "filename": "cpython\\Lib\\platform.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 287,
      "line_range": [
        284,
        285,
        286,
        287
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "609 \n610     import subprocess\n611     target = _follow_symlinks(target)\n",
      "filename": "cpython\\Lib\\platform.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 610,
      "line_range": [
        610
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "616         # -b: do not prepend filenames to output lines (brief mode)\n617         output = subprocess.check_output(['file', '-b', target],\n618                                          stderr=subprocess.DEVNULL,\n619                                          env=env)\n620     except (OSError, subprocess.CalledProcessError):\n",
      "filename": "cpython\\Lib\\platform.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 617,
      "line_range": [
        617,
        618,
        619
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "616         # -b: do not prepend filenames to output lines (brief mode)\n617         output = subprocess.check_output(['file', '-b', target],\n618                                          stderr=subprocess.DEVNULL,\n619                                          env=env)\n620     except (OSError, subprocess.CalledProcessError):\n",
      "filename": "cpython\\Lib\\platform.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 617,
      "line_range": [
        617,
        618,
        619
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "749         try:\n750             return subprocess.check_output(\n751                 ['uname', '-p'],\n752                 stderr=subprocess.DEVNULL,\n753                 text=True,\n754             ).strip()\n",
      "filename": "cpython\\Lib\\platform.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 750,
      "line_range": [
        750,
        751,
        752,
        753
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "749         try:\n750             return subprocess.check_output(\n751                 ['uname', '-p'],\n752                 stderr=subprocess.DEVNULL,\n753                 text=True,\n754             ).strip()\n",
      "filename": "cpython\\Lib\\platform.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 750,
      "line_range": [
        750,
        751,
        752,
        753
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "286     def end_element(self, element):\n287         assert self._indent_level > 0\n288         assert self.stack.pop() == element\n",
      "filename": "cpython\\Lib\\plistlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 287,
      "line_range": [
        287
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "287         assert self._indent_level > 0\n288         assert self.stack.pop() == element\n289         self._indent_level -= 1\n",
      "filename": "cpython\\Lib\\plistlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 288,
      "line_range": [
        288
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "334         digest = m.group(1)+secret\n335         digest = hashlib.md5(digest).hexdigest()\n336         return self._shortcmd('APOP %s %s' % (user, digest))\n",
      "filename": "cpython\\Lib\\poplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 335,
      "line_range": [
        335
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "269                 parts = re.findall(r'\\S*\\s*', line)\n270                 assert parts\n271                 assert not parts[-1]\n",
      "filename": "cpython\\Lib\\pprint.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 270,
      "line_range": [
        270
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "270                 assert parts\n271                 assert not parts[-1]\n272                 parts.pop()  # drop empty last part\n",
      "filename": "cpython\\Lib\\pprint.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 271,
      "line_range": [
        271
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "259             if not isinstance(rframe, Profile.fake_frame):\n260                 assert rframe.f_back is frame.f_back, (\"Bad call\", rfn,\n261                                                        rframe, rframe.f_back,\n262                                                        frame, frame.f_back)\n263                 self.trace_dispatch_return(rframe, 0)\n",
      "filename": "cpython\\Lib\\profile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 260,
      "line_range": [
        260,
        261,
        262
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "263                 self.trace_dispatch_return(rframe, 0)\n264                 assert (self.cur is None or \\\n265                         frame.f_back is self.cur[-2]), (\"Bad call\",\n266                                                         self.cur[-3])\n267         fcode = frame.f_code\n",
      "filename": "cpython\\Lib\\profile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 264,
      "line_range": [
        264,
        265,
        266
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "290         if frame is not self.cur[-2]:\n291             assert frame is self.cur[-2].f_back, (\"Bad return\", self.cur[-3])\n292             self.trace_dispatch_return(self.cur[-2], 0)\n",
      "filename": "cpython\\Lib\\profile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 291,
      "line_range": [
        291
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "421         try:\n422             exec(cmd, globals, locals)\n423         finally:\n",
      "filename": "cpython\\Lib\\profile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 422,
      "line_range": [
        422
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "141             with open(arg, 'rb') as f:\n142                 self.stats = marshal.load(f)\n143             try:\n",
      "filename": "cpython\\Lib\\pstats.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 142,
      "line_range": [
        142
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "145                 arg = time.ctime(file_stats.st_mtime) + \"    \" + arg\n146             except:  # in case this is not unix\n147                 pass\n",
      "filename": "cpython\\Lib\\pstats.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 146,
      "line_range": [
        146
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "157     if pid == CHILD:\n158         os.execlp(argv[0], *argv)\n159     try:\n",
      "filename": "cpython\\Lib\\pty.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 158,
      "line_range": [
        158
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "291                                 _readmodule(mod, [])\n292                     except:\n293                         # If we can't find or parse the imported module,\n",
      "filename": "cpython\\Lib\\pyclbr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 292,
      "line_range": [
        292
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "303                     d = _readmodule(mod, path, inpackage)\n304                 except:\n305                     # If we can't find or parse the imported module,\n",
      "filename": "cpython\\Lib\\pyclbr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Continue detected.",
      "line_number": 304,
      "line_range": [
        304
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b112_try_except_continue.html",
      "test_id": "B112",
      "test_name": "try_except_continue"
    },
    {
      "code": "939                 value = getattr(object, name)\n940             except Exception:\n941                 # Some descriptors may meet a failure in their __get__.\n",
      "filename": "cpython\\Lib\\pydoc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 940,
      "line_range": [
        940
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "982                               lambda t: t[1] == 'data')\n983             assert attrs == []\n984             attrs = inherited\n",
      "filename": "cpython\\Lib\\pydoc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 983,
      "line_range": [
        983
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1445 \n1446             assert attrs == []\n1447             attrs = inherited\n",
      "filename": "cpython\\Lib\\pydoc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1446,
      "line_range": [
        1446
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1575         return lambda text: tempfilepager(plain(text), 'more <')\n1576     if hasattr(os, 'system') and os.system('(less) 2>/dev/null') == 0:\n1577         return lambda text: pipepager(text, 'less')\n",
      "filename": "cpython\\Lib\\pydoc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 1576,
      "line_range": [
        1576
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "1575         return lambda text: tempfilepager(plain(text), 'more <')\n1576     if hasattr(os, 'system') and os.system('(less) 2>/dev/null') == 0:\n1577         return lambda text: pipepager(text, 'less')\n",
      "filename": "cpython\\Lib\\pydoc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 1576,
      "line_range": [
        1576
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "1582     try:\n1583         if hasattr(os, 'system') and os.system('more \"%s\"' % filename) == 0:\n1584             return lambda text: pipepager(text, 'more')\n",
      "filename": "cpython\\Lib\\pydoc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 1583,
      "line_range": [
        1583
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "1595     \"\"\"Page through text by feeding it to another program.\"\"\"\n1596     import subprocess\n1597     proc = subprocess.Popen(cmd, shell=True, stdin=subprocess.PIPE)\n",
      "filename": "cpython\\Lib\\pydoc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 1596,
      "line_range": [
        1596
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "1596     import subprocess\n1597     proc = subprocess.Popen(cmd, shell=True, stdin=subprocess.PIPE)\n1598     try:\n",
      "filename": "cpython\\Lib\\pydoc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 1597,
      "line_range": [
        1597
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "1619     import tempfile\n1620     filename = tempfile.mktemp()\n1621     with open(filename, 'w', errors='backslashreplace') as file:\n",
      "filename": "cpython\\Lib\\pydoc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 1620,
      "line_range": [
        1620
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "1623     try:\n1624         os.system(cmd + ' \"' + filename + '\"')\n1625     finally:\n",
      "filename": "cpython\\Lib\\pydoc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 1624,
      "line_range": [
        1624
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "2034         if self.input is sys.stdin:\n2035             return input(prompt)\n2036         else:\n",
      "filename": "cpython\\Lib\\pydoc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 2035,
      "line_range": [
        2035
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "2052                 # special case these keywords since they are objects too\n2053                 doc(eval(request), 'Help on %s:')\n2054             elif request in self.keywords: self.showtopic(request)\n",
      "filename": "cpython\\Lib\\pydoc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 2053,
      "line_range": [
        2053
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "2708             while serverthread.serving:\n2709                 cmd = input('server> ')\n2710                 cmd = cmd.lower()\n",
      "filename": "cpython\\Lib\\pydoc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 2709,
      "line_range": [
        2709
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "27     \"\"\"\n28     assert isinstance(c, bytes)\n29     if c in b' \\t':\n",
      "filename": "cpython\\Lib\\quopri.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 28,
      "line_range": [
        28
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "37     \"\"\"Quote a single character.\"\"\"\n38     assert isinstance(c, bytes) and len(c)==1\n39     c = ord(c)\n",
      "filename": "cpython\\Lib\\quopri.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 38,
      "line_range": [
        38
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "173     \"\"\"Return true if the byte ordinal 'c' is a hexadecimal digit in ASCII.\"\"\"\n174     assert isinstance(c, bytes)\n175     return b'0' <= c <= b'9' or b'a' <= c <= b'f' or b'A' <= c <= b'F'\n",
      "filename": "cpython\\Lib\\quopri.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 174,
      "line_range": [
        174
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "188         else:\n189             assert False, \"non-hex digit \"+repr(c)\n190         bits = bits*16 + (ord(c) - i)\n",
      "filename": "cpython\\Lib\\quopri.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 189,
      "line_range": [
        189
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "154         try:\n155             thisobject = eval(expr, self.namespace)\n156         except Exception:\n",
      "filename": "cpython\\Lib\\rlcompleter.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 155,
      "line_range": [
        155
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "180                         val = getattr(thisobject, word)\n181                     except Exception:\n182                         pass  # Include even if attribute not set\n",
      "filename": "cpython\\Lib\\rlcompleter.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 181,
      "line_range": [
        181
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "86                        __spec__ = mod_spec)\n87     exec(code, run_globals)\n88     return run_globals\n",
      "filename": "cpython\\Lib\\runpy.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 87,
      "line_range": [
        87
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "58 \n59 from pickle import DEFAULT_PROTOCOL, Pickler, Unpickler\n60 from io import BytesIO\n",
      "filename": "cpython\\Lib\\shelve.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with DEFAULT_PROTOCOL module.",
      "line_number": 59,
      "line_range": [
        59
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "113             f = BytesIO(self.dict[key.encode(self.keyencoding)])\n114             value = Unpickler(f).load()\n115             if self.writeback:\n",
      "filename": "cpython\\Lib\\shelve.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 114,
      "line_range": [
        114
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "194         f = BytesIO(value)\n195         return (key.decode(self.keyencoding), Unpickler(f).load())\n196 \n",
      "filename": "cpython\\Lib\\shelve.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 195,
      "line_range": [
        195
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "199         f = BytesIO(value)\n200         return (key.decode(self.keyencoding), Unpickler(f).load())\n201 \n",
      "filename": "cpython\\Lib\\shelve.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 200,
      "line_range": [
        200
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "204         f = BytesIO(value)\n205         return (key.decode(self.keyencoding), Unpickler(f).load())\n206 \n",
      "filename": "cpython\\Lib\\shelve.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 205,
      "line_range": [
        205
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "209         f = BytesIO(value)\n210         return (key.decode(self.keyencoding), Unpickler(f).load())\n211 \n",
      "filename": "cpython\\Lib\\shelve.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 210,
      "line_range": [
        210
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "214         f = BytesIO(value)\n215         return (key.decode(self.keyencoding), Unpickler(f).load())\n216 \n",
      "filename": "cpython\\Lib\\shelve.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 215,
      "line_range": [
        215
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "176                 if line.startswith((\"import \", \"import\\t\")):\n177                     exec(line)\n178                     continue\n",
      "filename": "cpython\\Lib\\site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 177,
      "line_range": [
        177
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "456         #parse the ehlo response -ddm\n457         assert isinstance(self.ehlo_resp, bytes), repr(self.ehlo_resp)\n458         resp = self.ehlo_resp.decode(\"latin-1\").split('\\n')\n",
      "filename": "cpython\\Lib\\smtplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 457,
      "line_range": [
        457
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "313         reading = \"r\" in mode or not writing\n314         assert reading or writing\n315         binary = \"b\" in mode\n",
      "filename": "cpython\\Lib\\socket.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 314,
      "line_range": [
        314
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "335         else:\n336             assert writing\n337             buffer = io.BufferedWriter(raw, buffering)\n",
      "filename": "cpython\\Lib\\socket.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 336,
      "line_range": [
        336
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "276             def __getitem__(self, x):\n277                 assert x == 0\n278                 return \"foo\"\n",
      "filename": "cpython\\Lib\\sqlite3\\test\\dbapi.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 277,
      "line_range": [
        277
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "346             del sqlite.adapters[int]\n347         except:\n348             pass\n",
      "filename": "cpython\\Lib\\sqlite3\\test\\types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 347,
      "line_range": [
        347
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "16 \n17 assert _sre.MAGIC == MAGIC, \"SRE module mismatch\"\n18 \n19 _LITERAL_CODES = {LITERAL, NOT_LITERAL}\n",
      "filename": "cpython\\Lib\\sre_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 17,
      "line_range": [
        17,
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "418     a = memoryview(b).cast('I')\n419     assert a.itemsize == _sre.CODESIZE\n420     assert len(a) * a.itemsize == len(b)\n",
      "filename": "cpython\\Lib\\sre_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 419,
      "line_range": [
        419
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "419     assert a.itemsize == _sre.CODESIZE\n420     assert len(a) * a.itemsize == len(b)\n421     return a.tolist()\n",
      "filename": "cpython\\Lib\\sre_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 420,
      "line_range": [
        420
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "590         charset, hascased = _optimize_charset(charset)\n591         assert not hascased\n592         _compile_charset(charset, flags, code)\n",
      "filename": "cpython\\Lib\\sre_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 591,
      "line_range": [
        591
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "657                 arg = str(ATCODES[arg])\n658                 assert arg[:3] == 'AT_'\n659                 print_(op, arg[3:])\n",
      "filename": "cpython\\Lib\\sre_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 658,
      "line_range": [
        658
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "663                 arg = str(CHCODES[arg])\n664                 assert arg[:9] == 'CATEGORY_'\n665                 print_(op, arg[9:])\n",
      "filename": "cpython\\Lib\\sre_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 664,
      "line_range": [
        664
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "913                 raise source.error(msg, len(char))\n914     assert char == \":\"\n915     if del_flags & GLOBAL_FLAGS:\n",
      "filename": "cpython\\Lib\\sre_parse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 914,
      "line_range": [
        914
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "960     if source.next is not None:\n961         assert source.next == \")\"\n962         raise source.error(\"unbalanced parenthesis\")\n",
      "filename": "cpython\\Lib\\sre_parse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 961,
      "line_range": [
        961
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "172         total = partials[None]\n173         assert not _isfinite(total)\n174     else:\n",
      "filename": "cpython\\Lib\\statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 173,
      "line_range": [
        173
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "194     # See http://bugs.python.org/issue24068.\n195     assert T is not bool, \"initial type T is bool\"\n196     # If the types are the same, no need to coerce anything. Put this\n197     # first, so that the usual case (no coercion needed) happens as soon\n198     # as possible.\n199     if T is S:  return T\n",
      "filename": "cpython\\Lib\\statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 195,
      "line_range": [
        195,
        196,
        197,
        198
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "244         # float NAN or INF.\n245         assert not _isfinite(x)\n246         return (x, None)\n",
      "filename": "cpython\\Lib\\statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 245,
      "line_range": [
        245
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "316     T, total, count = _sum(data)\n317     assert count == n\n318     return _convert(total / n, T)\n",
      "filename": "cpython\\Lib\\statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 317,
      "line_range": [
        317
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "408         return 0\n409     assert count == n\n410     return _convert(n / total, T)\n",
      "filename": "cpython\\Lib\\statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 409,
      "line_range": [
        409
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "690     U, total2, count2 = _sum((x - c) for x in data)\n691     assert T == U and count == count2\n692     total -= total2 ** 2 / len(data)\n",
      "filename": "cpython\\Lib\\statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 691,
      "line_range": [
        691
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "692     total -= total2 ** 2 / len(data)\n693     assert not total < 0, 'negative sum of square deviations: %f' % total\n694     return (T, total)\n",
      "filename": "cpython\\Lib\\statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 693,
      "line_range": [
        693
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "930         \"Generate *n* samples for a given mean and standard deviation.\"\n931         gauss = random.gauss if seed is None else random.Random(seed).gauss\n932         mu, sigma = self._mu, self._sigma\n",
      "filename": "cpython\\Lib\\statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 931,
      "line_range": [
        931
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "9 \n10 assert unicodedata.unidata_version == '3.2.0'\n11 \n12 def in_table_a1(code):\n",
      "filename": "cpython\\Lib\\stringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 10,
      "line_range": [
        10,
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "628     try:\n629         data = check_output(cmd, shell=True, text=True, stderr=STDOUT)\n630         exitcode = 0\n",
      "filename": "cpython\\Lib\\subprocess.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with shell=True parameter identified, possible security issue.",
      "line_number": 629,
      "line_range": [
        629
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b604_any_other_function_with_shell_equals_true.html",
      "test_id": "B604",
      "test_name": "any_other_function_with_shell_equals_true"
    },
    {
      "code": "1352 \n1353             assert not pass_fds, \"pass_fds not supported on Windows.\"\n1354 \n1355             if isinstance(args, str):\n",
      "filename": "cpython\\Lib\\subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1353,
      "line_range": [
        1353,
        1354
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1915                             (pid, sts) = self._try_wait(os.WNOHANG)\n1916                             assert pid == self.pid or pid == 0\n1917                             if pid == self.pid:\n",
      "filename": "cpython\\Lib\\subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1916,
      "line_range": [
        1916
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "73             return \"class\"\n74         assert self._table.type in (1, 2, 3), \\\n75                \"unexpected type: {0}\".format(self._table.type)\n76 \n",
      "filename": "cpython\\Lib\\symtable.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 74,
      "line_range": [
        74,
        75
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "519         \"\"\"Return the next size number of bytes from the stream.\"\"\"\n520         assert size is not None\n521         buf = self._read(size)\n",
      "filename": "cpython\\Lib\\tarfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 520,
      "line_range": [
        520
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "137         if cur_pid != getattr(self, '_rng_pid', None):\n138             self._rng = _Random()\n139             self._rng_pid = cur_pid\n",
      "filename": "cpython\\Lib\\tempfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 138,
      "line_range": [
        138
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "19 import logging\n20 import subprocess\n21 import struct\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 20,
      "line_range": [
        20
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "22 import operator\n23 import pickle\n24 import weakref\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 23,
      "line_range": [
        23
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "227     def __call__(self, q, c):\n228         assert isinstance(c, DummyCallable)\n229         q.put(5)\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 228,
      "line_range": [
        228
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "685             else:\n686                 assert action == 'remove'\n687                 stream = None\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 686,
      "line_range": [
        686
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "796     def submit(self, s):\n797         assert type(s) is str\n798         self.parent_conn.send(s)\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 797,
      "line_range": [
        797
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1723             self._can_exit.wait(30)\n1724             assert self._can_exit.is_set()\n1725 \n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1724,
      "line_range": [
        1724
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1780         m = barrier.parties\n1781         assert m == cls.N\n1782         for i in range(n):\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1781,
      "line_range": [
        1781
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1783             results[0].append(True)\n1784             assert len(results[1]) == i * m\n1785             barrier.wait()\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1784,
      "line_range": [
        1784
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1786             results[1].append(True)\n1787             assert len(results[0]) == (i + 1) * m\n1788             barrier.wait()\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1787,
      "line_range": [
        1787
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1789         try:\n1790             assert barrier.n_waiting == 0\n1791         except NotImplementedError:\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1790,
      "line_range": [
        1790
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1792             pass\n1793         assert not barrier.broken\n1794 \n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1793,
      "line_range": [
        1793
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3610             if len(blocks) > maxblocks:\n3611                 i = random.randrange(maxblocks)\n3612                 del blocks[i]\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 3611,
      "line_range": [
        3611
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "3779         pickled_sms = pickle.dumps(sms)\n3780         sms2 = pickle.loads(pickled_sms)\n3781         self.assertEqual(sms.name, sms2.name)\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 3780,
      "line_range": [
        3780
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "4114         serialized_sl = pickle.dumps(sl)\n4115         deserialized_sl = pickle.loads(serialized_sl)\n4116         self.assertTrue(\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 4115,
      "line_range": [
        4115
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "4145         '''\n4146         with subprocess.Popen([sys.executable, '-E', '-c', cmd],\n4147                               stdout=subprocess.PIPE,\n4148                               stderr=subprocess.PIPE) as p:\n4149             name = p.stdout.readline().strip().decode()\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 4146,
      "line_range": [
        4146,
        4147,
        4148
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "4251                 # insert finalizer at random key\n4252                 util.Finalize(self, cb, exitpriority=random.randint(1, 100))\n4253 \n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 4252,
      "line_range": [
        4252
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "4259             while not finish:\n4260                 time.sleep(random.random() * 1e-1)\n4261                 try:\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 4260,
      "line_range": [
        4260
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "4595         flike.flush()\n4596         assert sio.getvalue() == 'foo'\n4597 \n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4596,
      "line_range": [
        4596
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4604             if slow:\n4605                 time.sleep(random.random()*0.1)\n4606             w.send((i, os.getpid()))\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 4605,
      "line_range": [
        4605
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "4644             if slow:\n4645                 time.sleep(random.random()*0.1)\n4646             s.sendall(('%s\\n' % i).encode('ascii'))\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 4645,
      "line_range": [
        4645
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "4814                 'TestFlags.run_in_child()')\n4815         data = subprocess.check_output(\n4816             [sys.executable, '-E', '-S', '-O', '-c', prog])\n4817         child_flags, grandchild_flags = json.loads(data.decode('ascii'))\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 4815,
      "line_range": [
        4815,
        4816
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "5154                 r, w = os.pipe()\n5155                 p = subprocess.Popen([sys.executable,\n5156                                      '-E', '-c', cmd.format(w=w, rtype=rtype)],\n5157                                      pass_fds=[w],\n5158                                      stderr=subprocess.PIPE)\n5159                 os.close(w)\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 5155,
      "line_range": [
        5155,
        5156,
        5157,
        5158
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "5429     def _test_event(cls, obj):\n5430         assert obj.is_set()\n5431         obj.wait()\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5430,
      "line_range": [
        5430
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5438         self.run_worker(self._test_event, o)\n5439         assert not o.is_set()\n5440         o.wait(0.001)\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5439,
      "line_range": [
        5439
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5483     def _test_barrier(cls, obj):\n5484         assert obj.parties == 5\n5485         obj.reset()\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5484,
      "line_range": [
        5484
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5502     def _test_queue(cls, obj):\n5503         assert obj.qsize() == 2\n5504         assert obj.full()\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5503,
      "line_range": [
        5503
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5503         assert obj.qsize() == 2\n5504         assert obj.full()\n5505         assert not obj.empty()\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5504,
      "line_range": [
        5504
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5504         assert obj.full()\n5505         assert not obj.empty()\n5506         assert obj.get() == 5\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5505,
      "line_range": [
        5505
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5505         assert not obj.empty()\n5506         assert obj.get() == 5\n5507         assert not obj.empty()\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5506,
      "line_range": [
        5506
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5506         assert obj.get() == 5\n5507         assert not obj.empty()\n5508         assert obj.get() == 6\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5507,
      "line_range": [
        5507
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5507         assert not obj.empty()\n5508         assert obj.get() == 6\n5509         assert obj.empty()\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5508,
      "line_range": [
        5508
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5508         assert obj.get() == 6\n5509         assert obj.empty()\n5510 \n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5509,
      "line_range": [
        5509
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5515         self.run_worker(self._test_queue, o)\n5516         assert o.empty()\n5517         assert not o.full()\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5516,
      "line_range": [
        5516
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5516         assert o.empty()\n5517         assert not o.full()\n5518 \n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5517,
      "line_range": [
        5517
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5523     def _test_list(cls, obj):\n5524         assert obj[0] == 5\n5525         assert obj.count(5) == 1\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5524,
      "line_range": [
        5524
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5524         assert obj[0] == 5\n5525         assert obj.count(5) == 1\n5526         assert obj.index(5) == 0\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5525,
      "line_range": [
        5525
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5525         assert obj.count(5) == 1\n5526         assert obj.index(5) == 0\n5527         obj.sort()\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5526,
      "line_range": [
        5526
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5530             pass\n5531         assert len(obj) == 1\n5532         assert obj.pop(0) == 5\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5531,
      "line_range": [
        5531
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5531         assert len(obj) == 1\n5532         assert obj.pop(0) == 5\n5533 \n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5532,
      "line_range": [
        5532
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5537         self.run_worker(self._test_list, o)\n5538         assert not o\n5539         self.assertEqual(len(o), 0)\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5538,
      "line_range": [
        5538
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5542     def _test_dict(cls, obj):\n5543         assert len(obj) == 1\n5544         assert obj['foo'] == 5\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5543,
      "line_range": [
        5543
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5543         assert len(obj) == 1\n5544         assert obj['foo'] == 5\n5545         assert obj.get('foo') == 5\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5544,
      "line_range": [
        5544
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5544         assert obj['foo'] == 5\n5545         assert obj.get('foo') == 5\n5546         assert list(obj.items()) == [('foo', 5)]\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5545,
      "line_range": [
        5545
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5545         assert obj.get('foo') == 5\n5546         assert list(obj.items()) == [('foo', 5)]\n5547         assert list(obj.keys()) == ['foo']\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5546,
      "line_range": [
        5546
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5546         assert list(obj.items()) == [('foo', 5)]\n5547         assert list(obj.keys()) == ['foo']\n5548         assert list(obj.values()) == [5]\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5547,
      "line_range": [
        5547
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5547         assert list(obj.keys()) == ['foo']\n5548         assert list(obj.values()) == [5]\n5549         assert obj.copy() == {'foo': 5}\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5548,
      "line_range": [
        5548
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5548         assert list(obj.values()) == [5]\n5549         assert obj.copy() == {'foo': 5}\n5550         assert obj.popitem() == ('foo', 5)\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5549,
      "line_range": [
        5549
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5549         assert obj.copy() == {'foo': 5}\n5550         assert obj.popitem() == ('foo', 5)\n5551 \n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5550,
      "line_range": [
        5550
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5555         self.run_worker(self._test_dict, o)\n5556         assert not o\n5557         self.assertEqual(len(o), 0)\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5556,
      "line_range": [
        5556
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5560     def _test_value(cls, obj):\n5561         assert obj.value == 1\n5562         assert obj.get() == 1\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5561,
      "line_range": [
        5561
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5561         assert obj.value == 1\n5562         assert obj.get() == 1\n5563         obj.set(2)\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5562,
      "line_range": [
        5562
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5572     def _test_array(cls, obj):\n5573         assert obj[0] == 0\n5574         assert obj[1] == 1\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5573,
      "line_range": [
        5573
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5573         assert obj[0] == 0\n5574         assert obj[1] == 1\n5575         assert len(obj) == 2\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5574,
      "line_range": [
        5574
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5574         assert obj[1] == 1\n5575         assert len(obj) == 2\n5576         assert list(obj) == [0, 1]\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5575,
      "line_range": [
        5575
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5575         assert len(obj) == 2\n5576         assert list(obj) == [0, 1]\n5577 \n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5576,
      "line_range": [
        5576
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5583     def _test_namespace(cls, obj):\n5584         assert obj.x == 0\n5585         assert obj.y == 1\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5584,
      "line_range": [
        5584
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5584         assert obj.x == 0\n5585         assert obj.y == 1\n5586 \n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5585,
      "line_range": [
        5585
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5749                 continue\n5750             assert set(base.ALLOWED_TYPES) <= ALL_TYPES, base.ALLOWED_TYPES\n5751             for type_ in base.ALLOWED_TYPES:\n",
      "filename": "cpython\\Lib\\test\\_test_multiprocessing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5750,
      "line_range": [
        5750
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4 import io\n5 import pickle\n6 \n7 \n8 class UnseekableIO(io.FileIO):\n",
      "filename": "cpython\\Lib\\test\\audiotests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 5,
      "line_range": [
        5,
        6,
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "49             dump = pickle.dumps(params, proto)\n50             self.assertEqual(pickle.loads(dump), params)\n51 \n",
      "filename": "cpython\\Lib\\test\\audiotests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 50,
      "line_range": [
        50
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "73         yield\n74         assert False, f\"expected {ex_type}\"\n75     except BaseException as ex:\n",
      "filename": "cpython\\Lib\\test\\audit-tests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 74,
      "line_range": [
        74
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "77             raise\n78         assert type(ex) is ex_type, f\"{ex} should be {ex_type}\"\n79 \n",
      "filename": "cpython\\Lib\\test\\audit-tests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 78,
      "line_range": [
        78
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "109 def test_pickle():\n110     import pickle\n111 \n112     class PicklePrint:\n",
      "filename": "cpython\\Lib\\test\\audit-tests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 110,
      "line_range": [
        110,
        111
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "119     # Before we add the hook, ensure our malicious pickle loads\n120     assertEqual(\"Pwned!\", pickle.loads(payload_1))\n121 \n",
      "filename": "cpython\\Lib\\test\\audit-tests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 120,
      "line_range": [
        120
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "124             # With the hook enabled, loading globals is not allowed\n125             pickle.loads(payload_1)\n126         # pickles with no globals are okay\n",
      "filename": "cpython\\Lib\\test\\audit-tests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 125,
      "line_range": [
        125
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "126         # pickles with no globals are okay\n127         pickle.loads(payload_2)\n128 \n",
      "filename": "cpython\\Lib\\test\\audit-tests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 127,
      "line_range": [
        127
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "215             # No traced call\n216             eval(\"1\")\n217 \n",
      "filename": "cpython\\Lib\\test\\audit-tests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 216,
      "line_range": [
        216
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "219             hook.__cantrace__ = False\n220             eval(\"2\")\n221 \n",
      "filename": "cpython\\Lib\\test\\audit-tests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 220,
      "line_range": [
        220
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "223             hook.__cantrace__ = True\n224             eval(\"3\")\n225 \n",
      "filename": "cpython\\Lib\\test\\audit-tests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 224,
      "line_range": [
        224
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "227             hook.__cantrace__ = 1\n228             eval(\"4\")\n229 \n",
      "filename": "cpython\\Lib\\test\\audit-tests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 228,
      "line_range": [
        228
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "319         sock.bind(('127.0.0.1', 8080))\n320     except Exception:\n321         pass\n",
      "filename": "cpython\\Lib\\test\\audit-tests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 320,
      "line_range": [
        320
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "24 import random\n25 import subprocess\n26 import sys\n",
      "filename": "cpython\\Lib\\test\\bisect_cmd.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 25,
      "line_range": [
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "60     cmd.extend(args.test_args)\n61     proc = subprocess.run(cmd,\n62                           stdout=subprocess.PIPE,\n63                           universal_newlines=True)\n64     exitcode = proc.returncode\n",
      "filename": "cpython\\Lib\\test\\bisect_cmd.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 61,
      "line_range": [
        61,
        62,
        63
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "74 def run_tests(args, tests, huntrleaks=None):\n75     tmp = tempfile.mktemp()\n76     try:\n",
      "filename": "cpython\\Lib\\test\\bisect_cmd.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 75,
      "line_range": [
        75
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "82         print(\"+ %s\" % format_shell_args(cmd))\n83         proc = subprocess.run(cmd)\n84         return proc.returncode\n",
      "filename": "cpython\\Lib\\test\\bisect_cmd.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 83,
      "line_range": [
        83
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "18                     (), (), (), '', '', 1, b'')\n19 exec(co)\n",
      "filename": "cpython\\Lib\\test\\crashers\\bogus_code_obj.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 19,
      "line_range": [
        19
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "16             x()\n17         except:\n18             pass\n",
      "filename": "cpython\\Lib\\test\\crashers\\trace_at_recursion_limit.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 17,
      "line_range": [
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "11 import os\n12 import pickle\n13 import random\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "43                   for proto in range(pickle.HIGHEST_PROTOCOL + 1)]\n44 assert len(pickle_choices) == pickle.HIGHEST_PROTOCOL + 1\n45 \n46 # An arbitrary collection of objects of non-datetime types, for testing\n47 # mixed-type comparisons.\n48 OTHERSTUFF = (10, 34.5, \"abc\", {}, [], ())\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 44,
      "line_range": [
        44,
        45,
        46,
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "143     def utcoffset(self, datetime_module):\n144         return random.random()\n145 \n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 144,
      "line_range": [
        144
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "258             tzrep = repr(tz)\n259             self.assertEqual(tz, eval(tzrep))\n260 \n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 259,
      "line_range": [
        259
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "768             s = s[9:]\n769             td2 = eval(s)\n770             self.assertEqual(td, td2)\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 769,
      "line_range": [
        769
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1107             s = s[9:]\n1108             dt2 = eval(s)\n1109             self.assertEqual(dt, dt2)\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 1108,
      "line_range": [
        1108
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1392         p = pickle.dumps(d.isocalendar())\n1393         res = pickle.loads(p)\n1394         self.assertEqual(type(res), tuple)\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1393,
      "line_range": [
        1393
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1985             s = s[9:]\n1986             dt2 = eval(s)\n1987             self.assertEqual(dt, dt2)\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 1986,
      "line_range": [
        1986
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "2066             with self.subTest(tzi=tzi):\n2067                 assert dt.isoformat() == exp\n2068 \n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2067,
      "line_range": [
        2067
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2299             s = pickle.dumps(a, proto)\n2300             b = pickle.loads(s)\n2301             self.assertEqual(b.year, 2003)\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 2300,
      "line_range": [
        2300
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2939                 dt_rt = self.theclass.fromisoformat(dtstr)\n2940                 assert dt == dt_rt, dt_rt\n2941 \n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2940,
      "line_range": [
        2940
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3097         s = s[9:]\n3098         t2 = eval(s)\n3099         self.assertEqual(t, t2)\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3098,
      "line_range": [
        3098
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3273             with self.subTest(tzi=tzi):\n3274                 assert t.isoformat() == exp\n3275 \n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3274,
      "line_range": [
        3274
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3519             else:\n3520                 assert 0, \"impossible\"\n3521             if legit:\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3520,
      "line_range": [
        3520
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3621                     else:\n3622                         assert y is d2\n3623                         expected = 1\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3622,
      "line_range": [
        3622
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3925                 t_rt = self.theclass.fromisoformat(tstr)\n3926                 assert t == t_rt, t_rt\n3927 \n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3926,
      "line_range": [
        3926
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4273         # Make up a random timezone.\n4274         tzr = FixedOffset(random.randrange(-1439, 1440), \"randomtimezone\")\n4275         # Attach it to nowawareplus.\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 4274,
      "line_range": [
        4274
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "4666                 else:\n4667                     assert y is d2\n4668                     expected = timedelta(minutes=0-(11-59))\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4667,
      "line_range": [
        4667
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4771             return ZERO\n4772         assert dt.tzinfo is self\n4773 \n4774         # Find first Sunday in April.\n4775         start = first_sunday_on_or_after(DSTSTART.replace(year=dt.year))\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4772,
      "line_range": [
        4772,
        4773,
        4774
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4775         start = first_sunday_on_or_after(DSTSTART.replace(year=dt.year))\n4776         assert start.weekday() == 6 and start.month == 4 and start.day <= 7\n4777 \n4778         # Find last Sunday in October.\n4779         end = first_sunday_on_or_after(DSTEND.replace(year=dt.year))\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4776,
      "line_range": [
        4776,
        4777,
        4778
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4779         end = first_sunday_on_or_after(DSTEND.replace(year=dt.year))\n4780         assert end.weekday() == 6 and end.month == 10 and end.day >= 25\n4781 \n4782         # Can't compare naive to aware objects, so strip the timezone from\n4783         # dt first.\n4784         if start <= dt.replace(tzinfo=None) < end:\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4780,
      "line_range": [
        4780,
        4781,
        4782,
        4783
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5192             return ZERO\n5193         assert dt.tzinfo is self\n5194 \n5195         # Find first Sunday in April.\n5196         start = first_sunday_on_or_after(DSTSTART.replace(year=dt.year))\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5193,
      "line_range": [
        5193,
        5194,
        5195
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5196         start = first_sunday_on_or_after(DSTSTART.replace(year=dt.year))\n5197         assert start.weekday() == 6 and start.month == 4 and start.day <= 7\n5198 \n5199         # Find last Sunday in October.\n5200         end = first_sunday_on_or_after(DSTEND.replace(year=dt.year))\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5197,
      "line_range": [
        5197,
        5198,
        5199
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5200         end = first_sunday_on_or_after(DSTEND.replace(year=dt.year))\n5201         assert end.weekday() == 6 and end.month == 10 and end.day >= 25\n5202 \n5203         # Can't compare naive to aware objects, so strip the timezone from\n5204         # dt first.\n5205         dt = dt.replace(tzinfo=None)\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5201,
      "line_range": [
        5201,
        5202,
        5203,
        5204
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5272     def fromutc(self, dt):\n5273         assert dt.fold == 0\n5274         assert dt.tzinfo is self\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5273,
      "line_range": [
        5273
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5273         assert dt.fold == 0\n5274         assert dt.tzinfo is self\n5275         if dt.year != 1941:\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5274,
      "line_range": [
        5274
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5655             idx = bisect.bisect_right(self.ut, timestamp)\n5656             assert self.ut[idx-1] <= timestamp\n5657             assert idx == len(self.ut) or timestamp < self.ut[idx]\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5656,
      "line_range": [
        5656
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5656             assert self.ut[idx-1] <= timestamp\n5657             assert idx == len(self.ut) or timestamp < self.ut[idx]\n5658             tti_prev, tti = self.ti[idx-2:idx]\n",
      "filename": "cpython\\Lib\\test\\datetimetester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5657,
      "line_range": [
        5657
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "19 def check_ok(x, x_str):\n20     assert x > 0.0\n21     x2 = eval(x_str)\n",
      "filename": "cpython\\Lib\\test\\double_const.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 20,
      "line_range": [
        20
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "20     assert x > 0.0\n21     x2 = eval(x_str)\n22     assert x2 > 0.0\n",
      "filename": "cpython\\Lib\\test\\double_const.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 21,
      "line_range": [
        21
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "21     x2 = eval(x_str)\n22     assert x2 > 0.0\n23     diff = abs(x - x2)\n",
      "filename": "cpython\\Lib\\test\\double_const.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 22,
      "line_range": [
        22
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "18 import socket\n19 import subprocess\n20 import sys\n",
      "filename": "cpython\\Lib\\test\\eintrdata\\eintr_tester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 19,
      "line_range": [
        19
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "75         cmd_args = (sys.executable, '-c') + args\n76         return subprocess.Popen(cmd_args, **kw)\n77 \n",
      "filename": "cpython\\Lib\\test\\eintrdata\\eintr_tester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 76,
      "line_range": [
        76
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "134         if xml_data:\n135             import xml.etree.ElementTree as ET\n136             for e in xml_data:\n",
      "filename": "cpython\\Lib\\test\\libregrtest\\main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 135,
      "line_range": [
        135
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b405-import-xml-etree",
      "test_id": "B405",
      "test_name": "blacklist"
    },
    {
      "code": "137                 try:\n138                     self.testsuite_xml.append(ET.fromstring(e))\n139                 except ET.ParseError:\n",
      "filename": "cpython\\Lib\\test\\libregrtest\\main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.etree.ElementTree.fromstring to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.fromstring with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 138,
      "line_range": [
        138
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree",
      "test_id": "B314",
      "test_name": "blacklist"
    },
    {
      "code": "270             if self.ns.random_seed is None:\n271                 self.ns.random_seed = random.randrange(10000000)\n272             random.seed(self.ns.random_seed)\n",
      "filename": "cpython\\Lib\\test\\libregrtest\\main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 271,
      "line_range": [
        271
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "539         if self.ns.runleaks:\n540             os.system(\"leaks %d\" % os.getpid())\n541 \n",
      "filename": "cpython\\Lib\\test\\libregrtest\\main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 540,
      "line_range": [
        540
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "545 \n546         import xml.etree.ElementTree as ET\n547         root = ET.Element(\"testsuites\")\n",
      "filename": "cpython\\Lib\\test\\libregrtest\\main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 546,
      "line_range": [
        546
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b405-import-xml-etree",
      "test_id": "B405",
      "test_name": "blacklist"
    },
    {
      "code": "661         if self.ns.wait:\n662             input(\"Press any key to continue...\")\n663 \n",
      "filename": "cpython\\Lib\\test\\libregrtest\\main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 662,
      "line_range": [
        662
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "158         if xml_list:\n159             import xml.etree.ElementTree as ET\n160             xml_data = [ET.tostring(x).decode('us-ascii') for x in xml_list]\n",
      "filename": "cpython\\Lib\\test\\libregrtest\\runtest.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 159,
      "line_range": [
        159
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b405-import-xml-etree",
      "test_id": "B405",
      "test_name": "blacklist"
    },
    {
      "code": "6 import signal\n7 import subprocess\n8 import sys\n",
      "filename": "cpython\\Lib\\test\\libregrtest\\runtest_mp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "24 PROGRESS_UPDATE = 30.0   # seconds\n25 assert PROGRESS_UPDATE >= PROGRESS_MIN_TIME\n26 \n27 # Kill the main process after 5 minutes. It is supposed to write an update\n28 # every PROGRESS_UPDATE seconds. Tolerate 5 minutes for Python slowest\n29 # buildbot workers.\n30 MAIN_PROCESS_TIMEOUT = 5 * 60.0\n",
      "filename": "cpython\\Lib\\test\\libregrtest\\runtest_mp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 25,
      "line_range": [
        25,
        26,
        27,
        28,
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "30 MAIN_PROCESS_TIMEOUT = 5 * 60.0\n31 assert MAIN_PROCESS_TIMEOUT >= PROGRESS_UPDATE\n32 \n33 # Time to wait until a worker completes: should be immediate\n34 JOIN_TIMEOUT = 30.0   # seconds\n",
      "filename": "cpython\\Lib\\test\\libregrtest\\runtest_mp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 31,
      "line_range": [
        31,
        32,
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "68         kw['start_new_session'] = True\n69     return subprocess.Popen(cmd,\n70                             stdout=subprocess.PIPE,\n71                             stderr=subprocess.PIPE,\n72                             universal_newlines=True,\n73                             close_fds=(os.name != 'nt'),\n74                             cwd=os_helper.SAVEDCWD,\n75                             **kw)\n76 \n",
      "filename": "cpython\\Lib\\test\\libregrtest\\runtest_mp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 69,
      "line_range": [
        69,
        70,
        71,
        72,
        73,
        74,
        75
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "213                 retcode = popen.returncode\n214                 assert retcode is not None\n215             except subprocess.TimeoutExpired:\n",
      "filename": "cpython\\Lib\\test\\libregrtest\\runtest_mp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 214,
      "line_range": [
        214
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4 import os\n5 import subprocess\n6 import uuid\n",
      "filename": "cpython\\Lib\\test\\libregrtest\\win_utils.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "71         command = ['typeperf', counter_name, '-si', str(SAMPLING_INTERVAL)]\n72         self._popen = subprocess.Popen(' '.join(command),\n73                                        stdout=command_stdout,\n74                                        cwd=os_helper.SAVEDCWD)\n75 \n",
      "filename": "cpython\\Lib\\test\\libregrtest\\win_utils.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 72,
      "line_range": [
        72,
        73,
        74
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "7 import tempfile\n8 from subprocess import *\n9 \n10 req_template = \"\"\"\n",
      "filename": "cpython\\Lib\\test\\make_ssl_certs.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with * module.",
      "line_number": 8,
      "line_range": [
        8,
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "8 if sys.version_info[:2] >= (3, 6):\n9     exec(dedent(\"\"\"\n10     default_a: Optional['A'] = None\n",
      "filename": "cpython\\Lib\\test\\mod_generics_cache.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "40             last = lines.pop()\n41             assert last == b\"\"\n42             lines = [line + b\"\\n\" for line in lines]\n",
      "filename": "cpython\\Lib\\test\\multibytecodec_support.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "7 import math\n8 import pickle\n9 import pickletools\n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "8 import pickle\n9 import pickletools\n10 import shutil\n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickletools module.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "34 \n35 from pickle import bytes_types\n36 \n37 \n38 # bpo-41003: Save/restore warnings filters to leave them unchanged.\n39 # Ignore filters installed by numpy.\n40 try:\n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with bytes_types module.",
      "line_number": 35,
      "line_range": [
        35,
        36,
        37,
        38,
        39
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1421             barrier.wait()\n1422             results.append(pickle.loads(pickle_bytes))\n1423 \n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1422,
      "line_range": [
        1422
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1489         from io import StringIO\n1490         from pickletools import dis\n1491 \n1492         for proto, expected in (0, DATA0_DIS), (1, DATA1_DIS):\n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with dis module.",
      "line_number": 1490,
      "line_range": [
        1490,
        1491
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "2572             def wine(cls):\n2573                 assert cls is PyMethodsTest\n2574                 return \"wine\"\n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2573,
      "line_range": [
        2573
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2575             def biscuits(self):\n2576                 assert isinstance(self, PyMethodsTest)\n2577                 return \"biscuits\"\n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2576,
      "line_range": [
        2576
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2584                 def maple(cls):\n2585                     assert cls is PyMethodsTest.Nested\n2586                     return \"maple\"\n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2585,
      "line_range": [
        2585
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2587                 def pie(self):\n2588                     assert isinstance(self, PyMethodsTest.Nested)\n2589                     return \"pie\"\n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2588,
      "line_range": [
        2588
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3263             object = int(oid)\n3264             assert object % 2 == 0\n3265             return object\n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3264,
      "line_range": [
        3264
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3315     def setUp(self):\n3316         assert self.pickler_class\n3317         assert self.unpickler_class\n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3316,
      "line_range": [
        3316
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3316         assert self.pickler_class\n3317         assert self.unpickler_class\n3318 \n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3317,
      "line_range": [
        3317
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3547                 p.dump([f, MyClass, math.log])\n3548                 new_f, some_str, math_log = pickle.loads(bio.getvalue())\n3549 \n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 3548,
      "line_range": [
        3548
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "3580                 p.dump(f)\n3581                 new_f = pickle.loads(bio.getvalue())\n3582                 assert new_f == 5\n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 3581,
      "line_range": [
        3581
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "3581                 new_f = pickle.loads(bio.getvalue())\n3582                 assert new_f == 5\n3583 \n3584                 del p\n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3582,
      "line_range": [
        3582,
        3583
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3631         def custom_load_dump(obj):\n3632             return pickle.loads(dumps(obj, 0))\n3633 \n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 3632,
      "line_range": [
        3632
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "3634         def default_load_dump(obj):\n3635             return pickle.loads(pickle.dumps(obj, 0))\n3636 \n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 3635,
      "line_range": [
        3635
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "3698     # Print some stuff that can be used to rewrite DATA{0,1,2}\n3699     from pickletools import dis\n3700     x = create_data()\n",
      "filename": "cpython\\Lib\\test\\pickletester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with dis module.",
      "line_number": 3699,
      "line_range": [
        3699
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "370 def collect_gdb(info_add):\n371     import subprocess\n372 \n373     try:\n",
      "filename": "cpython\\Lib\\test\\pythoninfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 371,
      "line_range": [
        371,
        372
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "373     try:\n374         proc = subprocess.Popen([\"gdb\", \"-nx\", \"--version\"],\n375                                 stdout=subprocess.PIPE,\n376                                 stderr=subprocess.PIPE,\n377                                 universal_newlines=True)\n378         version = proc.communicate()[0]\n",
      "filename": "cpython\\Lib\\test\\pythoninfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 374,
      "line_range": [
        374,
        375,
        376,
        377
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "373     try:\n374         proc = subprocess.Popen([\"gdb\", \"-nx\", \"--version\"],\n375                                 stdout=subprocess.PIPE,\n376                                 stderr=subprocess.PIPE,\n377                                 universal_newlines=True)\n378         version = proc.communicate()[0]\n",
      "filename": "cpython\\Lib\\test\\pythoninfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 374,
      "line_range": [
        374,
        375,
        376,
        377
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "630 def collect_cc(info_add):\n631     import subprocess\n632     import sysconfig\n",
      "filename": "cpython\\Lib\\test\\pythoninfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 631,
      "line_range": [
        631
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "644     try:\n645         proc = subprocess.Popen(args,\n646                                 stdout=subprocess.PIPE,\n647                                 stderr=subprocess.STDOUT,\n648                                 universal_newlines=True)\n649     except OSError:\n",
      "filename": "cpython\\Lib\\test\\pythoninfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 645,
      "line_range": [
        645,
        646,
        647,
        648
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "688 def collect_subprocess(info_add):\n689     import subprocess\n690     copy_attributes(info_add, subprocess, 'subprocess.%s', ('_USE_POSIX_SPAWN',))\n",
      "filename": "cpython\\Lib\\test\\pythoninfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 689,
      "line_range": [
        689
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "40     # sanity check\n41     assert __file__ == os.path.abspath(sys.argv[0])\n42 \n43     main()\n",
      "filename": "cpython\\Lib\\test\\regrtest.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 41,
      "line_range": [
        41,
        42
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "6 import sys\n7 import pickle\n8 from test import support\n",
      "filename": "cpython\\Lib\\test\\seq_tests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "421         for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n422             lst2 = pickle.loads(pickle.dumps(lst, proto))\n423             self.assertEqual(lst2, lst)\n",
      "filename": "cpython\\Lib\\test\\seq_tests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 422,
      "line_range": [
        422
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2 import signal\n3 import subprocess\n4 import sys\n",
      "filename": "cpython\\Lib\\test\\signalinterproctester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "44         args = [sys.executable, '-I', '-c', code]\n45         return subprocess.Popen(args)\n46 \n",
      "filename": "cpython\\Lib\\test\\signalinterproctester.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 45,
      "line_range": [
        45
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "42     else:\n43         result = marshal.load(fp)\n44         fp.close()\n",
      "filename": "cpython\\Lib\\test\\sortperf.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 43,
      "line_range": [
        43
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "46         for i in range(10):\n47             i = random.randrange(n)\n48             temp = result[:i]\n",
      "filename": "cpython\\Lib\\test\\sortperf.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 47,
      "line_range": [
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "52             del temp\n53     assert len(result) == n\n54     return result\n",
      "filename": "cpython\\Lib\\test\\sortperf.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 53,
      "line_range": [
        53
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "99         for dummy in range(3):\n100             i1 = random.randrange(n)\n101             i2 = random.randrange(n)\n",
      "filename": "cpython\\Lib\\test\\sortperf.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 100,
      "line_range": [
        100
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "100             i1 = random.randrange(n)\n101             i2 = random.randrange(n)\n102             L[i1], L[i2] = L[i2], L[i1]\n",
      "filename": "cpython\\Lib\\test\\sortperf.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 101,
      "line_range": [
        101
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "106         if n >= 10:\n107             L[-10:] = [random.random() for dummy in range(10)]\n108         doit(L) # +sort\n",
      "filename": "cpython\\Lib\\test\\sortperf.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 107,
      "line_range": [
        107
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "111         for dummy in range(n // 100):\n112             L[random.randrange(n)] = random.random()\n113         doit(L) # %sort\n",
      "filename": "cpython\\Lib\\test\\sortperf.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 112,
      "line_range": [
        112
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "111         for dummy in range(n // 100):\n112             L[random.randrange(n)] = random.random()\n113         doit(L) # %sort\n",
      "filename": "cpython\\Lib\\test\\sortperf.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 112,
      "line_range": [
        112
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "5 import sys\n6 import subprocess\n7 \n8 TESTS = [\n",
      "filename": "cpython\\Lib\\test\\ssltests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 6,
      "line_range": [
        6,
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "32     args.extend(TESTS)\n33     result = subprocess.call(args)\n34     sys.exit(result)\n",
      "filename": "cpython\\Lib\\test\\ssltests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 33,
      "line_range": [
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1 import signal, subprocess, sys, time\n2 # On Linux this causes os.waitpid to fail with OSError as the OS has already\n3 # reaped our child process.  The wait() passing the OSError on to the caller\n4 # and causing us to exit with an error is what we are testing against.\n5 signal.signal(signal.SIGCHLD, signal.SIG_IGN)\n6 subprocess.Popen([sys.executable, '-c', 'print(\"albatross\")']).wait()\n",
      "filename": "cpython\\Lib\\test\\subprocessdata\\sigchild_ignore.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 1,
      "line_range": [
        1,
        2,
        3,
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "5 signal.signal(signal.SIGCHLD, signal.SIG_IGN)\n6 subprocess.Popen([sys.executable, '-c', 'print(\"albatross\")']).wait()\n7 # Also ensure poll() handles an errno.ECHILD appropriately.\n",
      "filename": "cpython\\Lib\\test\\subprocessdata\\sigchild_ignore.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "7 # Also ensure poll() handles an errno.ECHILD appropriately.\n8 p = subprocess.Popen([sys.executable, '-c', 'print(\"albatross\")'])\n9 num_polls = 0\n",
      "filename": "cpython\\Lib\\test\\subprocessdata\\sigchild_ignore.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "676                         break\n677                     except:\n678                         pass\n",
      "filename": "cpython\\Lib\\test\\support\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 677,
      "line_range": [
        677
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "776 \n777         import subprocess\n778         with f:\n",
      "filename": "cpython\\Lib\\test\\support\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 777,
      "line_range": [
        777
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "779             watchdog_script = findfile(\"memory_watchdog.py\")\n780             self.mem_watchdog = subprocess.Popen([sys.executable, watchdog_script],\n781                                                  stdin=f,\n782                                                  stderr=subprocess.DEVNULL)\n783         self.started = True\n",
      "filename": "cpython\\Lib\\test\\support\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 780,
      "line_range": [
        780,
        781,
        782
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "897     is_true = list(guards.values())[0]\n898     assert list(guards.values()) == [is_true] * len(guards)   # all True or all False\n899     return (guards, not is_true)\n",
      "filename": "cpython\\Lib\\test\\support\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 898,
      "line_range": [
        898
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1241     settings in sys.flags and sys.warnoptions.\"\"\"\n1242     import subprocess\n1243     return subprocess._args_from_interpreter_flags()\n",
      "filename": "cpython\\Lib\\test\\support\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 1242,
      "line_range": [
        1242
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "1247     optimization settings in sys.flags.\"\"\"\n1248     import subprocess\n1249     return subprocess._optim_args_from_interpreter_flags()\n",
      "filename": "cpython\\Lib\\test\\support\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 1248,
      "line_range": [
        1248
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "1369     def _call(self, python, args, env, returncode):\n1370         import subprocess\n1371         cmd = [python, *args]\n",
      "filename": "cpython\\Lib\\test\\support\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 1370,
      "line_range": [
        1370
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "1371         cmd = [python, *args]\n1372         p = subprocess.Popen(cmd, stdout=subprocess.PIPE,\n1373                              stderr=subprocess.PIPE, env=env)\n1374         r = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\support\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1372,
      "line_range": [
        1372,
        1373
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1546             if sys.platform == 'darwin':\n1547                 import subprocess\n1548                 # Check if the 'Crash Reporter' on OSX was configured\n1549                 # in 'Developer' mode and warn that it will get triggered\n1550                 # when it is.\n1551                 #\n1552                 # This assumes that this context manager is used in tests\n1553                 # that might trigger the next manager.\n1554                 cmd = ['/usr/bin/defaults', 'read',\n",
      "filename": "cpython\\Lib\\test\\support\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 1547,
      "line_range": [
        1547,
        1548,
        1549,
        1550,
        1551,
        1552,
        1553
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "1555                        'com.apple.CrashReporter', 'DialogType']\n1556                 proc = subprocess.Popen(cmd,\n1557                                         stdout=subprocess.PIPE,\n1558                                         stderr=subprocess.PIPE)\n1559                 with proc:\n",
      "filename": "cpython\\Lib\\test\\support\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1556,
      "line_range": [
        1556,
        1557,
        1558
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1683         if cmd_names:\n1684             assert cmd is not None, \\\n1685                     \"the '%s' executable is not configured\" % name\n1686         elif not cmd:\n",
      "filename": "cpython\\Lib\\test\\support\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1684,
      "line_range": [
        1684,
        1685
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1699         if _is_android_emulator is None:\n1700             import subprocess\n1701             _is_android_emulator = (subprocess.check_output(\n",
      "filename": "cpython\\Lib\\test\\support\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 1700,
      "line_range": [
        1700
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "1700             import subprocess\n1701             _is_android_emulator = (subprocess.check_output(\n1702                                ['getprop', 'ro.kernel.qemu']).strip() == b'1')\n1703         if _is_android_emulator:\n",
      "filename": "cpython\\Lib\\test\\support\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 1701,
      "line_range": [
        1701,
        1702
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "1700             import subprocess\n1701             _is_android_emulator = (subprocess.check_output(\n1702                                ['getprop', 'ro.kernel.qemu']).strip() == b'1')\n1703         if _is_android_emulator:\n",
      "filename": "cpython\\Lib\\test\\support\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1701,
      "line_range": [
        1701,
        1702
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1824 NHASHBITS = sys.hash_info.width # number of bits in hash() result\n1825 assert NHASHBITS in (32, 64)\n1826 \n1827 # Return mean and sdev of number of collisions when tossing nballs balls\n1828 # uniformly at random into nbins bins.  By definition, the number of\n1829 # collisions is the number of balls minus the number of occupied bins at\n1830 # the end.\n1831 def collision_stats(nbins, nballs):\n",
      "filename": "cpython\\Lib\\test\\support\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1825,
      "line_range": [
        1825,
        1826,
        1827,
        1828,
        1829,
        1830
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "8 import os.path\n9 import subprocess\n10 import py_compile\n",
      "filename": "cpython\\Lib\\test\\support\\script_helper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "45         try:\n46             subprocess.check_call([sys.executable, '-E',\n47                                    '-c', 'import sys; sys.exit(0)'])\n48         except subprocess.CalledProcessError:\n",
      "filename": "cpython\\Lib\\test\\support\\script_helper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 46,
      "line_range": [
        46,
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "126     cmd_line.extend(args)\n127     proc = subprocess.Popen(cmd_line, stdin=subprocess.PIPE,\n128                          stdout=subprocess.PIPE, stderr=subprocess.PIPE,\n129                          env=env, cwd=cwd)\n130     with proc:\n",
      "filename": "cpython\\Lib\\test\\support\\script_helper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 127,
      "line_range": [
        127,
        128,
        129
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "185     env['TERM'] = 'vt100'\n186     return subprocess.Popen(cmd_line, stdin=subprocess.PIPE,\n187                             stdout=stdout, stderr=stderr,\n188                             **kw)\n189 \n",
      "filename": "cpython\\Lib\\test\\support\\script_helper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 186,
      "line_range": [
        186,
        187,
        188
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "116     \"\"\"Bind a unix socket, raising SkipTest if PermissionError is raised.\"\"\"\n117     assert sock.family == socket.AF_UNIX\n118     try:\n",
      "filename": "cpython\\Lib\\test\\support\\socket_helper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 117,
      "line_range": [
        117
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "11 \n12 import xml.etree.ElementTree as ET\n13 \n14 from datetime import datetime\n",
      "filename": "cpython\\Lib\\test\\support\\testresult.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 12,
      "line_range": [
        12,
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b405-import-xml-etree",
      "test_id": "B405",
      "test_name": "blacklist"
    },
    {
      "code": "24             try:\n25                 exec(\"import %s\" % modname, names)\n26             except:\n",
      "filename": "cpython\\Lib\\test\\test___all__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 25,
      "line_range": [
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "39                 try:\n40                     exec(\"from %s import *\" % modname, names)\n41                 except Exception as e:\n",
      "filename": "cpython\\Lib\\test\\test___all__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 40,
      "line_range": [
        40
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "183 \n184             self.assertEqual(int(eval('3.14') * 100), 314,\n185                                 \"using eval('3.14') failed for %s\" % loc)\n",
      "filename": "cpython\\Lib\\test\\test__locale.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 184,
      "line_range": [
        184
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "4 import os\n5 import pickle\n6 import sys\n",
      "filename": "cpython\\Lib\\test\\test__xxsubinterpreters.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "82         # XXX Run a func?\n83         exec(source, _mainns)\n84     else:\n",
      "filename": "cpython\\Lib\\test\\test__xxsubinterpreters.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 83,
      "line_range": [
        83
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "132     else:\n133         assert False, 'channel not closed'\n134 \n",
      "filename": "cpython\\Lib\\test\\test__xxsubinterpreters.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 133,
      "line_range": [
        133
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "913         with open(r, 'rb') as chan:\n914             ns = pickle.load(chan)\n915 \n",
      "filename": "cpython\\Lib\\test\\test__xxsubinterpreters.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 914,
      "line_range": [
        914
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "944         with open(r, 'rb') as chan:\n945             ns = pickle.load(chan)\n946 \n",
      "filename": "cpython\\Lib\\test\\test__xxsubinterpreters.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 945,
      "line_range": [
        945
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "965         with open(r, 'rb') as chan:\n966             ns = pickle.load(chan)\n967 \n",
      "filename": "cpython\\Lib\\test\\test__xxsubinterpreters.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 966,
      "line_range": [
        966
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "982         with open(r, 'rb') as chan:\n983             ns1 = pickle.load(chan)\n984 \n",
      "filename": "cpython\\Lib\\test\\test__xxsubinterpreters.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 983,
      "line_range": [
        983
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "995         with open(r, 'rb') as chan:\n996             ns2 = pickle.load(chan)\n997 \n",
      "filename": "cpython\\Lib\\test\\test__xxsubinterpreters.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 996,
      "line_range": [
        996
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1016         with open(r, 'rb') as chan:\n1017             ns = pickle.load(chan)\n1018 \n",
      "filename": "cpython\\Lib\\test\\test__xxsubinterpreters.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1017,
      "line_range": [
        1017
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1886     def __new__(cls, end, interp, other, extra, creator):\n1887         assert end in ('send', 'recv')\n1888         if cls.QUICK:\n",
      "filename": "cpython\\Lib\\test\\test__xxsubinterpreters.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1887,
      "line_range": [
        1887
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "22         scope = {}\n23         exec(self.template.format(ann=annotation), {}, scope)\n24         func_ret_ann = scope['f'].__annotations__['return']\n",
      "filename": "cpython\\Lib\\test\\test_annotations.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 23,
      "line_range": [
        23
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1818                 # check destination and option string\n1819                 assert self.dest == 'spam', 'dest: %s' % self.dest\n1820                 assert option_string == '-s', 'flag: %s' % option_string\n",
      "filename": "cpython\\Lib\\test\\test_argparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1819,
      "line_range": [
        1819
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1819                 assert self.dest == 'spam', 'dest: %s' % self.dest\n1820                 assert option_string == '-s', 'flag: %s' % option_string\n1821                 # when option is before argument, badger=2, and when\n1822                 # option is after argument, badger=<whatever was set>\n1823                 expected_ns = NS(spam=0.25)\n",
      "filename": "cpython\\Lib\\test\\test_argparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1820,
      "line_range": [
        1820,
        1821,
        1822
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1829                     raise AssertionError('value: %s' % value)\n1830                 assert expected_ns == namespace, ('expected %s, got %s' %\n1831                                                   (expected_ns, namespace))\n1832             except AssertionError:\n",
      "filename": "cpython\\Lib\\test\\test_argparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1830,
      "line_range": [
        1830,
        1831
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1840             try:\n1841                 assert option_string is None, ('option_string: %s' %\n1842                                                option_string)\n1843                 # check destination\n1844                 assert self.dest == 'badger', 'dest: %s' % self.dest\n",
      "filename": "cpython\\Lib\\test\\test_argparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1841,
      "line_range": [
        1841,
        1842,
        1843
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1843                 # check destination\n1844                 assert self.dest == 'badger', 'dest: %s' % self.dest\n1845                 # when argument is before option, spam=0.25, and when\n1846                 # option is after argument, spam=<whatever was set>\n1847                 expected_ns = NS(badger=2)\n",
      "filename": "cpython\\Lib\\test\\test_argparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1844,
      "line_range": [
        1844,
        1845,
        1846
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1855                     raise AssertionError('value: %s' % value)\n1856                 assert expected_ns == namespace, ('expected %s, got %s' %\n1857                                                   (expected_ns, namespace))\n1858             except AssertionError:\n",
      "filename": "cpython\\Lib\\test\\test_argparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1856,
      "line_range": [
        1856,
        1857
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "10 import weakref\n11 import pickle\n12 import operator\n",
      "filename": "cpython\\Lib\\test\\test_array.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "262             a = array.array(self.typecode, self.example)\n263             b = pickle.loads(pickle.dumps(a, protocol))\n264             self.assertNotEqual(id(a), id(b))\n",
      "filename": "cpython\\Lib\\test\\test_array.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 263,
      "line_range": [
        263
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "268             a.x = 10\n269             b = pickle.loads(pickle.dumps(a, protocol))\n270             self.assertNotEqual(id(a), id(b))\n",
      "filename": "cpython\\Lib\\test\\test_array.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 269,
      "line_range": [
        269
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "277             a = array.array(self.typecode)\n278             b = pickle.loads(pickle.dumps(a, protocol))\n279             self.assertNotEqual(id(a), id(b))\n",
      "filename": "cpython\\Lib\\test\\test_array.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 278,
      "line_range": [
        278
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "283             a.x = 10\n284             b = pickle.loads(pickle.dumps(a, protocol))\n285             self.assertNotEqual(id(a), id(b))\n",
      "filename": "cpython\\Lib\\test\\test_array.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 284,
      "line_range": [
        284
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "297             d = pickle.dumps((itorig, orig), proto)\n298             it, a = pickle.loads(d)\n299             a.fromlist(data2)\n",
      "filename": "cpython\\Lib\\test\\test_array.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 298,
      "line_range": [
        298
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "305             d = pickle.dumps((itorig, orig), proto)\n306             it, a = pickle.loads(d)\n307             a.fromlist(data2)\n",
      "filename": "cpython\\Lib\\test\\test_array.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 306,
      "line_range": [
        306
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "314             d = pickle.dumps((itorig, orig), proto)\n315             it, a = pickle.loads(d)\n316             a.fromlist(data2)\n",
      "filename": "cpython\\Lib\\test\\test_array.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 315,
      "line_range": [
        315
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "322             d = pickle.dumps((itorig, orig), proto)\n323             it, a = pickle.loads(d)\n324             a.fromlist(data2)\n",
      "filename": "cpython\\Lib\\test\\test_array.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 323,
      "line_range": [
        323
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "352             d = pickle.dumps((itorig, orig), proto)\n353             it, a = pickle.loads(d)\n354             a.insert(0, self.outside)\n",
      "filename": "cpython\\Lib\\test\\test_array.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 353,
      "line_range": [
        353
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "361             d = pickle.dumps((itorig, orig), proto)\n362             it, a = pickle.loads(d)\n363             a.insert(0, self.outside)\n",
      "filename": "cpython\\Lib\\test\\test_array.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 362,
      "line_range": [
        362
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "371             d = pickle.dumps((itorig, orig), proto)\n372             it, a = pickle.loads(d)\n373             a.insert(0, self.outside)\n",
      "filename": "cpython\\Lib\\test\\test_array.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 372,
      "line_range": [
        372
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "380             d = pickle.dumps((itorig, orig), proto)\n381             it, a = pickle.loads(d)\n382             a.insert(0, self.outside)\n",
      "filename": "cpython\\Lib\\test\\test_array.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 381,
      "line_range": [
        381
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "514         a = array.array(self.typecode, 2*self.example)\n515         self.assertEqual(a, eval(repr(a), {\"array\": array.array}))\n516 \n",
      "filename": "cpython\\Lib\\test\\test_array.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 515,
      "line_range": [
        515
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "567     def test_pickling(self):\n568         import pickle\n569         mods = [pickle]\n",
      "filename": "cpython\\Lib\\test\\test_ast.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 568,
      "line_range": [
        568
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "570         try:\n571             import cPickle\n572             mods.append(cPickle)\n",
      "filename": "cpython\\Lib\\test\\test_ast.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with cPickle module.",
      "line_number": 571,
      "line_range": [
        571
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1032         ns = {}\n1033         exec(code, ns)\n1034         self.assertIn('sleep', ns)\n",
      "filename": "cpython\\Lib\\test\\test_ast.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 1033,
      "line_range": [
        1033
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1443         ns = {}\n1444         exec(code, ns)\n1445         return ns['x']\n",
      "filename": "cpython\\Lib\\test\\test_ast.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 1444,
      "line_range": [
        1444
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1522         for assign, const in zip(tree.body, consts):\n1523             assert isinstance(assign, ast.Assign), ast.dump(assign)\n1524             new_node = ast.Constant(value=const)\n",
      "filename": "cpython\\Lib\\test\\test_ast.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1523,
      "line_range": [
        1523
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "55         with self.assertRaisesRegex(SyntaxError, 'yield from.*inside async'):\n56             exec(code, {}, {})\n57 \n",
      "filename": "cpython\\Lib\\test\\test_asyncgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 56,
      "line_range": [
        56
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "63         with self.assertRaisesRegex(SyntaxError, 'yield from.*inside async'):\n64             exec(code, {}, {})\n65 \n",
      "filename": "cpython\\Lib\\test\\test_asyncgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 64,
      "line_range": [
        64
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "73         with self.assertRaisesRegex(SyntaxError, 'return.*value.*async gen'):\n74             exec(code, {}, {})\n75 \n",
      "filename": "cpython\\Lib\\test\\test_asyncgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 74,
      "line_range": [
        74
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "82         with self.assertRaisesRegex(SyntaxError, 'return.*value.*async gen'):\n83             exec(code, {}, {})\n84 \n",
      "filename": "cpython\\Lib\\test\\test_asyncgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 83,
      "line_range": [
        83
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "92         with self.assertRaisesRegex(SyntaxError, 'return.*value.*async gen'):\n93             exec(code, {}, {})\n94 \n",
      "filename": "cpython\\Lib\\test\\test_asyncgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 93,
      "line_range": [
        93
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "499                 yield\n500             except:\n501                 pass\n",
      "filename": "cpython\\Lib\\test\\test_asyncgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 500,
      "line_range": [
        500
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "512                 yield\n513             except:\n514                 pass\n",
      "filename": "cpython\\Lib\\test\\test_asyncgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 513,
      "line_range": [
        513
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "674                 yield\n675             except:\n676                 pass\n",
      "filename": "cpython\\Lib\\test\\test_asyncgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 675,
      "line_range": [
        675
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "686                 yield\n687             except:\n688                 pass\n",
      "filename": "cpython\\Lib\\test\\test_asyncgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 687,
      "line_range": [
        687
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "707                 yield\n708             except:\n709                 pass\n",
      "filename": "cpython\\Lib\\test\\test_asyncgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 708,
      "line_range": [
        708
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "721                 yield\n722             except:\n723                 pass\n",
      "filename": "cpython\\Lib\\test\\test_asyncgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 722,
      "line_range": [
        722
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "978                 yield\n979             except:\n980                 pass\n",
      "filename": "cpython\\Lib\\test\\test_asyncgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 979,
      "line_range": [
        979
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "991                 yield\n992             except:\n993                 pass\n",
      "filename": "cpython\\Lib\\test\\test_asyncgen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 992,
      "line_range": [
        992
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "60                 self.buffer = self.buffer[n:]\n61         except:\n62             pass\n",
      "filename": "cpython\\Lib\\test\\test_asynchat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 61,
      "line_range": [
        61
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "528             self.loop.run_until_complete, self.loop.subprocess_exec,\n529             asyncio.SubprocessProtocol, *args, shell=True)\n530         self.assertRaises(TypeError,\n531             self.loop.run_until_complete, self.loop.subprocess_exec,\n532             asyncio.SubprocessProtocol, *args, bufsize=4096)\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_base_events.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with shell=True parameter identified, possible security issue.",
      "line_number": 529,
      "line_range": [
        527,
        528,
        529
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b604_any_other_function_with_shell_equals_true.html",
      "test_id": "B604",
      "test_name": "any_other_function_with_shell_equals_true"
    },
    {
      "code": "548             self.loop.run_until_complete, self.loop.subprocess_shell,\n549             asyncio.SubprocessProtocol, 'exit 0', shell=True)\n550         self.assertRaises(TypeError,\n551             self.loop.run_until_complete, self.loop.subprocess_shell,\n552             asyncio.SubprocessProtocol, 'exit 0', bufsize=4096)\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_base_events.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with shell=True parameter identified, possible security issue.",
      "line_number": 549,
      "line_range": [
        547,
        548,
        549
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b604_any_other_function_with_shell_equals_true.html",
      "test_id": "B604",
      "test_name": "any_other_function_with_shell_equals_true"
    },
    {
      "code": "645 \n646         assert not mock_handler.called\n647 \n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 646,
      "line_range": [
        646
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1007         self.transport = transport\n1008         assert self.state == 'INITIAL', self.state\n1009         self.state = 'CONNECTED'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1008,
      "line_range": [
        1008
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1012     def data_received(self, data):\n1013         assert self.state == 'CONNECTED', self.state\n1014         self.nbytes += len(data)\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1013,
      "line_range": [
        1013
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1016     def eof_received(self):\n1017         assert self.state == 'CONNECTED', self.state\n1018         self.state = 'EOF'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1017,
      "line_range": [
        1017
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1020     def connection_lost(self, exc):\n1021         assert self.state in ('CONNECTED', 'EOF'), self.state\n1022         self.state = 'CLOSED'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1021,
      "line_range": [
        1021
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1037         self.transport = transport\n1038         assert self.state == 'INITIAL', self.state\n1039         self.state = 'INITIALIZED'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1038,
      "line_range": [
        1038
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1041     def datagram_received(self, data, addr):\n1042         assert self.state == 'INITIALIZED', self.state\n1043         self.nbytes += len(data)\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1042,
      "line_range": [
        1042
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1045     def error_received(self, exc):\n1046         assert self.state == 'INITIALIZED', self.state\n1047 \n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1046,
      "line_range": [
        1046
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1048     def connection_lost(self, exc):\n1049         assert self.state == 'INITIALIZED', self.state\n1050         self.state = 'CLOSED'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1049,
      "line_range": [
        1049
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1399         def getaddrinfo(host, port, *args, **kw):\n1400             assert (host, port) == addr\n1401             return [(999, 1, 999, '', (addr, 1))]\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1400,
      "line_range": [
        1400
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1698         transport, protocol = self.loop.run_until_complete(fut)\n1699         assert transport._sock.family == socket.AF_UNIX\n1700         transport.close()\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_base_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1699,
      "line_range": [
        1699
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "15     ssl = None\n16 import subprocess\n17 import sys\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 16,
      "line_range": [
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "91         self.transport = transport\n92         assert self.state == 'INITIAL', self.state\n93         self.state = 'CONNECTED'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 92,
      "line_range": [
        92
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "97     def data_received(self, data):\n98         assert self.state == 'CONNECTED', self.state\n99         self.nbytes += len(data)\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 98,
      "line_range": [
        98
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "101     def eof_received(self):\n102         assert self.state == 'CONNECTED', self.state\n103         self.state = 'EOF'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 102,
      "line_range": [
        102
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "105     def connection_lost(self, exc):\n106         assert self.state in ('CONNECTED', 'EOF'), self.state\n107         self.state = 'CLOSED'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 106,
      "line_range": [
        106
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "128         self.transport = transport\n129         assert self.state == 'INITIAL', self.state\n130         self.state = 'INITIALIZED'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 129,
      "line_range": [
        129
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "132     def datagram_received(self, data, addr):\n133         assert self.state == 'INITIALIZED', self.state\n134         self.nbytes += len(data)\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 133,
      "line_range": [
        133
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "136     def error_received(self, exc):\n137         assert self.state == 'INITIALIZED', self.state\n138 \n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 137,
      "line_range": [
        137
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "139     def connection_lost(self, exc):\n140         assert self.state == 'INITIALIZED', self.state\n141         self.state = 'CLOSED'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 140,
      "line_range": [
        140
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "157         self.transport = transport\n158         assert self.state == ['INITIAL'], self.state\n159         self.state.append('CONNECTED')\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 158,
      "line_range": [
        158
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "161     def data_received(self, data):\n162         assert self.state == ['INITIAL', 'CONNECTED'], self.state\n163         self.nbytes += len(data)\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 162,
      "line_range": [
        162
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "165     def eof_received(self):\n166         assert self.state == ['INITIAL', 'CONNECTED'], self.state\n167         self.state.append('EOF')\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 166,
      "line_range": [
        166
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "171             self.state.append('EOF')  # It is okay if EOF is missed.\n172         assert self.state == ['INITIAL', 'CONNECTED', 'EOF'], self.state\n173         self.state.append('CLOSED')\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 172,
      "line_range": [
        172
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "188         self.transport = transport\n189         assert self.state == 'INITIAL', self.state\n190         self.state = 'CONNECTED'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 189,
      "line_range": [
        189
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "192     def connection_lost(self, exc):\n193         assert self.state == 'CONNECTED', self.state\n194         self.state = 'CLOSED'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 193,
      "line_range": [
        193
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "213         self.transport = transport\n214         assert self.state == 'INITIAL', self.state\n215         self.state = 'CONNECTED'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 214,
      "line_range": [
        214
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "218     def connection_lost(self, exc):\n219         assert self.state == 'CONNECTED', self.state\n220         self.state = 'CLOSED'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 219,
      "line_range": [
        219
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "223     def pipe_data_received(self, fd, data):\n224         assert self.state == 'CONNECTED', self.state\n225         self.data[fd] += data\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 224,
      "line_range": [
        224
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "228     def pipe_connection_lost(self, fd, exc):\n229         assert self.state == 'CONNECTED', self.state\n230         if exc:\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 229,
      "line_range": [
        229
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "235     def process_exited(self):\n236         assert self.state == 'CONNECTED', self.state\n237         self.returncode = self.transport.get_returncode()\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 236,
      "line_range": [
        236
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1279                 sock.bind(address)\n1280             except:\n1281                 pass\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 1280,
      "line_range": [
        1280
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1284         else:\n1285             assert False, 'Can not create socket.'\n1286 \n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1285,
      "line_range": [
        1285
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1990         with self.assertRaises(ValueError):\n1991             self.loop.run_until_complete(connect(shell=True))\n1992 \n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_events.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with shell=True parameter identified, possible security issue.",
      "line_number": 1991,
      "line_range": [
        1991
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b604_any_other_function_with_shell_equals_true.html",
      "test_id": "B604",
      "test_name": "any_other_function_with_shell_equals_true"
    },
    {
      "code": "56     def result(self):\n57         assert not self.cancelled()\n58         if self.__exception is not None:\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 57,
      "line_range": [
        57
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "62     def exception(self):\n63         assert not self.cancelled()\n64         return self.__exception\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 63,
      "line_range": [
        63
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "66     def set_result(self, result):\n67         assert not self.done()\n68         assert result is not None\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 67,
      "line_range": [
        67
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "67         assert not self.done()\n68         assert result is not None\n69         self.__result = result\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 68,
      "line_range": [
        68
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "71     def set_exception(self, exception):\n72         assert not self.done()\n73         assert exception is not None\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 72,
      "line_range": [
        72
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "72         assert not self.done()\n73         assert exception is not None\n74         self.__exception = exception\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 73,
      "line_range": [
        73
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "79             yield self\n80         assert self.done()\n81         return self.result()\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 80,
      "line_range": [
        80
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "93         g = asyncio.wrap_future(f)\n94         assert g is f\n95 \n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 94,
      "line_range": [
        94
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "98         g = asyncio.ensure_future(f)\n99         assert g is f\n100 \n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 99,
      "line_range": [
        99
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "40         self.transport = transport\n41         assert self.state == 'INITIAL', self.state\n42         self.state = 'CONNECTED'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_sendfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "46     def eof_received(self):\n47         assert self.state == 'CONNECTED', self.state\n48         self.state = 'EOF'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_sendfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 47,
      "line_range": [
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "50     def connection_lost(self, exc):\n51         assert self.state in ('CONNECTED', 'EOF'), self.state\n52         self.state = 'CLOSED'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_sendfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 51,
      "line_range": [
        51
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "56     def data_received(self, data):\n57         assert self.state == 'CONNECTED', self.state\n58         self.nbytes += len(data)\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_sendfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 57,
      "line_range": [
        57
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "27         self.transport = transport\n28         assert self.state == 'INITIAL', self.state\n29         self.state = 'CONNECTED'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_sock_lowlevel.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 28,
      "line_range": [
        28
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "34     def data_received(self, data):\n35         assert self.state == 'CONNECTED', self.state\n36         self.nbytes += len(data)\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_sock_lowlevel.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 35,
      "line_range": [
        35
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "38     def eof_received(self):\n39         assert self.state == 'CONNECTED', self.state\n40         self.state = 'EOF'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_sock_lowlevel.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 39,
      "line_range": [
        39
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "42     def connection_lost(self, exc):\n43         assert self.state in ('CONNECTED', 'EOF'), self.state\n44         self.state = 'CLOSED'\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_sock_lowlevel.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 43,
      "line_range": [
        43
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "453             else:\n454                 assert False, 'Can not create socket.'\n455 \n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_sock_lowlevel.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 454,
      "line_range": [
        454
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "384             def buffer_updated(self, nsize):\n385                 assert nsize == 1\n386                 self.on_data.set_result(bytes(self.buf[:nsize]))\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_sslproto.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 385,
      "line_range": [
        385
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5 import queue\n6 import pickle\n7 import socket\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_streams.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "882             with self.subTest(pickle_protocol=proto):\n883                 e2 = pickle.loads(pickle.dumps(e, protocol=proto))\n884                 self.assertEqual(str(e), str(e2))\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_streams.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 883,
      "line_range": [
        883
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "891             with self.subTest(pickle_protocol=proto):\n892                 e2 = pickle.loads(pickle.dumps(e, protocol=proto))\n893                 self.assertEqual(str(e), str(e2))\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_streams.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 892,
      "line_range": [
        892
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "982             self.loop.run_until_complete(f)\n983             assert rd.at_eof()\n984             f = rd.read()\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_streams.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 983,
      "line_range": [
        983
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "985             data = self.loop.run_until_complete(f)\n986             assert data == b''\n987 \n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_streams.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 986,
      "line_range": [
        986
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "277         loop.run_until_complete(fut)\n278         assert fut.result() == 'ok'\n279 \n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_tasks.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 278,
      "line_range": [
        278
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2740                 cvar.set(num + i)\n2741                 await asyncio.sleep(random.uniform(0.001, 0.05))\n2742                 self.assertEqual(cvar.get(), num + i)\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_tasks.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2741,
      "line_range": [
        2741
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2746             for i in range(100):\n2747                 task = loop.create_task(sub(random.randint(0, 10)))\n2748                 tasks.append(task)\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\test_tasks.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2747,
      "line_range": [
        2747
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "411     def assert_writer(self, fd, callback, *args):\n412         assert fd in self.writers, 'fd {} is not registered'.format(fd)\n413         handle = self.writers[fd]\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\utils.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 412,
      "line_range": [
        412
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "413         handle = self.writers[fd]\n414         assert handle._callback == callback, '{!r} != {!r}'.format(\n415             handle._callback, callback)\n416         assert handle._args == args, '{!r} != {!r}'.format(\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\utils.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 414,
      "line_range": [
        414,
        415
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "415             handle._callback, callback)\n416         assert handle._args == args, '{!r} != {!r}'.format(\n417             handle._args, args)\n418 \n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\utils.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 416,
      "line_range": [
        416,
        417
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "532     def set_event_loop(self, loop, *, cleanup=True):\n533         assert loop is not None\n534         # ensure that the event loop is passed explicitly in asyncio\n535         events.set_event_loop(None)\n",
      "filename": "cpython\\Lib\\test\\test_asyncio\\utils.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 533,
      "line_range": [
        533,
        534
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3 \n4 import subprocess\n5 import sys\n",
      "filename": "cpython\\Lib\\test\\test_audit.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "19     def do_test(self, *args):\n20         with subprocess.Popen(\n21             [sys.executable, \"-X utf8\", AUDIT_TESTS_PY, *args],\n22             encoding=\"utf-8\",\n23             stdout=subprocess.PIPE,\n24             stderr=subprocess.PIPE,\n25         ) as p:\n",
      "filename": "cpython\\Lib\\test\\test_audit.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 20,
      "line_range": [
        20,
        21,
        22,
        23,
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "33         events = []\n34         with subprocess.Popen(\n35             [sys.executable, \"-X utf8\", AUDIT_TESTS_PY, *args],\n36             encoding=\"utf-8\",\n37             stdout=subprocess.PIPE,\n38             stderr=subprocess.PIPE,\n39         ) as p:\n",
      "filename": "cpython\\Lib\\test\\test_audit.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 34,
      "line_range": [
        34,
        35,
        36,
        37,
        38
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "116                 globals_ = module.__dict__\n117             func = eval(funcname, globals_)\n118             code = func.__code__\n",
      "filename": "cpython\\Lib\\test\\test_bdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 117,
      "line_range": [
        117
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "452             else:\n453                 assert False, 'BdbNotExpectedError with empty args'\n454 \n",
      "filename": "cpython\\Lib\\test\\test_bdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 453,
      "line_range": [
        453
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "297         self.assertEqual(Rat(1, 2) * 3.0, 1.5)\n298         self.assertEqual(eval('1/2'), 0.5)\n299 \n",
      "filename": "cpython\\Lib\\test\\test_binop.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 298,
      "line_range": [
        298
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "157         for i in range(n):\n158             data = [randrange(0, n, 2) for j in range(i)]\n159             data.sort()\n",
      "filename": "cpython\\Lib\\test\\test_bisect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 158,
      "line_range": [
        158
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "159             data.sort()\n160             elem = randrange(-1, n+1)\n161             ip = self.module.bisect_left(data, elem)\n",
      "filename": "cpython\\Lib\\test\\test_bisect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 160,
      "line_range": [
        160
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "272             for i in range(n):\n273                 digit = choice(\"0123456789\")\n274                 if digit in \"02468\":\n",
      "filename": "cpython\\Lib\\test\\test_bisect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 273,
      "line_range": [
        273
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "24         self.assertEqual(repr(True), 'True')\n25         self.assertIs(eval(repr(False)), False)\n26         self.assertIs(eval(repr(True)), True)\n",
      "filename": "cpython\\Lib\\test\\test_bool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 25,
      "line_range": [
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "25         self.assertIs(eval(repr(False)), False)\n26         self.assertIs(eval(repr(True)), True)\n27 \n",
      "filename": "cpython\\Lib\\test\\test_bool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 26,
      "line_range": [
        26
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "266         import marshal\n267         self.assertIs(marshal.loads(marshal.dumps(True)), True)\n268         self.assertIs(marshal.loads(marshal.dumps(False)), False)\n",
      "filename": "cpython\\Lib\\test\\test_bool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 267,
      "line_range": [
        267
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "267         self.assertIs(marshal.loads(marshal.dumps(True)), True)\n268         self.assertIs(marshal.loads(marshal.dumps(False)), False)\n269 \n",
      "filename": "cpython\\Lib\\test\\test_bool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 268,
      "line_range": [
        268
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "270     def test_pickle(self):\n271         import pickle\n272         for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n",
      "filename": "cpython\\Lib\\test\\test_bool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 271,
      "line_range": [
        271
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "272         for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n273             self.assertIs(pickle.loads(pickle.dumps(True, proto)), True)\n274             self.assertIs(pickle.loads(pickle.dumps(False, proto)), False)\n",
      "filename": "cpython\\Lib\\test\\test_bool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 273,
      "line_range": [
        273
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "273             self.assertIs(pickle.loads(pickle.dumps(True, proto)), True)\n274             self.assertIs(pickle.loads(pickle.dumps(False, proto)), False)\n275 \n",
      "filename": "cpython\\Lib\\test\\test_bool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 274,
      "line_range": [
        274
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "277         # Test for specific backwards-compatible pickle values\n278         import pickle\n279         self.assertEqual(pickle.dumps(True, protocol=0), b\"I01\\n.\")\n",
      "filename": "cpython\\Lib\\test\\test_bool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 278,
      "line_range": [
        278
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "158        format character.\"\"\"\n159     x = randrange(*fmtdict[mode][char])\n160     if char == 'c':\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 159,
      "line_range": [
        159
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "189 def struct_items(n, obj):\n190     mode = choice(cap[obj][MODE])\n191     xfmt = mode + '#'\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 190,
      "line_range": [
        190
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "192     fmt = mode.strip('amb')\n193     nmemb = randrange(2, 10) # number of struct members\n194     for _ in range(nmemb):\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 193,
      "line_range": [
        193
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "194     for _ in range(nmemb):\n195         char = choice(tuple(fmtdict[mode]))\n196         multiplier = choice(cap[obj][MULT])\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 195,
      "line_range": [
        195
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "195         char = choice(tuple(fmtdict[mode]))\n196         multiplier = choice(cap[obj][MULT])\n197         xfmt += (char * int(multiplier if multiplier else 1))\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 196,
      "line_range": [
        196
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "205     if mode is None:\n206         mode = choice(cap[obj][MODE])\n207     if char is None:\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 206,
      "line_range": [
        206
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "207     if char is None:\n208         char = choice(tuple(fmtdict[mode]))\n209     multiplier = choice(cap[obj][MULT])\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 208,
      "line_range": [
        208
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "208         char = choice(tuple(fmtdict[mode]))\n209     multiplier = choice(cap[obj][MULT])\n210     fmt = mode + '#' + char * int(multiplier if multiplier else 1)\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 209,
      "line_range": [
        209
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "494     if not shape:\n495         ndim = randrange(maxdim+1)\n496         if (ndim == 0):\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 495,
      "line_range": [
        495
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "499             else:\n500                 nitems = randrange(1, 16+1)\n501                 memlen = nitems * itemsize\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 500,
      "line_range": [
        500
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "501                 memlen = nitems * itemsize\n502                 offset = -itemsize if randrange(2) == 0 else memlen\n503                 return memlen, itemsize, ndim, (), (), offset\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 502,
      "line_range": [
        502
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "505         minshape = 2\n506         n = randrange(100)\n507         if n >= 95 and valid:\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 506,
      "line_range": [
        506
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "513         for i in range(ndim):\n514             shape[i] = randrange(minshape, maxshape+1)\n515     else:\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 514,
      "line_range": [
        514
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "518     maxstride = 5\n519     n = randrange(100)\n520     zero_stride = True if n >= 95 and n & 1 else False\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 519,
      "line_range": [
        519
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "522     strides = [0] * ndim\n523     strides[ndim-1] = itemsize * randrange(-maxstride, maxstride+1)\n524     if not zero_stride and strides[ndim-1] == 0:\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 523,
      "line_range": [
        523
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "529         if zero_stride:\n530             strides[i] = itemsize * randrange(-maxstride, maxstride+1)\n531         else:\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 530,
      "line_range": [
        530
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "531         else:\n532             strides[i] = ((1,-1)[randrange(2)] *\n533                           itemsize * randrange(1, maxstride+1))\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 532,
      "line_range": [
        532
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "532             strides[i] = ((1,-1)[randrange(2)] *\n533                           itemsize * randrange(1, maxstride+1))\n534 \n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 533,
      "line_range": [
        533
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "547         memlen = (-imin + imax) * itemsize\n548         offset = -imin-itemsize if randrange(2) == 0 else memlen\n549     return memlen, itemsize, ndim, shape, strides, offset\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 548,
      "line_range": [
        548
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "553     maxstart = listlen - slicelen\n554     start = randrange(maxstart+1)\n555     maxstep = (listlen - start) // slicelen if slicelen else 1\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 554,
      "line_range": [
        554
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "555     maxstep = (listlen - start) // slicelen if slicelen else 1\n556     step = randrange(1, maxstep+1)\n557     stop = start + slicelen * step\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 556,
      "line_range": [
        556
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "570         l = shape[n]\n571         slicelen = randrange(1, l+1) if l > 0 else 0\n572         lslices[n] = randslice_from_slicelen(slicelen, l)\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 571,
      "line_range": [
        571
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "579        with shape 'lshape' and y is an array with shape 'rshape'.\"\"\"\n580     ndim = randrange(1, maxdim+1)\n581     minshape = 2\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 580,
      "line_range": [
        580
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "581     minshape = 2\n582     n = randrange(100)\n583     if n >= 95:\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 582,
      "line_range": [
        582
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "586         minshape = 1\n587     all_random = True if randrange(100) >= 80 else False\n588     lshape = [0]*ndim; rshape = [0]*ndim\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 587,
      "line_range": [
        587
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "591     for n in range(ndim):\n592         small = randrange(minshape, maxshape+1)\n593         big = randrange(minshape, maxshape+1)\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 592,
      "line_range": [
        592
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "592         small = randrange(minshape, maxshape+1)\n593         big = randrange(minshape, maxshape+1)\n594         if big < small:\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 593,
      "line_range": [
        593
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "598         if all_random:\n599             start = randrange(-small, small+1)\n600             stop = randrange(-small, small+1)\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 599,
      "line_range": [
        599
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "599             start = randrange(-small, small+1)\n600             stop = randrange(-small, small+1)\n601             step = (1,-1)[randrange(2)] * randrange(1, small+2)\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 600,
      "line_range": [
        600
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "600             stop = randrange(-small, small+1)\n601             step = (1,-1)[randrange(2)] * randrange(1, small+2)\n602             s_small = slice(start, stop, step)\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 601,
      "line_range": [
        601
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "600             stop = randrange(-small, small+1)\n601             step = (1,-1)[randrange(2)] * randrange(1, small+2)\n602             s_small = slice(start, stop, step)\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 601,
      "line_range": [
        601
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "604         else:\n605             slicelen = randrange(1, small+1) if small > 0 else 0\n606             s_small = randslice_from_slicelen(slicelen, small)\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 605,
      "line_range": [
        605
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "609         s_big = randslice_from_slicelen(slicelen, big)\n610         if randrange(2) == 0:\n611             rshape[n], lshape[n] = big, small\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 610,
      "line_range": [
        610
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "681         yield [n]\n682     ndim = randrange(4, 6)\n683     minshape = 1 if randrange(100) > 80 else 2\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 682,
      "line_range": [
        682
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "682     ndim = randrange(4, 6)\n683     minshape = 1 if randrange(100) > 80 else 2\n684     yield [randrange(minshape, 5) for _ in range(ndim)]\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 683,
      "line_range": [
        683
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "683     minshape = 1 if randrange(100) > 80 else 2\n684     yield [randrange(minshape, 5) for _ in range(ndim)]\n685     ndim = randrange(2, 4)\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 684,
      "line_range": [
        684
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "684     yield [randrange(minshape, 5) for _ in range(ndim)]\n685     ndim = randrange(2, 4)\n686     minshape = 1 if randrange(100) > 80 else 2\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 685,
      "line_range": [
        685
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "685     ndim = randrange(2, 4)\n686     minshape = 1 if randrange(100) > 80 else 2\n687     yield [randrange(minshape, 5) for _ in range(ndim)]\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 686,
      "line_range": [
        686
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "686     minshape = 1 if randrange(100) > 80 else 2\n687     yield [randrange(minshape, 5) for _ in range(ndim)]\n688 \n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 687,
      "line_range": [
        687
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "707     minlen = 0 if allow_empty or n == 0 else 1\n708     slicelen = randrange(minlen, n+1)\n709     return randslice_from_slicelen(slicelen, n)\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 708,
      "line_range": [
        708
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1312         # ndim = 1, shape = [n]\n1313         nitems =  randrange(1, 10)\n1314         for fmt, items, _ in iter_format(nitems):\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1313,
      "line_range": [
        1313
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1324         # ndim = 1, strides\n1325         nitems = randrange(1, 30)\n1326         for fmt, items, _ in iter_format(nitems):\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1325,
      "line_range": [
        1325
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1351         for ndim in range(5):\n1352             shape_t = [randrange(2, 10) for _ in range(ndim)]\n1353             nitems = prod(shape_t)\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1352,
      "line_range": [
        1352
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2580         for sfmt in NON_BYTE_FORMAT:\n2581             sformat = '@' + sfmt if randrange(2) else sfmt\n2582             ssize = struct.calcsize(sformat)\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2581,
      "line_range": [
        2581
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2583             for dfmt in NON_BYTE_FORMAT:\n2584                 dformat = '@' + dfmt if randrange(2) else dfmt\n2585                 dsize = struct.calcsize(dformat)\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2584,
      "line_range": [
        2584
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2761                     continue\n2762                 tfmt = ('', '@')[randrange(2)] + char\n2763                 tsize = struct.calcsize(tfmt)\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2762,
      "line_range": [
        2762
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2983             m = memoryview(ex)\n2984             i = randrange(-3, 3)\n2985             m[i] = 8\n",
      "filename": "cpython\\Lib\\test\\test_buffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2984,
      "line_range": [
        2984
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "11 import os\n12 import pickle\n13 import platform\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "140         d = pickle.dumps(it, proto)\n141         it = pickle.loads(d)\n142         self.assertEqual(type(itorg), type(it))\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 141,
      "line_range": [
        141
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "145         #test the iterator after dropping one from it\n146         it = pickle.loads(d)\n147         try:\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 146,
      "line_range": [
        146
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "151         d = pickle.dumps(it, proto)\n152         it = pickle.loads(d)\n153         self.assertEqual(list(it), seq[1:])\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 152,
      "line_range": [
        152
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "369                 ns = {}\n370                 exec(code, ns)\n371                 rv = ns['f']()\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 370,
      "line_range": [
        370
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "447                 globals_ = {'asyncio': asyncio, 'a': 0, 'arange': arange}\n448                 asyncio.run(eval(co, globals_))\n449                 self.assertEqual(globals_['a'], 1)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 448,
      "line_range": [
        448
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "503         glob = {}\n504         exec(co, glob)\n505         self.assertEqual(type(glob['ticker']()), AsyncGeneratorType)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 504,
      "line_range": [
        504
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "607     def test_eval(self):\n608         self.assertEqual(eval('1+1'), 2)\n609         self.assertEqual(eval(' 1+1\\n'), 2)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 608,
      "line_range": [
        608
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "608         self.assertEqual(eval('1+1'), 2)\n609         self.assertEqual(eval(' 1+1\\n'), 2)\n610         globals = {'a': 1, 'b': 2}\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 609,
      "line_range": [
        609
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "611         locals = {'b': 200, 'c': 300}\n612         self.assertEqual(eval('a', globals) , 1)\n613         self.assertEqual(eval('a', globals, locals), 1)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 612,
      "line_range": [
        612
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "612         self.assertEqual(eval('a', globals) , 1)\n613         self.assertEqual(eval('a', globals, locals), 1)\n614         self.assertEqual(eval('b', globals, locals), 200)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 613,
      "line_range": [
        613
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "613         self.assertEqual(eval('a', globals, locals), 1)\n614         self.assertEqual(eval('b', globals, locals), 200)\n615         self.assertEqual(eval('c', globals, locals), 300)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 614,
      "line_range": [
        614
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "614         self.assertEqual(eval('b', globals, locals), 200)\n615         self.assertEqual(eval('c', globals, locals), 300)\n616         globals = {'a': 1, 'b': 2}\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 615,
      "line_range": [
        615
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "618         bom = b'\\xef\\xbb\\xbf'\n619         self.assertEqual(eval(bom + b'a', globals, locals), 1)\n620         self.assertEqual(eval('\"\\xe5\"', globals), \"\\xe5\")\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 619,
      "line_range": [
        619
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "619         self.assertEqual(eval(bom + b'a', globals, locals), 1)\n620         self.assertEqual(eval('\"\\xe5\"', globals), \"\\xe5\")\n621         self.assertRaises(TypeError, eval)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 620,
      "line_range": [
        620
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "643         g = globals()\n644         self.assertEqual(eval('a', g, m), 12)\n645         self.assertRaises(NameError, eval, 'b', g, m)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 644,
      "line_range": [
        644
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "645         self.assertRaises(NameError, eval, 'b', g, m)\n646         self.assertEqual(eval('dir()', g, m), list('xyz'))\n647         self.assertEqual(eval('globals()', g, m), g)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 646,
      "line_range": [
        646
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "646         self.assertEqual(eval('dir()', g, m), list('xyz'))\n647         self.assertEqual(eval('globals()', g, m), g)\n648         self.assertEqual(eval('locals()', g, m), m)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 647,
      "line_range": [
        647
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "647         self.assertEqual(eval('globals()', g, m), g)\n648         self.assertEqual(eval('locals()', g, m), m)\n649         self.assertRaises(TypeError, eval, 'a', m)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 648,
      "line_range": [
        648
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "665         d = D()\n666         self.assertEqual(eval('a', g, d), 12)\n667         self.assertRaises(NameError, eval, 'b', g, d)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 666,
      "line_range": [
        666
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "667         self.assertRaises(NameError, eval, 'b', g, d)\n668         self.assertEqual(eval('dir()', g, d), list('xyz'))\n669         self.assertEqual(eval('globals()', g, d), g)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 668,
      "line_range": [
        668
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "668         self.assertEqual(eval('dir()', g, d), list('xyz'))\n669         self.assertEqual(eval('globals()', g, d), g)\n670         self.assertEqual(eval('locals()', g, d), d)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 669,
      "line_range": [
        669
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "669         self.assertEqual(eval('globals()', g, d), g)\n670         self.assertEqual(eval('locals()', g, d), d)\n671 \n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 670,
      "line_range": [
        670
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "672         # Verify locals stores (used by list comps)\n673         eval('[locals() for i in (2,3)]', g, d)\n674         eval('[locals() for i in (2,3)]', g, collections.UserDict())\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 673,
      "line_range": [
        673
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "673         eval('[locals() for i in (2,3)]', g, d)\n674         eval('[locals() for i in (2,3)]', g, collections.UserDict())\n675 \n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 674,
      "line_range": [
        674
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "681             def __getitem__(self, key):\n682                 return eval(self._cells[key], globals(), self)\n683 \n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 682,
      "line_range": [
        682
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "700         g = {}\n701         exec('z = 1', g)\n702         if '__builtins__' in g:\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 701,
      "line_range": [
        701
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "705 \n706         exec('z = 1+1', g)\n707         if '__builtins__' in g:\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 706,
      "line_range": [
        706
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "715                     module=\"<string>\")\n716             exec('global a; a = 1; b = 2', g, l)\n717         if '__builtins__' in g:\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 716,
      "line_range": [
        716
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "763             # Used to raise SystemError('error return without exception set')\n764             exec('a')\n765         except NameError:\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 764,
      "line_range": [
        764
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1042             try:\n1043                 exec(stmt, globals())\n1044             except TypeError:\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 1043,
      "line_range": [
        1043
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1061 \n1062         data = [random.randrange(200) for i in range(100)]\n1063         keys = dict((elem, random.randrange(50)) for elem in data)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1062,
      "line_range": [
        1062
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1062         data = [random.randrange(200) for i in range(100)]\n1063         keys = dict((elem, random.randrange(50)) for elem in data)\n1064         f = keys.__getitem__\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1063,
      "line_range": [
        1063
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1101             try:\n1102                 exec(stmt, globals())\n1103             except TypeError:\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 1102,
      "line_range": [
        1102
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1120 \n1121         data = [random.randrange(200) for i in range(100)]\n1122         keys = dict((elem, random.randrange(50)) for elem in data)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1121,
      "line_range": [
        1121
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1121         data = [random.randrange(200) for i in range(100)]\n1122         keys = dict((elem, random.randrange(50)) for elem in data)\n1123         f = keys.__getitem__\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1122,
      "line_range": [
        1122
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1307             sys.stdout = BitBucket()\n1308             self.assertEqual(input(), \"1+1\")\n1309             self.assertEqual(input(), 'The quick brown fox jumps over the lazy dog.')\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 1308,
      "line_range": [
        1308
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "1308             self.assertEqual(input(), \"1+1\")\n1309             self.assertEqual(input(), 'The quick brown fox jumps over the lazy dog.')\n1310             self.assertEqual(input('testing\\n'), 'Dear John')\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 1309,
      "line_range": [
        1309
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "1309             self.assertEqual(input(), 'The quick brown fox jumps over the lazy dog.')\n1310             self.assertEqual(input('testing\\n'), 'Dear John')\n1311 \n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 1310,
      "line_range": [
        1310
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "1321             sys.stdin = io.StringIO(\"    'whitespace'\")\n1322             self.assertEqual(input(), \"    'whitespace'\")\n1323             sys.stdin = io.StringIO()\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 1322,
      "line_range": [
        1322
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "1618             z1 = zip(a, b, strict=True)\n1619             z2 = pickle.loads(pickle.dumps(z1, proto))\n1620             self.assertEqual(self.iter_error(z1, ValueError), t)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1619,
      "line_range": [
        1619
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1635             z2 = zip((1, 2, 3), (4, 5, 6), strict=False)\n1636             z3 = pickle.loads(dump)\n1637             l3 = list(z3)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1636,
      "line_range": [
        1636
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1658             z1 = zip(a, b, strict=True)\n1659             z2 = pickle.loads(dump)\n1660             self.assertEqual(pickle.dumps(z1, protocol), dump)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1659,
      "line_range": [
        1659
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2101             print(\"tty =\", sys.stdin.isatty() and sys.stdout.isatty(), file=wpipe)\n2102             print(ascii(input(prompt)), file=wpipe)\n2103         lines = self.run_child(child, terminal_input + b\"\\r\\n\")\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 2102,
      "line_range": [
        2102
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "2107             self.skipTest(\"standard IO in should have been a tty\")\n2108         input_result = eval(lines[1])   # ascii() -> eval() roundtrip\n2109         if stdio_encoding:\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 2108,
      "line_range": [
        2108
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "2133             sys.stdout = io.StringIO()  # Does not support fileno()\n2134             input(\"prompt\")\n2135             print(\"captured:\", ascii(sys.stdout.getvalue()), file=wpipe)\n",
      "filename": "cpython\\Lib\\test\\test_builtin.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 2134,
      "line_range": [
        2134
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "12 import functools\n13 import pickle\n14 import tempfile\n",
      "filename": "cpython\\Lib\\test\\test_bytes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "790                 ps = pickle.dumps(b, proto)\n791                 q = pickle.loads(ps)\n792                 self.assertEqual(b, q)\n",
      "filename": "cpython\\Lib\\test\\test_bytes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 791,
      "line_range": [
        791
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "799                 d = pickle.dumps(it, proto)\n800                 it = pickle.loads(d)\n801                 self.assertEqual(type(itorg), type(it))\n",
      "filename": "cpython\\Lib\\test\\test_bytes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 800,
      "line_range": [
        800
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "803 \n804                 it = pickle.loads(d)\n805                 if not b:\n",
      "filename": "cpython\\Lib\\test\\test_bytes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 804,
      "line_range": [
        804
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "808                 d = pickle.dumps(it, proto)\n809                 it = pickle.loads(d)\n810                 self.assertEqual(list(it), data[1:])\n",
      "filename": "cpython\\Lib\\test\\test_bytes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 809,
      "line_range": [
        809
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1192         sample = short_sample + b\"\\0\"*(20 - len(short_sample))\n1193         tfn = tempfile.mktemp()\n1194         try:\n",
      "filename": "cpython\\Lib\\test\\test_bytes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 1193,
      "line_range": [
        1193
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "1627             d = pickle.dumps((itorig, orig), proto)\n1628             it, b = pickle.loads(d)\n1629             b[:] = data\n",
      "filename": "cpython\\Lib\\test\\test_bytes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1628,
      "line_range": [
        1628
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1635             d = pickle.dumps((itorig, orig), proto)\n1636             it, b = pickle.loads(d)\n1637             b[:] = data\n",
      "filename": "cpython\\Lib\\test\\test_bytes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1636,
      "line_range": [
        1636
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1644             d = pickle.dumps((itorig, orig), proto)\n1645             it, b = pickle.loads(d)\n1646             b[:] = data\n",
      "filename": "cpython\\Lib\\test\\test_bytes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1645,
      "line_range": [
        1645
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1652             d = pickle.dumps((itorig, orig), proto)\n1653             it, b = pickle.loads(d)\n1654             b[:] = data\n",
      "filename": "cpython\\Lib\\test\\test_bytes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1653,
      "line_range": [
        1653
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1830                      'val.splitlines()[0]', 'val.replace(b\"\", b\"\")'):\n1831             newval = eval(expr)\n1832             self.assertEqual(val, newval)\n",
      "filename": "cpython\\Lib\\test\\test_bytes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 1831,
      "line_range": [
        1831
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1899         for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n1900             b = pickle.loads(pickle.dumps(a, proto))\n1901             self.assertNotEqual(id(a), id(b))\n",
      "filename": "cpython\\Lib\\test\\test_bytes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1900,
      "line_range": [
        1900
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "6 import os\n7 import pickle\n8 import glob\n",
      "filename": "cpython\\Lib\\test\\test_bz2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "12 import shutil\n13 import subprocess\n14 import threading\n",
      "filename": "cpython\\Lib\\test\\test_bz2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "32     if has_cmdline_bunzip2:\n33         return subprocess.check_output(['bunzip2'], input=data)\n34     else:\n",
      "filename": "cpython\\Lib\\test\\test_bz2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 33,
      "line_range": [
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "32     if has_cmdline_bunzip2:\n33         return subprocess.check_output(['bunzip2'], input=data)\n34     else:\n",
      "filename": "cpython\\Lib\\test\\test_bz2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 33,
      "line_range": [
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "4 import os\n5 import subprocess\n6 import sys\n",
      "filename": "cpython\\Lib\\test\\test_c_locale_coercion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "422         env = dict(os.environ, PYTHONCOERCECLOCALE='1')\n423         cmd = subprocess.run([sys.executable, '-c', code],\n424                              stdout=subprocess.PIPE,\n425                              env=env,\n426                              text=True)\n427         self.assertEqual(cmd.stdout.rstrip(), loc)\n",
      "filename": "cpython\\Lib\\test\\test_c_locale_coercion.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 423,
      "line_range": [
        423,
        424,
        425,
        426
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "5 import os\n6 import pickle\n7 import random\n",
      "filename": "cpython\\Lib\\test\\test_capi.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "8 import re\n9 import subprocess\n10 import sys\n",
      "filename": "cpython\\Lib\\test\\test_capi.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "61         with support.SuppressCrashReport():\n62             p = subprocess.Popen([sys.executable, \"-c\",\n63                                   'import _testcapi;'\n64                                   '_testcapi.crash_no_current_thread()'],\n65                                  stdout=subprocess.PIPE,\n66                                  stderr=subprocess.PIPE)\n67         (out, err) = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_capi.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 62,
      "line_range": [
        62,
        63,
        64,
        65,
        66
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "556         for i in range(n):\n557             time.sleep(random.random()*0.02) #0.01 secs on average\n558             #try submitting callback until successful.\n",
      "filename": "cpython\\Lib\\test\\test_capi.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 557,
      "line_range": [
        557
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "640             self.assertEqual(ret, 0)\n641             self.assertNotEqual(pickle.load(f), id(sys.modules))\n642             self.assertNotEqual(pickle.load(f), id(builtins))\n",
      "filename": "cpython\\Lib\\test\\test_capi.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 641,
      "line_range": [
        641
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "641             self.assertNotEqual(pickle.load(f), id(sys.modules))\n642             self.assertNotEqual(pickle.load(f), id(builtins))\n643 \n",
      "filename": "cpython\\Lib\\test\\test_capi.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 642,
      "line_range": [
        642
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "662             self.assertEqual(ret, 0)\n663             self.assertEqual(pickle.load(f), {'a': '123x', 'b': '123'})\n664 \n",
      "filename": "cpython\\Lib\\test\\test_capi.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 663,
      "line_range": [
        663
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "130 d = {}\n131 exec(statictests, globals(), d)\n132 for method in testmeths:\n",
      "filename": "cpython\\Lib\\test\\test_class.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 131,
      "line_range": [
        131
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "132 for method in testmeths:\n133     exec(method_template % method, globals(), d)\n134 AllTests = type(\"AllTests\", (object,), d)\n",
      "filename": "cpython\\Lib\\test\\test_class.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 133,
      "line_range": [
        133
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "234         output = writer.f.getvalue()\n235         assert output == input, \"output != input!\\n\\noutput \" + repr(output) + \"\\n\\n input \" + repr(input)\n236 \n",
      "filename": "cpython\\Lib\\test\\test_clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 235,
      "line_range": [
        235
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "777         self.assertEqual(len(s), signatures_in_block)\n778         assert isinstance(s[0], clinic.Module)\n779         assert isinstance(s[function_index], clinic.Function)\n",
      "filename": "cpython\\Lib\\test\\test_clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 778,
      "line_range": [
        778
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "778         assert isinstance(s[0], clinic.Module)\n779         assert isinstance(s[function_index], clinic.Function)\n780         return s[function_index]\n",
      "filename": "cpython\\Lib\\test\\test_clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 779,
      "line_range": [
        779
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5 import os\n6 import subprocess\n7 import sys\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "78             args += ('-c', 'import sys; print(sys._xoptions)')\n79             out = subprocess.check_output(args)\n80             opts = eval(out.splitlines()[0])\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 79,
      "line_range": [
        79
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "79             out = subprocess.check_output(args)\n80             opts = eval(out.splitlines()[0])\n81             return opts\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 80,
      "line_range": [
        80
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "96             PIPE = subprocess.PIPE\n97             p = subprocess.Popen(cmd, stdout=PIPE, stderr=PIPE)\n98             out, err = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 97,
      "line_range": [
        97
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "171                 b'locale.getpreferredencoding())')\n172         p = subprocess.Popen(\n173             [sys.executable, \"-c\", code],\n174             stdout=subprocess.PIPE, stderr=subprocess.STDOUT,\n175             env=env)\n176         stdout, stderr = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 172,
      "line_range": [
        172,
        173,
        174,
        175
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "206 \n207             p = subprocess.Popen(\n208                 (sys.executable, \"-c\", \"import sys; print(ascii(sys.argv[1]))\", text),\n209                 stdout=subprocess.PIPE,\n210                 env=env)\n211             stdout, stderr = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 207,
      "line_range": [
        207,
        208,
        209,
        210
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "236         args = [sys.executable, '-c', code]\n237         proc = subprocess.run(args, stdout=subprocess.PIPE,\n238                               stderr=subprocess.PIPE, text=True, check=True)\n239         self.assertEqual(proc.stdout,\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 237,
      "line_range": [
        237,
        238
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "304             env['PYTHONIOENCODING'] = encoding\n305             p = subprocess.Popen(\n306                 [sys.executable, '-i'],\n307                 stdin=subprocess.PIPE,\n308                 stdout=subprocess.PIPE,\n309                 stderr=subprocess.STDOUT,\n310                 env=env)\n311             # non-ascii, surrogate, non-BMP printable, non-BMP unprintable\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 305,
      "line_range": [
        305,
        306,
        307,
        308,
        309,
        310
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "324             stdin.seek(0)\n325             with subprocess.Popen(\n326                 (sys.executable, \"-c\", code),\n327                 stdin=stdin, stdout=subprocess.PIPE) as proc:\n328                 stdout, stderr = proc.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 325,
      "line_range": [
        325,
        326,
        327
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "407                 os.close(2)\n408         p = subprocess.Popen(\n409             [sys.executable, \"-E\", \"-c\", code],\n410             stdin=subprocess.PIPE,\n411             stdout=subprocess.PIPE,\n412             stderr=subprocess.PIPE,\n413             preexec_fn=preexec)\n414         out, err = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 408,
      "line_range": [
        408,
        409,
        410,
        411,
        412,
        413
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "518                               stderr=subprocess.DEVNULL)\n519             out = subprocess.check_output([sys.executable, \"-I\", main],\n520                                           cwd=tmpdir)\n521             self.assertEqual(out.strip(), b\"ok\")\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 519,
      "line_range": [
        519,
        520
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "581             args = (sys.executable, *args)\n582         proc = subprocess.run(args,\n583                               stdout=subprocess.PIPE,\n584                               stderr=subprocess.STDOUT,\n585                               universal_newlines=True,\n586                               env=env)\n587         if check_exitcode:\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 582,
      "line_range": [
        582,
        583,
        584,
        585,
        586
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "662         env[\"PYTHONWARNINGS\"] = envvar\n663         proc = subprocess.run(args,\n664                               stdout=subprocess.PIPE,\n665                               stderr=subprocess.STDOUT,\n666                               universal_newlines=True,\n667                               env=env)\n668         self.assertEqual(proc.returncode, 0, proc)\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 663,
      "line_range": [
        663,
        664,
        665,
        666,
        667
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "700         args = (sys.executable, '-c', code)\n701         proc = subprocess.run(args,\n702                               stdout=subprocess.PIPE,\n703                               stderr=subprocess.STDOUT,\n704                               universal_newlines=True,\n705                               env=env)\n706         self.assertEqual(proc.stdout.rstrip(), name)\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 701,
      "line_range": [
        701,
        702,
        703,
        704,
        705
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "741 \n742         proc = subprocess.run(args, stdout=subprocess.PIPE,\n743                               universal_newlines=True, env=env)\n744         self.assertEqual(proc.stdout.rstrip(), 'False')\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 742,
      "line_range": [
        742,
        743
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "747         env['PYTHONDEVMODE'] = '1'\n748         proc = subprocess.run(args, stdout=subprocess.PIPE,\n749                               universal_newlines=True, env=env)\n750         self.assertEqual(proc.stdout.rstrip(), 'True')\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 748,
      "line_range": [
        748,
        749
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "759 \n760         proc = subprocess.run(args, stdout=subprocess.PIPE,\n761                               executable=executable)\n762         self.assertEqual(proc.returncode, 0, proc)\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 760,
      "line_range": [
        760,
        761
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "766         args = [sys.executable, '-I', '--unknown-option']\n767         proc = subprocess.run(args,\n768                               stdout=subprocess.PIPE,\n769                               stderr=subprocess.PIPE,\n770                               text=True)\n771         err_msg = \"unknown option --unknown-option\\nusage: \"\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 767,
      "line_range": [
        767,
        768,
        769,
        770
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "11 import py_compile\n12 import subprocess\n13 import io\n",
      "filename": "cpython\\Lib\\test\\test_cmd_line_script.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "186             code = new_code(f.__code__)\n187             assert not f.__closure__\n188             closure = create_closure(cls)\n",
      "filename": "cpython\\Lib\\test\\test_code.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 187,
      "line_range": [
        187
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "324         namespace = {}\n325         exec(\"def f(): pass\", globals(), namespace)\n326         f = namespace[\"f\"]\n",
      "filename": "cpython\\Lib\\test\\test_code.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 325,
      "line_range": [
        325
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "373             # away, so we eval a lambda.\n374             return eval('lambda:42')\n375 \n",
      "filename": "cpython\\Lib\\test\\test_code.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 374,
      "line_range": [
        374
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "33                 try:\n34                     exec(code, d)\n35                     exec(compile(str,\"<input>\",\"single\"), r)\n",
      "filename": "cpython\\Lib\\test\\test_codeop.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 34,
      "line_range": [
        34
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "34                     exec(code, d)\n35                     exec(compile(str,\"<input>\",\"single\"), r)\n36                 finally:\n",
      "filename": "cpython\\Lib\\test\\test_codeop.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 35,
      "line_range": [
        35
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "39                 ctx = {'a': 2}\n40                 d = { 'value': eval(code,ctx) }\n41                 r = { 'value': eval(str,ctx) }\n",
      "filename": "cpython\\Lib\\test\\test_codeop.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 40,
      "line_range": [
        40
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "40                 d = { 'value': eval(code,ctx) }\n41                 r = { 'value': eval(str,ctx) }\n42             self.assertEqual(unify_callables(r),unify_callables(d))\n",
      "filename": "cpython\\Lib\\test\\test_codeop.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "7 import operator\n8 import pickle\n9 from random import choice, randrange\n",
      "filename": "cpython\\Lib\\test\\test_collections.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "118         for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n119             e = pickle.loads(pickle.dumps(d, proto))\n120             self.assertEqual(d, e)\n",
      "filename": "cpython\\Lib\\test\\test_collections.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 119,
      "line_range": [
        119
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "125         for e in [copy.deepcopy(d),\n126                   eval(repr(d))\n127                 ]:\n",
      "filename": "cpython\\Lib\\test\\test_collections.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 126,
      "line_range": [
        126
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "520         n = 5000\n521         names = list(set(''.join([choice(string.ascii_letters)\n522                                   for j in range(10)]) for i in range(n)))\n",
      "filename": "cpython\\Lib\\test\\test_collections.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 521,
      "line_range": [
        521
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "659         class NewPoint(tuple):\n660             x = pickle.loads(pickle.dumps(Point.x))\n661             y = pickle.loads(pickle.dumps(Point.y))\n",
      "filename": "cpython\\Lib\\test\\test_collections.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 660,
      "line_range": [
        660
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "660             x = pickle.loads(pickle.dumps(Point.x))\n661             y = pickle.loads(pickle.dumps(Point.y))\n662 \n",
      "filename": "cpython\\Lib\\test\\test_collections.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 661,
      "line_range": [
        661
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2056             with self.subTest(proto=proto):\n2057                 check(pickle.loads(pickle.dumps(words, proto)))\n2058         check(eval(repr(words)))\n",
      "filename": "cpython\\Lib\\test\\test_collections.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 2057,
      "line_range": [
        2057
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2057                 check(pickle.loads(pickle.dumps(words, proto)))\n2058         check(eval(repr(words)))\n2059         update_test = Counter()\n",
      "filename": "cpython\\Lib\\test\\test_collections.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 2058,
      "line_range": [
        2058
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "2094             # test random pairs of multisets\n2095             p = Counter(dict((elem, randrange(-2,4)) for elem in elements))\n2096             p.update(e=1, f=-1, g=0)\n",
      "filename": "cpython\\Lib\\test\\test_collections.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2095,
      "line_range": [
        2095
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2096             p.update(e=1, f=-1, g=0)\n2097             q = Counter(dict((elem, randrange(-2,4)) for elem in elements))\n2098             q.update(h=1, i=-1, j=0)\n",
      "filename": "cpython\\Lib\\test\\test_collections.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2097,
      "line_range": [
        2097
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2114             # verify that random multisets with no repeats are exactly like sets\n2115             p = Counter(dict((elem, randrange(0, 2)) for elem in elements))\n2116             q = Counter(dict((elem, randrange(0, 2)) for elem in elements))\n",
      "filename": "cpython\\Lib\\test\\test_collections.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2115,
      "line_range": [
        2115
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2115             p = Counter(dict((elem, randrange(0, 2)) for elem in elements))\n2116             q = Counter(dict((elem, randrange(0, 2)) for elem in elements))\n2117             for counterop, setop in [\n",
      "filename": "cpython\\Lib\\test\\test_collections.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2116,
      "line_range": [
        2116
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2129             # test random pairs of multisets\n2130             p = Counter(dict((elem, randrange(-2,4)) for elem in elements))\n2131             p.update(e=1, f=-1, g=0)\n",
      "filename": "cpython\\Lib\\test\\test_collections.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2130,
      "line_range": [
        2130
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2131             p.update(e=1, f=-1, g=0)\n2132             q = Counter(dict((elem, randrange(-2,4)) for elem in elements))\n2133             q.update(h=1, i=-1, j=0)\n",
      "filename": "cpython\\Lib\\test\\test_collections.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2132,
      "line_range": [
        2132
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "76         g = globals()\n77         exec('z = a', g, m)\n78         self.assertEqual(m.results, ('z', 12))\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 77,
      "line_range": [
        77
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "79         try:\n80             exec('z = b', g, m)\n81         except NameError:\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 80,
      "line_range": [
        80
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "84             self.fail('Did not detect a KeyError')\n85         exec('z = dir()', g, m)\n86         self.assertEqual(m.results, ('z', list('xyz')))\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 85,
      "line_range": [
        85
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "86         self.assertEqual(m.results, ('z', list('xyz')))\n87         exec('z = globals()', g, m)\n88         self.assertEqual(m.results, ('z', g))\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 87,
      "line_range": [
        87
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "88         self.assertEqual(m.results, ('z', g))\n89         exec('z = locals()', g, m)\n90         self.assertEqual(m.results, ('z', m))\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 89,
      "line_range": [
        89
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "105         d = D()\n106         exec('z = a', g, d)\n107         self.assertEqual(d['z'], 12)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 106,
      "line_range": [
        106
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "129 ''' % ((longexpr,)*10)\n130         exec(code, g)\n131         self.assertEqual(g['f'](5), 0)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 130,
      "line_range": [
        130
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "168 \n169         self.assertEqual(eval(\"0xff\"), 255)\n170         self.assertEqual(eval(\"0777.\"), 777)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 169,
      "line_range": [
        169
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "169         self.assertEqual(eval(\"0xff\"), 255)\n170         self.assertEqual(eval(\"0777.\"), 777)\n171         self.assertEqual(eval(\"0777.0\"), 777)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 170,
      "line_range": [
        170
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "170         self.assertEqual(eval(\"0777.\"), 777)\n171         self.assertEqual(eval(\"0777.0\"), 777)\n172         self.assertEqual(eval(\"000000000000000000000000000000000000000000000000000777e0\"), 777)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 171,
      "line_range": [
        171
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "171         self.assertEqual(eval(\"0777.0\"), 777)\n172         self.assertEqual(eval(\"000000000000000000000000000000000000000000000000000777e0\"), 777)\n173         self.assertEqual(eval(\"0777e1\"), 7770)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 172,
      "line_range": [
        172
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "172         self.assertEqual(eval(\"000000000000000000000000000000000000000000000000000777e0\"), 777)\n173         self.assertEqual(eval(\"0777e1\"), 7770)\n174         self.assertEqual(eval(\"0e0\"), 0)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 173,
      "line_range": [
        173
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "173         self.assertEqual(eval(\"0777e1\"), 7770)\n174         self.assertEqual(eval(\"0e0\"), 0)\n175         self.assertEqual(eval(\"0000e-012\"), 0)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 174,
      "line_range": [
        174
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "174         self.assertEqual(eval(\"0e0\"), 0)\n175         self.assertEqual(eval(\"0000e-012\"), 0)\n176         self.assertEqual(eval(\"09.5\"), 9.5)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 175,
      "line_range": [
        175
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "175         self.assertEqual(eval(\"0000e-012\"), 0)\n176         self.assertEqual(eval(\"09.5\"), 9.5)\n177         self.assertEqual(eval(\"0777j\"), 777j)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 176,
      "line_range": [
        176
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "176         self.assertEqual(eval(\"09.5\"), 9.5)\n177         self.assertEqual(eval(\"0777j\"), 777j)\n178         self.assertEqual(eval(\"000\"), 0)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 177,
      "line_range": [
        177
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "177         self.assertEqual(eval(\"0777j\"), 777j)\n178         self.assertEqual(eval(\"000\"), 0)\n179         self.assertEqual(eval(\"00j\"), 0j)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 178,
      "line_range": [
        178
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "178         self.assertEqual(eval(\"000\"), 0)\n179         self.assertEqual(eval(\"00j\"), 0j)\n180         self.assertEqual(eval(\"00.0\"), 0)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 179,
      "line_range": [
        179
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "179         self.assertEqual(eval(\"00j\"), 0j)\n180         self.assertEqual(eval(\"00.0\"), 0)\n181         self.assertEqual(eval(\"0e3\"), 0)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 180,
      "line_range": [
        180
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "180         self.assertEqual(eval(\"00.0\"), 0)\n181         self.assertEqual(eval(\"0e3\"), 0)\n182         self.assertEqual(eval(\"090000000000000.\"), 90000000000000.)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 181,
      "line_range": [
        181
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "181         self.assertEqual(eval(\"0e3\"), 0)\n182         self.assertEqual(eval(\"090000000000000.\"), 90000000000000.)\n183         self.assertEqual(eval(\"090000000000000.0000000000000000000000\"), 90000000000000.)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 182,
      "line_range": [
        182
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "182         self.assertEqual(eval(\"090000000000000.\"), 90000000000000.)\n183         self.assertEqual(eval(\"090000000000000.0000000000000000000000\"), 90000000000000.)\n184         self.assertEqual(eval(\"090000000000000e0\"), 90000000000000.)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 183,
      "line_range": [
        183
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "183         self.assertEqual(eval(\"090000000000000.0000000000000000000000\"), 90000000000000.)\n184         self.assertEqual(eval(\"090000000000000e0\"), 90000000000000.)\n185         self.assertEqual(eval(\"090000000000000e-0\"), 90000000000000.)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 184,
      "line_range": [
        184
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "184         self.assertEqual(eval(\"090000000000000e0\"), 90000000000000.)\n185         self.assertEqual(eval(\"090000000000000e-0\"), 90000000000000.)\n186         self.assertEqual(eval(\"090000000000000j\"), 90000000000000j)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 185,
      "line_range": [
        185
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "185         self.assertEqual(eval(\"090000000000000e-0\"), 90000000000000.)\n186         self.assertEqual(eval(\"090000000000000j\"), 90000000000000j)\n187         self.assertEqual(eval(\"000000000000008.\"), 8.)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 186,
      "line_range": [
        186
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "186         self.assertEqual(eval(\"090000000000000j\"), 90000000000000j)\n187         self.assertEqual(eval(\"000000000000008.\"), 8.)\n188         self.assertEqual(eval(\"000000000000009.\"), 9.)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 187,
      "line_range": [
        187
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "187         self.assertEqual(eval(\"000000000000008.\"), 8.)\n188         self.assertEqual(eval(\"000000000000009.\"), 9.)\n189         self.assertEqual(eval(\"0b101010\"), 42)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 188,
      "line_range": [
        188
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "188         self.assertEqual(eval(\"000000000000009.\"), 9.)\n189         self.assertEqual(eval(\"0b101010\"), 42)\n190         self.assertEqual(eval(\"-0b000000000010\"), -2)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 189,
      "line_range": [
        189
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "189         self.assertEqual(eval(\"0b101010\"), 42)\n190         self.assertEqual(eval(\"-0b000000000010\"), -2)\n191         self.assertEqual(eval(\"0o777\"), 511)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 190,
      "line_range": [
        190
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "190         self.assertEqual(eval(\"-0b000000000010\"), -2)\n191         self.assertEqual(eval(\"0o777\"), 511)\n192         self.assertEqual(eval(\"-0o0000010\"), -8)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 191,
      "line_range": [
        191
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "191         self.assertEqual(eval(\"0o777\"), 511)\n192         self.assertEqual(eval(\"-0o0000010\"), -8)\n193 \n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 192,
      "line_range": [
        192
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "198             all_one_bits = '0xffffffff'\n199             self.assertEqual(eval(all_one_bits), 4294967295)\n200             self.assertEqual(eval(\"-\" + all_one_bits), -4294967295)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 199,
      "line_range": [
        199
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "199             self.assertEqual(eval(all_one_bits), 4294967295)\n200             self.assertEqual(eval(\"-\" + all_one_bits), -4294967295)\n201         elif sys.maxsize == 9223372036854775807:\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 200,
      "line_range": [
        200
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "203             all_one_bits = '0xffffffffffffffff'\n204             self.assertEqual(eval(all_one_bits), 18446744073709551615)\n205             self.assertEqual(eval(\"-\" + all_one_bits), -18446744073709551615)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 204,
      "line_range": [
        204
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "204             self.assertEqual(eval(all_one_bits), 18446744073709551615)\n205             self.assertEqual(eval(\"-\" + all_one_bits), -18446744073709551615)\n206         else:\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 205,
      "line_range": [
        205
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "209         # i.e. -2147483648 on 32 bit platforms.  Should return int.\n210         self.assertIsInstance(eval(\"%s\" % (-sys.maxsize - 1)), int)\n211         self.assertIsInstance(eval(\"%s\" % (-sys.maxsize - 2)), int)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 210,
      "line_range": [
        210
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "210         self.assertIsInstance(eval(\"%s\" % (-sys.maxsize - 1)), int)\n211         self.assertIsInstance(eval(\"%s\" % (-sys.maxsize - 2)), int)\n212 \n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 211,
      "line_range": [
        211
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "318         compile(code, 'tmp', 'exec')\n319         self.assertEqual(eval(code), '\\xc2\\xa4')\n320         code = '\"\\xc2\\xa4\"\\n'\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 319,
      "line_range": [
        319
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "320         code = '\"\\xc2\\xa4\"\\n'\n321         self.assertEqual(eval(code), '\\xc2\\xa4')\n322         code = b'\"\\xc2\\xa4\"\\n'\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 321,
      "line_range": [
        321
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "322         code = b'\"\\xc2\\xa4\"\\n'\n323         self.assertEqual(eval(code), '\\xa4')\n324         code = b'# -*- coding: latin1 -*-\\n\"\\xc2\\xa4\"\\n'\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 323,
      "line_range": [
        323
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "324         code = b'# -*- coding: latin1 -*-\\n\"\\xc2\\xa4\"\\n'\n325         self.assertEqual(eval(code), '\\xc2\\xa4')\n326         code = b'# -*- coding: utf-8 -*-\\n\"\\xc2\\xa4\"\\n'\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 325,
      "line_range": [
        325
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "326         code = b'# -*- coding: utf-8 -*-\\n\"\\xc2\\xa4\"\\n'\n327         self.assertEqual(eval(code), '\\xa4')\n328         code = b'# -*- coding: iso8859-15 -*-\\n\"\\xc2\\xa4\"\\n'\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 327,
      "line_range": [
        327
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "328         code = b'# -*- coding: iso8859-15 -*-\\n\"\\xc2\\xa4\"\\n'\n329         self.assertEqual(eval(code), '\\xc2\\u20ac')\n330         code = '\"\"\"\\\\\\n# -*- coding: iso8859-15 -*-\\n\\xc2\\xa4\"\"\"\\n'\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 329,
      "line_range": [
        329
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "330         code = '\"\"\"\\\\\\n# -*- coding: iso8859-15 -*-\\n\\xc2\\xa4\"\"\"\\n'\n331         self.assertEqual(eval(code), '# -*- coding: iso8859-15 -*-\\n\\xc2\\xa4')\n332         code = b'\"\"\"\\\\\\n# -*- coding: iso8859-15 -*-\\n\\xc2\\xa4\"\"\"\\n'\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 331,
      "line_range": [
        331
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "332         code = b'\"\"\"\\\\\\n# -*- coding: iso8859-15 -*-\\n\\xc2\\xa4\"\"\"\\n'\n333         self.assertEqual(eval(code), '# -*- coding: iso8859-15 -*-\\n\\xa4')\n334 \n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 333,
      "line_range": [
        333
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "569         code = compile(memoryview(b\"123\\x00\")[1:-1], \"<dummy>\", \"eval\")\n570         self.assertEqual(eval(code), 23)\n571         code = compile(memoryview(b\"1234\")[1:-1], \"<dummy>\", \"eval\")\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 570,
      "line_range": [
        570
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "571         code = compile(memoryview(b\"1234\")[1:-1], \"<dummy>\", \"eval\")\n572         self.assertEqual(eval(code), 23)\n573         code = compile(memoryview(b\"$23$\")[1:-1], \"<dummy>\", \"eval\")\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 572,
      "line_range": [
        572
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "573         code = compile(memoryview(b\"$23$\")[1:-1], \"<dummy>\", \"eval\")\n574         self.assertEqual(eval(code), 23)\n575 \n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 574,
      "line_range": [
        574
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "576         # Also test when eval() and exec() do the compilation step\n577         self.assertEqual(eval(memoryview(b\"1234\")[1:-1]), 23)\n578         namespace = dict()\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 577,
      "line_range": [
        577
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "578         namespace = dict()\n579         exec(memoryview(b\"ax = 123\")[1:-1], namespace)\n580         self.assertEqual(namespace['x'], 12)\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 579,
      "line_range": [
        579
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "599             code = \"f1, f2 = lambda: %r, lambda: %r\" % (const, const)\n600             exec(code, ns)\n601             f1 = ns['f1']\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 600,
      "line_range": [
        600
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "658             ns = {}\n659             exec(\"f1, f2 = lambda: %r, lambda: %r\" % (const1, const2), ns)\n660             f1 = ns['f1']\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 659,
      "line_range": [
        659
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "762         the_dict = \"{\" + \",\".join(f\"{x}:{x}\" for x in range(dict_size)) + \"}\"\n763         self.assertEqual(len(eval(the_dict)), dict_size)\n764 \n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 763,
      "line_range": [
        763
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "813             code = compile(script, \"<script>\", \"exec\")\n814             exec(code, ns, ns)\n815             return ns['func'].__code__\n",
      "filename": "cpython\\Lib\\test\\test_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 814,
      "line_range": [
        814
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "111                 os.unlink(fn)\n112             except:\n113                 pass\n",
      "filename": "cpython\\Lib\\test\\test_compileall.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 112,
      "line_range": [
        112
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "356                     os.unlink(bc[opt_level])\n357                 except Exception:\n358                     pass\n",
      "filename": "cpython\\Lib\\test\\test_compileall.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 357,
      "line_range": [
        357
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "823                     os.unlink(bc[opt_level])\n824                 except Exception:\n825                     pass\n",
      "filename": "cpython\\Lib\\test\\test_compileall.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 824,
      "line_range": [
        824
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "106         for i in range(100):\n107             self.check_div(complex(random(), random()),\n108                            complex(random(), random()))\n",
      "filename": "cpython\\Lib\\test\\test_complex.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 107,
      "line_range": [
        107
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "106         for i in range(100):\n107             self.check_div(complex(random(), random()),\n108                            complex(random(), random()))\n",
      "filename": "cpython\\Lib\\test\\test_complex.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 107,
      "line_range": [
        107
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "107             self.check_div(complex(random(), random()),\n108                            complex(random(), random()))\n109 \n",
      "filename": "cpython\\Lib\\test\\test_complex.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 108,
      "line_range": [
        108
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "107             self.check_div(complex(random(), random()),\n108                            complex(random(), random()))\n109 \n",
      "filename": "cpython\\Lib\\test\\test_complex.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 108,
      "line_range": [
        108
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "252         for i in range(100):\n253             self.assertTrue(complex(random() + 1e-6, random() + 1e-6))\n254         self.assertTrue(not complex(0.0, 0.0))\n",
      "filename": "cpython\\Lib\\test\\test_complex.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 253,
      "line_range": [
        253
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "252         for i in range(100):\n253             self.assertTrue(complex(random() + 1e-6, random() + 1e-6))\n254         self.assertTrue(not complex(0.0, 0.0))\n",
      "filename": "cpython\\Lib\\test\\test_complex.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 253,
      "line_range": [
        253
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "479             if not any(ch in lit for ch in 'xXoObB'):\n480                 self.assertEqual(complex(lit), eval(lit))\n481                 self.assertEqual(complex(lit), complex(lit.replace('_', '')))\n",
      "filename": "cpython\\Lib\\test\\test_complex.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 480,
      "line_range": [
        480
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "602                 z = complex(x, y)\n603                 roundtrip = eval(repr(z))\n604                 # adding 0.0 has no effect beside changing -0.0 to 0.0\n",
      "filename": "cpython\\Lib\\test\\test_complex.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 603,
      "line_range": [
        603
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "23 import weakref\n24 from pickle import PicklingError\n25 \n26 from concurrent import futures\n",
      "filename": "cpython\\Lib\\test\\test_concurrent_futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with PicklingError module.",
      "line_number": 24,
      "line_range": [
        24,
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "429         # executor got shutdown.\n430         assert all([r == abs(v) for r, v in zip(res, range(-5, 5))])\n431 \n",
      "filename": "cpython\\Lib\\test\\test_concurrent_futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 430,
      "line_range": [
        430
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "443         # executor got shutdown.\n444         assert all([r == abs(v) for r, v in zip(res, range(-5, 5))])\n445 \n",
      "filename": "cpython\\Lib\\test\\test_concurrent_futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 444,
      "line_range": [
        444
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "534         # executor got shutdown.\n535         assert all([r == abs(v) for r, v in zip(res, range(-5, 5))])\n536 \n",
      "filename": "cpython\\Lib\\test\\test_concurrent_futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 535,
      "line_range": [
        535
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "555         # shutdown.\n556         assert all([r == abs(v) for r, v in zip(res, range(-5, 5))])\n557 \n",
      "filename": "cpython\\Lib\\test\\test_concurrent_futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 556,
      "line_range": [
        556
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1070     def __reduce__(self):\n1071         from pickle import PicklingError\n1072         raise PicklingError(\"Error in pickle\")\n",
      "filename": "cpython\\Lib\\test\\test_concurrent_futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with PicklingError module.",
      "line_number": 1071,
      "line_range": [
        1071
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1077     def __reduce__(self):\n1078         from pickle import UnpicklingError\n1079         return _raise_error_ignore_stderr, (UnpicklingError, )\n",
      "filename": "cpython\\Lib\\test\\test_concurrent_futures.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with UnpicklingError module.",
      "line_number": 1078,
      "line_range": [
        1078
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1694     def test_error(self):\n1695         import pickle\n1696         e1 = configparser.Error('value')\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 1695,
      "line_range": [
        1695
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1698             pickled = pickle.dumps(e1, proto)\n1699             e2 = pickle.loads(pickled)\n1700             self.assertEqual(e1.message, e2.message)\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1699,
      "line_range": [
        1699
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1703     def test_nosectionerror(self):\n1704         import pickle\n1705         e1 = configparser.NoSectionError('section')\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 1704,
      "line_range": [
        1704
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1707             pickled = pickle.dumps(e1, proto)\n1708             e2 = pickle.loads(pickled)\n1709             self.assertEqual(e1.message, e2.message)\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1708,
      "line_range": [
        1708
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1714     def test_nooptionerror(self):\n1715         import pickle\n1716         e1 = configparser.NoOptionError('option', 'section')\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 1715,
      "line_range": [
        1715
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1718             pickled = pickle.dumps(e1, proto)\n1719             e2 = pickle.loads(pickled)\n1720             self.assertEqual(e1.message, e2.message)\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1719,
      "line_range": [
        1719
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1726     def test_duplicatesectionerror(self):\n1727         import pickle\n1728         e1 = configparser.DuplicateSectionError('section', 'source', 123)\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 1727,
      "line_range": [
        1727
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1730             pickled = pickle.dumps(e1, proto)\n1731             e2 = pickle.loads(pickled)\n1732             self.assertEqual(e1.message, e2.message)\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1731,
      "line_range": [
        1731
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1739     def test_duplicateoptionerror(self):\n1740         import pickle\n1741         e1 = configparser.DuplicateOptionError('section', 'option', 'source',\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 1740,
      "line_range": [
        1740
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1744             pickled = pickle.dumps(e1, proto)\n1745             e2 = pickle.loads(pickled)\n1746             self.assertEqual(e1.message, e2.message)\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1745,
      "line_range": [
        1745
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1754     def test_interpolationerror(self):\n1755         import pickle\n1756         e1 = configparser.InterpolationError('option', 'section', 'msg')\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 1755,
      "line_range": [
        1755
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1758             pickled = pickle.dumps(e1, proto)\n1759             e2 = pickle.loads(pickled)\n1760             self.assertEqual(e1.message, e2.message)\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1759,
      "line_range": [
        1759
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1766     def test_interpolationmissingoptionerror(self):\n1767         import pickle\n1768         e1 = configparser.InterpolationMissingOptionError('option', 'section',\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 1767,
      "line_range": [
        1767
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1771             pickled = pickle.dumps(e1, proto)\n1772             e2 = pickle.loads(pickled)\n1773             self.assertEqual(e1.message, e2.message)\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1772,
      "line_range": [
        1772
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1780     def test_interpolationsyntaxerror(self):\n1781         import pickle\n1782         e1 = configparser.InterpolationSyntaxError('option', 'section', 'msg')\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 1781,
      "line_range": [
        1781
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1784             pickled = pickle.dumps(e1, proto)\n1785             e2 = pickle.loads(pickled)\n1786             self.assertEqual(e1.message, e2.message)\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1785,
      "line_range": [
        1785
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1792     def test_interpolationdeptherror(self):\n1793         import pickle\n1794         e1 = configparser.InterpolationDepthError('option', 'section',\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 1793,
      "line_range": [
        1793
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1797             pickled = pickle.dumps(e1, proto)\n1798             e2 = pickle.loads(pickled)\n1799             self.assertEqual(e1.message, e2.message)\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1798,
      "line_range": [
        1798
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1805     def test_parsingerror(self):\n1806         import pickle\n1807         e1 = configparser.ParsingError('source')\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 1806,
      "line_range": [
        1806
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1812             pickled = pickle.dumps(e1, proto)\n1813             e2 = pickle.loads(pickled)\n1814             self.assertEqual(e1.message, e2.message)\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1813,
      "line_range": [
        1813
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1824             pickled = pickle.dumps(e1, proto)\n1825             e2 = pickle.loads(pickled)\n1826             self.assertEqual(e1.message, e2.message)\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1825,
      "line_range": [
        1825
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1832     def test_missingsectionheadererror(self):\n1833         import pickle\n1834         e1 = configparser.MissingSectionHeaderError('filename', 123, 'line')\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 1833,
      "line_range": [
        1833
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1836             pickled = pickle.dumps(e1, proto)\n1837             e2 = pickle.loads(pickled)\n1838             self.assertEqual(e1.message, e2.message)\n",
      "filename": "cpython\\Lib\\test\\test_configparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1837,
      "line_range": [
        1837
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "349                 cvar.set(num + i)\n350                 time.sleep(random.uniform(0.001, 0.05))\n351                 self.assertEqual(cvar.get(), num + i)\n",
      "filename": "cpython\\Lib\\test\\test_context.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 350,
      "line_range": [
        350
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "368     def __init__(self, hash, name, *, error_on_eq_to=None):\n369         assert hash != -1\n370         self.name = name\n",
      "filename": "cpython\\Lib\\test\\test_context.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 369,
      "line_range": [
        369
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "151         locals = {}\n152         exec(code, locals, locals)\n153         woohoo = locals['woohoo']\n",
      "filename": "cpython\\Lib\\test\\test_contextlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 152,
      "line_range": [
        152
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "315     def testWithOpen(self):\n316         tfn = tempfile.mktemp()\n317         try:\n",
      "filename": "cpython\\Lib\\test\\test_contextlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 316,
      "line_range": [
        316
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "3 import inspect\n4 import pickle\n5 import sys\n",
      "filename": "cpython\\Lib\\test\\test_coroutines.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "31 def run_async(coro):\n32     assert coro.__class__ in {types.GeneratorType, types.CoroutineType}\n33 \n34     buffer = []\n",
      "filename": "cpython\\Lib\\test\\test_coroutines.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 32,
      "line_range": [
        32,
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "45 def run_async__await__(coro):\n46     assert coro.__class__ is types.CoroutineType\n47     aw = coro.__await__()\n",
      "filename": "cpython\\Lib\\test\\test_coroutines.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 46,
      "line_range": [
        46
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "482         ns = {}\n483         exec(buf, ns, ns)\n484         self.assertEqual(ns['i499'](), 499)\n",
      "filename": "cpython\\Lib\\test\\test_coroutines.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 483,
      "line_range": [
        483
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "489         ns = {}\n490         exec(buf, ns, ns)\n491         self.assertEqual(ns['i499'](), 499)\n",
      "filename": "cpython\\Lib\\test\\test_coroutines.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 490,
      "line_range": [
        490
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1091             def __init__(self, coro):\n1092                 assert coro.__class__ is types.CoroutineType\n1093                 self.coro = coro\n",
      "filename": "cpython\\Lib\\test\\test_coroutines.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1092,
      "line_range": [
        1092
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1249             async with CM():\n1250                 assert (1, ) == 1\n1251 \n",
      "filename": "cpython\\Lib\\test\\test_coroutines.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1250,
      "line_range": [
        1250
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "10 import gc\n11 import pickle\n12 from test import support\n",
      "filename": "cpython\\Lib\\test\\test_csv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "7 import abc\n8 import pickle\n9 import inspect\n",
      "filename": "cpython\\Lib\\test\\test_dataclasses.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "444                     else:\n445                         assert False, f'unknown result {result!r}'\n446 \n",
      "filename": "cpython\\Lib\\test\\test_dataclasses.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 445,
      "line_range": [
        445
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "526                 else:\n527                     assert False, f'unknown result {result!r}'\n528 \n",
      "filename": "cpython\\Lib\\test\\test_dataclasses.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 527,
      "line_range": [
        527
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1929                 with self.subTest(sample=sample, proto=proto):\n1930                     new_sample = pickle.loads(pickle.dumps(sample, proto))\n1931                     self.assertEqual(sample.x, new_sample.x)\n",
      "filename": "cpython\\Lib\\test\\test_dataclasses.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1930,
      "line_range": [
        1930
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1934                     new_sample.x = 42\n1935                     another_new_sample = pickle.loads(pickle.dumps(new_sample, proto))\n1936                     self.assertEqual(new_sample.x, another_new_sample.x)\n",
      "filename": "cpython\\Lib\\test\\test_dataclasses.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1935,
      "line_range": [
        1935
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2397                     #  This only happens with with_hash==True.\n2398                     assert(with_hash)\n2399                     with self.assertRaisesRegex(TypeError, 'Cannot overwrite attribute __hash__'):\n",
      "filename": "cpython\\Lib\\test\\test_dataclasses.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2398,
      "line_range": [
        2398
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2405                 else:\n2406                     assert False, f'unknown result {result!r}'\n2407 \n",
      "filename": "cpython\\Lib\\test\\test_dataclasses.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2406,
      "line_range": [
        2406
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2564                 else:\n2565                     assert False, f'unknown value for expected={expected!r}'\n2566 \n",
      "filename": "cpython\\Lib\\test\\test_dataclasses.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2565,
      "line_range": [
        2565
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "128         self.assertIn(key, f)\n129         assert(f[key] == b\"Python:\")\n130         f.close()\n",
      "filename": "cpython\\Lib\\test\\test_dbm.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 129,
      "line_range": [
        129
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "177                 for dummy in range(100):\n178                     k = random.choice('abcdefghijklm')\n179                     if random.random() < 0.2:\n",
      "filename": "cpython\\Lib\\test\\test_dbm_dumb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 178,
      "line_range": [
        178
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "178                     k = random.choice('abcdefghijklm')\n179                     if random.random() < 0.2:\n180                         if k in d:\n",
      "filename": "cpython\\Lib\\test\\test_dbm_dumb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 179,
      "line_range": [
        179
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "183                     else:\n184                         v = random.choice((b'a', b'b', b'c')) * random.randrange(10000)\n185                         d[k] = v\n",
      "filename": "cpython\\Lib\\test\\test_dbm_dumb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 184,
      "line_range": [
        184
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "183                     else:\n184                         v = random.choice((b'a', b'b', b'c')) * random.randrange(10000)\n185                         d[k] = v\n",
      "filename": "cpython\\Lib\\test\\test_dbm_dumb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 184,
      "line_range": [
        184
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "30 import warnings\n31 import pickle, copy\n32 import unittest\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 31,
      "line_range": [
        31
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "342 \n343         if not TEST_ALL and random.random() < 0.90:\n344             return\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 343,
      "line_range": [
        343
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "450             if fname in self.LogicalFunctions:\n451                 result = str(int(eval(result))) # 'True', 'False' -> '1', '0'\n452         except Signals[self.decimal] as error:\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 451,
      "line_range": [
        451
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "714         for i in range(200):\n715             x = random.expovariate(0.01) * (random.random() * 2.0 - 1.0)\n716             self.assertEqual(x, float(Decimal(x))) # roundtrip\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 715,
      "line_range": [
        715
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "827         for i in range(200):\n828             x = random.expovariate(0.01) * (random.random() * 2.0 - 1.0)\n829             self.assertEqual(x, float(nc.create_decimal(x))) # roundtrip\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 828,
      "line_range": [
        828
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "897         self.assertEqual(divmod(Decimal(10), E()), '10 rdivmod')\n898         self.assertEqual(eval('Decimal(10) < E()'), 'gt 10')\n899         self.assertEqual(eval('Decimal(10) > E()'), 'lt 10')\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 898,
      "line_range": [
        898
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "898         self.assertEqual(eval('Decimal(10) < E()'), 'gt 10')\n899         self.assertEqual(eval('Decimal(10) > E()'), 'lt 10')\n900         self.assertEqual(eval('Decimal(10) <= E()'), 'ge 10')\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 899,
      "line_range": [
        899
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "899         self.assertEqual(eval('Decimal(10) > E()'), 'lt 10')\n900         self.assertEqual(eval('Decimal(10) <= E()'), 'ge 10')\n901         self.assertEqual(eval('Decimal(10) >= E()'), 'le 10')\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 900,
      "line_range": [
        900
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "900         self.assertEqual(eval('Decimal(10) <= E()'), 'ge 10')\n901         self.assertEqual(eval('Decimal(10) >= E()'), 'le 10')\n902         self.assertEqual(eval('Decimal(10) == E()'), 'eq 10')\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 901,
      "line_range": [
        901
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "901         self.assertEqual(eval('Decimal(10) >= E()'), 'le 10')\n902         self.assertEqual(eval('Decimal(10) == E()'), 'eq 10')\n903         self.assertEqual(eval('Decimal(10) != E()'), 'ne 10')\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 902,
      "line_range": [
        902
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "902         self.assertEqual(eval('Decimal(10) == E()'), 'eq 10')\n903         self.assertEqual(eval('Decimal(10) != E()'), 'ne 10')\n904 \n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 903,
      "line_range": [
        903
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "918             setattr(E, rop, lambda self, other: str(other) + rop + 'str')\n919             self.assertEqual(eval('E()' + sym + 'Decimal(10)'),\n920                              'str' + lop + '10')\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 919,
      "line_range": [
        919
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "920                              'str' + lop + '10')\n921             self.assertEqual(eval('Decimal(10)' + sym + 'E()'),\n922                              '10' + rop + 'str')\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 921,
      "line_range": [
        921
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "2019         d = Decimal( (0, (0,), 0) )\n2020         self.assertEqual(d, eval(repr(d)))\n2021 \n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 2020,
      "line_range": [
        2020
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "2023         d = Decimal( (1, (4, 5), 0) )\n2024         self.assertEqual(d, eval(repr(d)))\n2025 \n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 2024,
      "line_range": [
        2024
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "2027         d = Decimal( (0, (4, 5, 3, 4), -2) )\n2028         self.assertEqual(d, eval(repr(d)))\n2029 \n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 2028,
      "line_range": [
        2028
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "2031         d = Decimal( (1, (4, 3, 4, 9, 1, 3, 5, 3, 4), -25) )\n2032         self.assertEqual(d, eval(repr(d)))\n2033 \n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 2032,
      "line_range": [
        2032
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "2480             p = pickle.dumps(d, proto)\n2481             e = pickle.loads(p)\n2482             self.assertEqual(d, e)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 2481,
      "line_range": [
        2481
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2491                 sys.modules['decimal'] = P\n2492                 r = pickle.loads(sx)\n2493                 self.assertIsInstance(r, P.Decimal)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 2492,
      "line_range": [
        2492
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2498                 sys.modules['decimal'] = C\n2499                 r = pickle.loads(sy)\n2500                 self.assertIsInstance(r, C.Decimal)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 2499,
      "line_range": [
        2499
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2508                 sys.modules['decimal'] = P\n2509                 r = pickle.loads(sx)\n2510                 self.assertIsInstance(r, P.DecimalTuple)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 2509,
      "line_range": [
        2509
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2515                 sys.modules['decimal'] = C\n2516                 r = pickle.loads(sy)\n2517                 self.assertIsInstance(r, C.DecimalTuple)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 2516,
      "line_range": [
        2516
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2579         for i in range(200):\n2580             x = random.expovariate(0.01) * (random.random() * 2.0 - 1.0)\n2581             self.assertEqual(x, float(MyDecimal.from_float(x))) # roundtrip\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2580,
      "line_range": [
        2580
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2856             c = Context()\n2857             e = pickle.loads(pickle.dumps(c, proto))\n2858 \n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 2857,
      "line_range": [
        2857
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2874 \n2875                             prec = random.randrange(1, 100)\n2876                             emin = random.randrange(-100, 0)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2875,
      "line_range": [
        2875
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2875                             prec = random.randrange(1, 100)\n2876                             emin = random.randrange(-100, 0)\n2877                             emax = random.randrange(1, 100)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2876,
      "line_range": [
        2876
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2876                             emin = random.randrange(-100, 0)\n2877                             emax = random.randrange(1, 100)\n2878                             caps = random.randrange(2)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2877,
      "line_range": [
        2877
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2877                             emax = random.randrange(1, 100)\n2878                             caps = random.randrange(2)\n2879                             clamp = random.randrange(2)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2878,
      "line_range": [
        2878
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2878                             caps = random.randrange(2)\n2879                             clamp = random.randrange(2)\n2880 \n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2879,
      "line_range": [
        2879
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2893                             sys.modules['decimal'] = loader\n2894                             d = pickle.loads(s)\n2895                             self.assertIsInstance(d, loader.Context)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 2894,
      "line_range": [
        2894
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "4590             if useOther:\n4591                 eval(\"d1.\" + operation + \"(d2)\")\n4592                 self.assertEqual(d1._sign, b1._sign)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 4591,
      "line_range": [
        4591
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "4598             else:\n4599                 eval(\"d1.\" + operation + \"()\")\n4600                 self.assertEqual(d1._sign, b1._sign)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 4599,
      "line_range": [
        4599
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "4943             for i in range(5):\n4944                 a = random.randrange(b1, b2)\n4945                 b = random.randrange(1000, 1200)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 4944,
      "line_range": [
        4944
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "4944                 a = random.randrange(b1, b2)\n4945                 b = random.randrange(1000, 1200)\n4946                 x = a ** b\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 4945,
      "line_range": [
        4945
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "5475                     traps = random.sample(OrderedSignals[C], t)\n5476                     prec = random.randrange(1, 10000)\n5477                     emin = random.randrange(-10000, 0)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 5476,
      "line_range": [
        5476
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "5476                     prec = random.randrange(1, 10000)\n5477                     emin = random.randrange(-10000, 0)\n5478                     emax = random.randrange(0, 10000)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 5477,
      "line_range": [
        5477
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "5477                     emin = random.randrange(-10000, 0)\n5478                     emax = random.randrange(0, 10000)\n5479                     clamp = random.randrange(0, 2)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 5478,
      "line_range": [
        5478
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "5478                     emax = random.randrange(0, 10000)\n5479                     clamp = random.randrange(0, 2)\n5480                     caps = random.randrange(0, 2)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 5479,
      "line_range": [
        5479
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "5479                     clamp = random.randrange(0, 2)\n5480                     caps = random.randrange(0, 2)\n5481                     cr = random.randrange(0, 2)\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 5480,
      "line_range": [
        5480
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "5480                     caps = random.randrange(0, 2)\n5481                     cr = random.randrange(0, 2)\n5482                     c = Context(prec=prec, rounding=round, Emin=emin, Emax=emax,\n",
      "filename": "cpython\\Lib\\test\\test_decimal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 5481,
      "line_range": [
        5481
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "30         def check(*args, **kwds):\n31             if not eval(expr, globals, locals):\n32                 raise DbcheckError(exprstr, func, args, kwds)\n",
      "filename": "cpython\\Lib\\test\\test_decorators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 31,
      "line_range": [
        31
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "164             with self.assertRaises(TypeError):\n165                 exec(f\"@{expr}\\ndef f(): pass\")\n166 \n",
      "filename": "cpython\\Lib\\test\\test_decorators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 165,
      "line_range": [
        165
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "243                 else:\n244                     assert False, \"Unknown attrname %s\" % fname\n245                 actions.append('%s%d' % (opname, self.index))\n",
      "filename": "cpython\\Lib\\test\\test_decorators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 244,
      "line_range": [
        244
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4 import copy\n5 import pickle\n6 import tempfile\n",
      "filename": "cpython\\Lib\\test\\test_defaultdict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "61         self.assertEqual(repr(d1), \"defaultdict(None, {})\")\n62         self.assertEqual(eval(repr(d1)), d1)\n63         d1[11] = 41\n",
      "filename": "cpython\\Lib\\test\\test_defaultdict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 62,
      "line_range": [
        62
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "149             s = pickle.dumps(d, proto)\n150             o = pickle.loads(s)\n151             self.assertEqual(d, o)\n",
      "filename": "cpython\\Lib\\test\\test_defaultdict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 150,
      "line_range": [
        150
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "6 import copy\n7 import pickle\n8 import random\n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "232             l.pop(0)\n233             if random.random() < 0.5:\n234                 d.append(i)\n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 233,
      "line_range": [
        233
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "236             for j in range(1-len(l), len(l)):\n237                 assert d[j] == l[j]\n238 \n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 237,
      "line_range": [
        237
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "397             self.assertEqual(len(d), n-i)\n398             j = random.randrange(-len(d), len(d))\n399             val = d[j]\n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 398,
      "line_range": [
        398
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "406         n = 500         # O(n**2) test, don't make this too big\n407         data = [random.random() for i in range(n)]\n408         for i in range(n):\n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 407,
      "line_range": [
        407
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "525         d = deque(range(200))\n526         e = eval(repr(d))\n527         self.assertEqual(list(d), list(e))\n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 526,
      "line_range": [
        526
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "613                 s = pickle.dumps(d, i)\n614                 e = pickle.loads(s)\n615                 self.assertNotEqual(id(e), id(d))\n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 614,
      "line_range": [
        614
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "622             for i in range(pickle.HIGHEST_PROTOCOL + 1):\n623                 e = pickle.loads(pickle.dumps(d, i))\n624                 self.assertNotEqual(id(e), id(d))\n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 623,
      "line_range": [
        623
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "634             dump = pickle.dumps((itorg, orig), proto)\n635             it, d = pickle.loads(dump)\n636             for i, x in enumerate(data):\n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 635,
      "line_range": [
        635
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "643             dump = pickle.dumps((itorg, orig), proto)\n644             it, d = pickle.loads(dump)\n645             for i, x in enumerate(data):\n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 644,
      "line_range": [
        644
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "653             dump = pickle.dumps((itorg, orig), proto)\n654             it, d = pickle.loads(dump)\n655             for i, x in enumerate(data):\n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 654,
      "line_range": [
        654
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "662             dump = pickle.dumps((itorg, orig), proto)\n663             it, d = pickle.loads(dump)\n664             for i, x in enumerate(data):\n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 663,
      "line_range": [
        663
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "688             for maxlen in range(-1, 6):\n689                 s = [random.random() for j in range(i)]\n690                 d = deque(s) if maxlen == -1 else deque(s, maxlen)\n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 689,
      "line_range": [
        689
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "822             s = pickle.dumps(d, proto)\n823             e = pickle.loads(s)\n824             self.assertNotEqual(id(d), id(e))\n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 823,
      "line_range": [
        823
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "839             s = pickle.dumps(d, proto)\n840             e = pickle.loads(s)\n841             self.assertNotEqual(id(d), id(e))\n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 840,
      "line_range": [
        840
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "849 \n850                 e = pickle.loads(pickle.dumps(d, proto))\n851                 self.assertNotEqual(id(e), id(d))\n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 850,
      "line_range": [
        850
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "859                 d.x = d\n860                 e = pickle.loads(pickle.dumps(d, proto))\n861                 self.assertEqual(id(e.x), id(e))\n",
      "filename": "cpython\\Lib\\test\\test_deque.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 860,
      "line_range": [
        860
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "5 import math\n6 import pickle\n7 import sys\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "73         d = {'a': a}\n74         self.assertEqual(eval(expr, d), res)\n75         t = type(a)\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 74,
      "line_range": [
        74
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "90 \n91         self.assertEqual(eval(expr, d), res)\n92         t = type(a)\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 91,
      "line_range": [
        91
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "104         d = {'a': a, 'b': b, 'c': c}\n105         self.assertEqual(eval(expr, d), res)\n106         t = type(a)\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 105,
      "line_range": [
        105
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "118         d = {'a': deepcopy(a), 'b': b}\n119         exec(stmt, d)\n120         self.assertEqual(d['a'], res)\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 119,
      "line_range": [
        119
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "137         d = {'a': deepcopy(a), 'b': b, 'c': c}\n138         exec(stmt, d)\n139         self.assertEqual(d['a'], res)\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 138,
      "line_range": [
        138
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "156         dictionary = {'a': deepcopy(a), 'b': b, 'c': c, 'd': d}\n157         exec(stmt, dictionary)\n158         self.assertEqual(dictionary['a'], res)\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 157,
      "line_range": [
        157
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "214         self.unop_test(d, 2, \"len(a)\", \"__len__\")\n215         self.assertEqual(eval(repr(d), {}), d)\n216         self.assertEqual(eval(d.__repr__(), {}), d)\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 215,
      "line_range": [
        215
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "215         self.assertEqual(eval(repr(d), {}), d)\n216         self.assertEqual(eval(d.__repr__(), {}), d)\n217         self.set2op_test({1:2,3:4}, 2, 3, {1:2,2:3,3:4}, \"a[b]=c\",\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 216,
      "line_range": [
        216
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "227                 if hasattr(a, name):\n228                     res = eval(expr, dict)\n229                     self.binop_test(a, b, res, expr, name)\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 228,
      "line_range": [
        228
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "234                 if hasattr(a, name):\n235                     res = eval(expr, dict)\n236                     self.unop_test(a, res, expr, name)\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 235,
      "line_range": [
        235
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3109                     for op in \"<\", \"<=\", \"==\", \"!=\", \">\", \">=\":\n3110                         self.assertEqual(eval(\"c[x] %s c[y]\" % op),\n3111                                      eval(\"x %s y\" % op),\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3110,
      "line_range": [
        3110
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3110                         self.assertEqual(eval(\"c[x] %s c[y]\" % op),\n3111                                      eval(\"x %s y\" % op),\n3112                                      \"x=%d, y=%d\" % (x, y))\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3111,
      "line_range": [
        3111
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3112                                      \"x=%d, y=%d\" % (x, y))\n3113                         self.assertEqual(eval(\"c[x] %s y\" % op),\n3114                                      eval(\"x %s y\" % op),\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3113,
      "line_range": [
        3113
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3113                         self.assertEqual(eval(\"c[x] %s y\" % op),\n3114                                      eval(\"x %s y\" % op),\n3115                                      \"x=%d, y=%d\" % (x, y))\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3114,
      "line_range": [
        3114
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3115                                      \"x=%d, y=%d\" % (x, y))\n3116                         self.assertEqual(eval(\"x %s c[y]\" % op),\n3117                                      eval(\"x %s y\" % op),\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3116,
      "line_range": [
        3116
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3116                         self.assertEqual(eval(\"x %s c[y]\" % op),\n3117                                      eval(\"x %s y\" % op),\n3118                                      \"x=%d, y=%d\" % (x, y))\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3117,
      "line_range": [
        3117
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3188                     for op in \"<\", \"<=\", \"==\", \"!=\", \">\", \">=\":\n3189                         self.assertEqual(eval(\"c[x] %s c[y]\" % op),\n3190                                          eval(\"x %s y\" % op),\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3189,
      "line_range": [
        3189
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3189                         self.assertEqual(eval(\"c[x] %s c[y]\" % op),\n3190                                          eval(\"x %s y\" % op),\n3191                                          \"x=%d, y=%d\" % (x, y))\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3190,
      "line_range": [
        3190
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3191                                          \"x=%d, y=%d\" % (x, y))\n3192                         self.assertEqual(eval(\"c[x] %s y\" % op),\n3193                                          eval(\"x %s y\" % op),\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3192,
      "line_range": [
        3192
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3192                         self.assertEqual(eval(\"c[x] %s y\" % op),\n3193                                          eval(\"x %s y\" % op),\n3194                                          \"x=%d, y=%d\" % (x, y))\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3193,
      "line_range": [
        3193
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3194                                          \"x=%d, y=%d\" % (x, y))\n3195                         self.assertEqual(eval(\"x %s c[y]\" % op),\n3196                                          eval(\"x %s y\" % op),\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3195,
      "line_range": [
        3195
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3195                         self.assertEqual(eval(\"x %s c[y]\" % op),\n3196                                          eval(\"x %s y\" % op),\n3197                                          \"x=%d, y=%d\" % (x, y))\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3196,
      "line_range": [
        3196
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3998         else:\n3999             assert 0, \"best_base calculation found wanting\"\n4000 \n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3999,
      "line_range": [
        3999
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4508             try:\n4509                 exec(expr, {'x': x, 'y': y, 'operator': operator})\n4510             except TypeError:\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 4509,
      "line_range": [
        4509
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "4944             pow(0, UserLong(), 0)\n4945         except:\n4946             pass\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 4945,
      "line_range": [
        4945
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "5481                 if self.step_until(1):\n5482                     assert cls.__mro__ is None\n5483                     cls.__bases__ += ()\n",
      "filename": "cpython\\Lib\\test\\test_descr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5482,
      "line_range": [
        5482
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "54                 self.fail(\"no pipes ready for writing\")\n55             wr = random.choice(ready_writers)\n56             os.write(wr, MSG)\n",
      "filename": "cpython\\Lib\\test\\test_devpoll.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 55,
      "line_range": [
        55
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "3 import gc\n4 import pickle\n5 import random\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "37             dictliteral = '{' + ', '.join(formatted_items) + '}'\n38             self.assertEqual(eval(dictliteral), dict(items))\n39 \n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 38,
      "line_range": [
        38
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "339         for dict_size in [10, 100, 1000, 10000, 100000]:\n340             dict_size = random.randrange(\n341                 dict_size // 2, dict_size + dict_size // 2)\n342             with self.subTest(dict_size=dict_size):\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 340,
      "line_range": [
        340,
        341
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "817             with self.assertRaises(CustomException):\n818                 exec(stmt, locals())\n819 \n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 818,
      "line_range": [
        818
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1111             d = pickle.dumps(it, proto)\n1112             it = pickle.loads(d)\n1113             self.assertEqual(list(it), list(data))\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1112,
      "line_range": [
        1112
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1114 \n1115             it = pickle.loads(d)\n1116             try:\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1115,
      "line_range": [
        1115
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1120             d = pickle.dumps(it, proto)\n1121             it = pickle.loads(d)\n1122             del data[drop]\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1121,
      "line_range": [
        1121
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1130             d = pickle.dumps(itorg, proto)\n1131             it = pickle.loads(d)\n1132             # note that the type of the unpickled iterator\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1131,
      "line_range": [
        1131
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1139 \n1140             it = pickle.loads(d)\n1141             drop = next(it)\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1140,
      "line_range": [
        1140
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1142             d = pickle.dumps(it, proto)\n1143             it = pickle.loads(d)\n1144             del data[drop[0]]\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1143,
      "line_range": [
        1143
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1152             d = pickle.dumps(it, proto)\n1153             it = pickle.loads(d)\n1154             self.assertEqual(list(it), list(data.values()))\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1153,
      "line_range": [
        1153
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1155 \n1156             it = pickle.loads(d)\n1157             drop = next(it)\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1156,
      "line_range": [
        1156
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1158             d = pickle.dumps(it, proto)\n1159             it = pickle.loads(d)\n1160             values = list(it) + [drop]\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1159,
      "line_range": [
        1159
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1167             d = pickle.dumps(it, proto)\n1168             it = pickle.loads(d)\n1169             self.assertEqual(list(it), list(reversed(data)))\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1168,
      "line_range": [
        1168
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1170 \n1171             it = pickle.loads(d)\n1172             try:\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1171,
      "line_range": [
        1171
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1176             d = pickle.dumps(it, proto)\n1177             it = pickle.loads(d)\n1178             del data[drop]\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1177,
      "line_range": [
        1177
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1186             d = pickle.dumps(itorg, proto)\n1187             it = pickle.loads(d)\n1188             # note that the type of the unpickled iterator\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1187,
      "line_range": [
        1187
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1195 \n1196             it = pickle.loads(d)\n1197             drop = next(it)\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1196,
      "line_range": [
        1196
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1198             d = pickle.dumps(it, proto)\n1199             it = pickle.loads(d)\n1200             del data[drop[0]]\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1199,
      "line_range": [
        1199
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1208             d = pickle.dumps(it, proto)\n1209             it = pickle.loads(d)\n1210             self.assertEqual(list(it), list(reversed(data.values())))\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1209,
      "line_range": [
        1209
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1211 \n1212             it = pickle.loads(d)\n1213             drop = next(it)\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1212,
      "line_range": [
        1212
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1214             d = pickle.dumps(it, proto)\n1215             it = pickle.loads(d)\n1216             values = list(it) + [drop]\n",
      "filename": "cpython\\Lib\\test\\test_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1215,
      "line_range": [
        1215
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2 import copy\n3 import pickle\n4 import sys\n",
      "filename": "cpython\\Lib\\test\\test_dictviews.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "142 def bug1333982(x=[]):\n143     assert 0, ([s for s in x] +\n144               1)\n145     pass\n",
      "filename": "cpython\\Lib\\test\\test_dis.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 143,
      "line_range": [
        143,
        144
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "528             func = \"def foo():\\n \" + \"\".join([\"\\n \"] * count + [\"spam\\n\"])\n529             exec(func, namespace)\n530             return namespace['foo']\n",
      "filename": "cpython\\Lib\\test\\test_dis.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 529,
      "line_range": [
        529
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "552             func = \"def foo(x):\\n \" + \";\".join([\"x = x + 1\"] * count) + \"\\n return x\"\n553             exec(func, namespace)\n554             return namespace['foo']\n",
      "filename": "cpython\\Lib\\test\\test_dis.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 553,
      "line_range": [
        553
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "3 import re\n4 import subprocess\n5 import sys\n",
      "filename": "cpython\\Lib\\test\\test_dtrace.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "64         command = self.generate_trace_command(script_file, subcommand)\n65         stdout, _ = subprocess.Popen(command,\n66                                      stdout=subprocess.PIPE,\n67                                      stderr=subprocess.STDOUT,\n68                                      universal_newlines=True).communicate()\n69         return stdout\n",
      "filename": "cpython\\Lib\\test\\test_dtrace.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 65,
      "line_range": [
        65,
        66,
        67,
        68
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "86                         \"len\": lambda x: 8}\n87         self.assertEqual(eval(\"foo()\", globals_dict), 3)\n88 \n",
      "filename": "cpython\\Lib\\test\\test_dynamic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 87,
      "line_range": [
        87
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "88 \n89         self.assertEqual(eval(\"foo()\", {\"foo\": foo}), 3)\n90 \n",
      "filename": "cpython\\Lib\\test\\test_dynamic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 89,
      "line_range": [
        89
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "96         globals_dict = {\"foo\": foo}\n97         exec(\"x = foo()\", globals_dict)\n98         self.assertEqual(globals_dict[\"x\"], 3)\n",
      "filename": "cpython\\Lib\\test\\test_dynamic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 97,
      "line_range": [
        97
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "104 \n105         exec(\"x = foo()\", globals_dict)\n106         self.assertEqual(globals_dict[\"x\"], 3)\n",
      "filename": "cpython\\Lib\\test\\test_dynamic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 105,
      "line_range": [
        105
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "130         globals_dict = {\"len\": lambda x: 7}\n131         foo = eval(\"lambda: len([])\", globals_dict)\n132         self.configure_func(foo)\n",
      "filename": "cpython\\Lib\\test\\test_dynamic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 131,
      "line_range": [
        131
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "2 import signal\n3 import subprocess\n4 import sys\n",
      "filename": "cpython\\Lib\\test\\test_eintr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "26             args = [sys.executable, \"-E\", \"-X\", \"faulthandler\", *args]\n27             proc = subprocess.run(args)\n28             print(f\"--- eintr_tester.py completed: \"\n",
      "filename": "cpython\\Lib\\test\\test_eintr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 27,
      "line_range": [
        27
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3534 \n3535         s = ''.join(choice(chars) for i in range(n)) + '\\n'\n3536         target = s.splitlines(True)\n",
      "filename": "cpython\\Lib\\test\\test_email\\test_email.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 3535,
      "line_range": [
        3535
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "4307         self.hnon = [c for c in range(256) if c not in self.hlit]\n4308         assert len(self.hlit) + len(self.hnon) == 256\n4309         # Set of characters (as byte integers) that don't need to be encoded\n4310         # in bodies.\n4311         self.blit = list(range(ord(' '), ord('~') + 1))\n",
      "filename": "cpython\\Lib\\test\\test_email\\test_email.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4308,
      "line_range": [
        4308,
        4309,
        4310
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4316         self.bnon = [c for c in range(256) if c not in self.blit]\n4317         assert len(self.blit) + len(self.bnon) == 256\n4318 \n",
      "filename": "cpython\\Lib\\test\\test_email\\test_email.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4317,
      "line_range": [
        4317
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3 import copy\n4 import pickle\n5 import email\n",
      "filename": "cpython\\Lib\\test\\test_email\\test_pickleable.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "34             p = pickle.dumps(header, proto)\n35             h = pickle.loads(p)\n36             self.assertEqual(str(h), str(header))\n",
      "filename": "cpython\\Lib\\test\\test_email\\test_pickleable.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 35,
      "line_range": [
        35
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "70             p = pickle.dumps(msg, proto)\n71             msg2 = pickle.loads(p)\n72             self.assertEqual(msg2.as_string(), msg.as_string())\n",
      "filename": "cpython\\Lib\\test\\test_email\\test_pickleable.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 71,
      "line_range": [
        71
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "12 import shutil\n13 import subprocess\n14 import sys\n",
      "filename": "cpython\\Lib\\test\\test_embed.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "83 \n84         p = subprocess.Popen(cmd,\n85                              stdout=subprocess.PIPE,\n86                              stderr=subprocess.PIPE,\n87                              universal_newlines=True,\n88                              env=env,\n89                              cwd=cwd)\n90         try:\n",
      "filename": "cpython\\Lib\\test\\test_embed.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 84,
      "line_range": [
        84,
        85,
        86,
        87,
        88,
        89
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "535         args = [sys.executable, '-S', '-c', code]\n536         proc = subprocess.run(args, env=env,\n537                               stdout=subprocess.PIPE,\n538                               stderr=subprocess.PIPE)\n539         if proc.returncode:\n",
      "filename": "cpython\\Lib\\test\\test_embed.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 536,
      "line_range": [
        536,
        537,
        538
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "9 from io import StringIO\n10 from pickle import dumps, loads, PicklingError, HIGHEST_PROTOCOL\n11 from test import support\n",
      "filename": "cpython\\Lib\\test\\test_enum.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with dumps module.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "75         CHERRY = 3\n76 except Exception:\n77     pass\n",
      "filename": "cpython\\Lib\\test\\test_enum.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 76,
      "line_range": [
        76
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "82     for protocol in range(HIGHEST_PROTOCOL + 1):\n83         assertion(loads(dumps(source, protocol=protocol)), target)\n84 \n",
      "filename": "cpython\\Lib\\test\\test_enum.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 83,
      "line_range": [
        83
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2030         local_ls = {}\n2031         exec(code, global_ns, local_ls)\n2032 \n",
      "filename": "cpython\\Lib\\test\\test_enum.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 2031,
      "line_range": [
        2031
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "3 import sys\n4 import pickle\n5 \n6 from test import support\n",
      "filename": "cpython\\Lib\\test\\test_enumerate.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 4,
      "line_range": [
        4,
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "70             d = pickle.dumps(itorg, proto)\n71             it = pickle.loads(d)\n72             self.assertEqual(type(itorg), type(it))\n",
      "filename": "cpython\\Lib\\test\\test_enumerate.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 71,
      "line_range": [
        71
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "74 \n75             it = pickle.loads(d)\n76             try:\n",
      "filename": "cpython\\Lib\\test\\test_enumerate.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 75,
      "line_range": [
        75
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "81             d = pickle.dumps(it, proto)\n82             it = pickle.loads(d)\n83             self.assertEqual(list(it), seq[1:])\n",
      "filename": "cpython\\Lib\\test\\test_enumerate.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 82,
      "line_range": [
        82
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "12         try:\n13             eval(\"\"\"'this is a test\\\n14             \"\"\")\n",
      "filename": "cpython\\Lib\\test\\test_eof.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "23         try:\n24             eval(\"\"\"'''this is a test\"\"\")\n25         except SyntaxError as msg:\n",
      "filename": "cpython\\Lib\\test\\test_eof.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "42         with self.assertRaises(SyntaxError) as excinfo:\n43             exec('x = 5\\\\')\n44         self.assertEqual(str(excinfo.exception), expect)\n",
      "filename": "cpython\\Lib\\test\\test_eof.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 43,
      "line_range": [
        43
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "45         with self.assertRaises(SyntaxError) as excinfo:\n46             exec('\\\\')\n47         self.assertEqual(str(excinfo.exception), expect)\n",
      "filename": "cpython\\Lib\\test\\test_eof.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 46,
      "line_range": [
        46
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "7 import unittest\n8 import pickle\n9 import weakref\n",
      "filename": "cpython\\Lib\\test\\test_exceptions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "63                 import marshal\n64                 marshal.loads(b'')\n65             except EOFError:\n",
      "filename": "cpython\\Lib\\test\\test_exceptions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 64,
      "line_range": [
        64
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "102         self.raise_catch(SyntaxError, \"SyntaxError\")\n103         try: exec('/\\n')\n104         except SyntaxError: pass\n",
      "filename": "cpython\\Lib\\test\\test_exceptions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 103,
      "line_range": [
        103
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "131         try: x = 1/0\n132         except Exception as e: pass\n133 \n",
      "filename": "cpython\\Lib\\test\\test_exceptions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 132,
      "line_range": [
        132
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "649             inner_raising_func()\n650         except:\n651             pass\n",
      "filename": "cpython\\Lib\\test\\test_exceptions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 650,
      "line_range": [
        650
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "923             raise Exception(MyObject())\n924         except:\n925             pass\n",
      "filename": "cpython\\Lib\\test\\test_exceptions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 924,
      "line_range": [
        924
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1325         try:\n1326             assert False, 'hello'\n1327         except BaseException as e:\n",
      "filename": "cpython\\Lib\\test\\test_exceptions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1326,
      "line_range": [
        1326
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1353             raise TestException\n1354         except Exception:\n1355             pass\n",
      "filename": "cpython\\Lib\\test\\test_exceptions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 1354,
      "line_range": [
        1354
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1429             for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n1430                 exc = pickle.loads(pickle.dumps(orig, proto))\n1431                 self.assertEqual(exc.args, ('test',))\n",
      "filename": "cpython\\Lib\\test\\test_exceptions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1430,
      "line_range": [
        1430
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "5 import signal\n6 import subprocess\n7 import sys\n",
      "filename": "cpython\\Lib\\test\\test_faulthandler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "50 def temporary_filename():\n51     filename = tempfile.mktemp()\n52     try:\n",
      "filename": "cpython\\Lib\\test\\test_faulthandler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 51,
      "line_range": [
        51
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "360         # don't use assert_python_ok() because it always enables faulthandler\n361         output = subprocess.check_output(args)\n362         self.assertEqual(output.rstrip(), b\"False\")\n",
      "filename": "cpython\\Lib\\test\\test_faulthandler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 361,
      "line_range": [
        361
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "372         # don't use assert_python_ok() because it always enables faulthandler\n373         output = subprocess.check_output(args, env=env)\n374         self.assertEqual(output.rstrip(), b\"True\")\n",
      "filename": "cpython\\Lib\\test\\test_faulthandler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 373,
      "line_range": [
        373
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "383         # don't use assert_python_ok() because it always enables faulthandler\n384         output = subprocess.check_output(args, env=env)\n385         self.assertEqual(output.rstrip(), b\"False\")\n",
      "filename": "cpython\\Lib\\test\\test_faulthandler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 384,
      "line_range": [
        384
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "390         env['PYTHONDEVMODE'] = ''\n391         output = subprocess.check_output(args, env=env)\n392         self.assertEqual(output.rstrip(), b\"True\")\n",
      "filename": "cpython\\Lib\\test\\test_faulthandler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 391,
      "line_range": [
        391
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "233         filler = b\"ham\\n\"\n234         assert not dataoffset % len(filler), \\\n235             \"dataoffset must be multiple of len(filler)\"\n236         nchunks = dataoffset // len(filler)\n",
      "filename": "cpython\\Lib\\test\\test_file.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 234,
      "line_range": [
        234,
        235
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "13 import signal\n14 import subprocess\n15 import sys\n",
      "filename": "cpython\\Lib\\test\\test_file_eintr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "87         # pipe buffer size of 512 bytes.  No writer should block.\n88         assert len(data_to_write) < 512, 'data_to_write must fit in pipe buf.'\n89 \n90         # Start a subprocess to call our read method while handling a signal.\n91         self._process = subprocess.Popen(\n",
      "filename": "cpython\\Lib\\test\\test_file_eintr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 88,
      "line_range": [
        88,
        89,
        90
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "90         # Start a subprocess to call our read method while handling a signal.\n91         self._process = subprocess.Popen(\n92                 [sys.executable, '-u', '-c',\n93                  'import signal, sys ;'\n94                  'signal.signal(signal.SIGINT, '\n95                                'lambda s, f: sys.stderr.write(\"$\\\\n\")) ;'\n96                  + infile_setup_code + ' ;' +\n97                  'sys.stderr.write(\"Worm Sign!\\\\n\") ;'\n98                  + read_and_verify_code + ' ;' +\n99                  'infile.close()'\n100                 ],\n101                 stdin=subprocess.PIPE, stdout=subprocess.PIPE,\n102                 stderr=subprocess.PIPE)\n103 \n",
      "filename": "cpython\\Lib\\test\\test_file_eintr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 91,
      "line_range": [
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        101,
        102
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "543                 os.unlink(TESTFN)\n544             except:\n545                 pass\n",
      "filename": "cpython\\Lib\\test\\test_fileio.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 544,
      "line_range": [
        544
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "102     def check_sanity(self):\n103         assert self.id_ == id(self)\n104 \n",
      "filename": "cpython\\Lib\\test\\test_finalization.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 103,
      "line_range": [
        103
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "235         super().check_sanity()\n236         assert self.ref is self\n237 \n",
      "filename": "cpython\\Lib\\test\\test_finalization.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 236,
      "line_range": [
        236
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "320         if self.suicided:\n321             assert self.left is None\n322             assert self.right is None\n",
      "filename": "cpython\\Lib\\test\\test_finalization.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 321,
      "line_range": [
        321
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "321             assert self.left is None\n322             assert self.right is None\n323         else:\n",
      "filename": "cpython\\Lib\\test\\test_finalization.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 322,
      "line_range": [
        322
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "325             if left.suicided:\n326                 assert left.right is None\n327             else:\n",
      "filename": "cpython\\Lib\\test\\test_finalization.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 326,
      "line_range": [
        326
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "327             else:\n328                 assert left.right is self\n329             right = self.right\n",
      "filename": "cpython\\Lib\\test\\test_finalization.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 328,
      "line_range": [
        328
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "330             if right.suicided:\n331                 assert right.left is None\n332             else:\n",
      "filename": "cpython\\Lib\\test\\test_finalization.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 331,
      "line_range": [
        331
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "332             else:\n333                 assert right.left is self\n334 \n",
      "filename": "cpython\\Lib\\test\\test_finalization.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 333,
      "line_range": [
        333
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "72             if not any(ch in lit for ch in 'jJxXoObB'):\n73                 self.assertEqual(float(lit), eval(lit))\n74                 self.assertEqual(float(lit), float(lit.replace('_', '')))\n",
      "filename": "cpython\\Lib\\test\\test_float.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 73,
      "line_range": [
        73
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "263         for i in range(10000):\n264             f = random.random()\n265             f *= 10 ** random.randint(-100, 100)\n",
      "filename": "cpython\\Lib\\test\\test_float.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 264,
      "line_range": [
        264
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "264             f = random.random()\n265             f *= 10 ** random.randint(-100, 100)\n266             n, d = f.as_integer_ratio()\n",
      "filename": "cpython\\Lib\\test\\test_float.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 265,
      "line_range": [
        265
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "776                     continue\n777                 v = eval(line)\n778                 self.assertEqual(v, eval(repr(v)))\n",
      "filename": "cpython\\Lib\\test\\test_float.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 777,
      "line_range": [
        777
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "777                 v = eval(line)\n778                 self.assertEqual(v, eval(repr(v)))\n779 \n",
      "filename": "cpython\\Lib\\test\\test_float.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 778,
      "line_range": [
        778
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "903         for i in range(500):\n904             x = random.random()\n905             self.assertEqual(float(format(x, '.0f')), round(x, 0))\n",
      "filename": "cpython\\Lib\\test\\test_float.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 904,
      "line_range": [
        904
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1462         for i in range(10000):\n1463             e = random.randrange(-1200, 1200)\n1464             m = random.random()\n",
      "filename": "cpython\\Lib\\test\\test_float.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1463,
      "line_range": [
        1463
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1463             e = random.randrange(-1200, 1200)\n1464             m = random.random()\n1465             s = random.choice([1.0, -1.0])\n",
      "filename": "cpython\\Lib\\test\\test_float.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1464,
      "line_range": [
        1464
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1464             m = random.random()\n1465             s = random.choice([1.0, -1.0])\n1466             try:\n",
      "filename": "cpython\\Lib\\test\\test_float.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1465,
      "line_range": [
        1465
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "12 from copy import copy, deepcopy\n13 from pickle import dumps, loads\n14 F = fractions.Fraction\n",
      "filename": "cpython\\Lib\\test\\test_fractions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with dumps module.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "40     def __float__(self):\n41         assert False, \"__float__ should not be invoked for comparisons\"\n42 \n",
      "filename": "cpython\\Lib\\test\\test_fractions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "44     def __sub__(self, other):\n45         assert False, \"__sub__ should not be invoked for comparisons\"\n46     __rsub__ = __sub__\n",
      "filename": "cpython\\Lib\\test\\test_fractions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 45,
      "line_range": [
        45
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "78     def __float__(self):\n79         assert False, \"__float__ should not be invoked\"\n80 \n",
      "filename": "cpython\\Lib\\test\\test_fractions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 79,
      "line_range": [
        79
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "691         dr = DummyFraction(13, 7)\n692         self.assertEqual(r, loads(dumps(r)))\n693         self.assertEqual(id(r), id(copy(r)))\n",
      "filename": "cpython\\Lib\\test\\test_fractions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 692,
      "line_range": [
        692
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "32                 with self.assertRaisesRegex(exception_type, regex):\n33                     eval(str)\n34 \n",
      "filename": "cpython\\Lib\\test\\test_fstring.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 33,
      "line_range": [
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "80         # Actually run the code.\n81         exec(c)\n82 \n",
      "filename": "cpython\\Lib\\test\\test_fstring.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 81,
      "line_range": [
        81
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "353         c = compile(t, '', 'exec')\n354         exec(c)\n355         self.assertEqual(x[0], 'foo3')\n",
      "filename": "cpython\\Lib\\test\\test_fstring.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 354,
      "line_range": [
        354
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "494         for i in range(250, 260):\n495             self.assertEqual(eval(build_fstr(i)), (x+' ')*i)\n496 \n",
      "filename": "cpython\\Lib\\test\\test_fstring.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 495,
      "line_range": [
        495
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "497         # Test concatenating 2 largs fstrings.\n498         self.assertEqual(eval(build_fstr(255)*256), (x+' ')*(255*256))\n499 \n",
      "filename": "cpython\\Lib\\test\\test_fstring.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 498,
      "line_range": [
        498
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "500         s = build_fstr(253, '{x:{width}} ')\n501         self.assertEqual(eval(s), (x+' ')*254)\n502 \n",
      "filename": "cpython\\Lib\\test\\test_fstring.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 501,
      "line_range": [
        501
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "504         s = \"f'{1}' 'x' 'y'\" * 1024\n505         self.assertEqual(eval(s), '1xy' * 1024)\n506 \n",
      "filename": "cpython\\Lib\\test\\test_fstring.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 505,
      "line_range": [
        505
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "656         with self.assertWarns(DeprecationWarning):  # invalid escape sequence\n657             value = eval(r\"f'\\{6*7}'\")\n658         self.assertEqual(value, '\\\\42')\n",
      "filename": "cpython\\Lib\\test\\test_fstring.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 657,
      "line_range": [
        657
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1080         # See bpo-30682: this used to raise an assert in pydebug mode.\n1081         self.assertEqual(eval('f\"\\\\\\n\"'), '')\n1082         self.assertEqual(eval('f\"\\\\\\r\"'), '')\n",
      "filename": "cpython\\Lib\\test\\test_fstring.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 1081,
      "line_range": [
        1081
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1081         self.assertEqual(eval('f\"\\\\\\n\"'), '')\n1082         self.assertEqual(eval('f\"\\\\\\r\"'), '')\n1083 \n",
      "filename": "cpython\\Lib\\test\\test_fstring.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 1082,
      "line_range": [
        1082
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "5 \n6 import ftplib\n7 import asyncore\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "A FTP-related module is being imported.  FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b402-import-ftplib",
      "test_id": "B402",
      "test_name": "blacklist"
    },
    {
      "code": "276     def start(self):\n277         assert not self.active\n278         self.__flag = threading.Event()\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 277,
      "line_range": [
        277
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "291     def stop(self):\n292         assert self.active\n293         self.active = False\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 292,
      "line_range": [
        292
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "477         self.server.start()\n478         self.client = ftplib.FTP(timeout=TIMEOUT, encoding=encoding)\n479         self.client.connect(self.server.host, self.server.port)\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 478,
      "line_range": [
        478
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "722         # base test\n723         with ftplib.FTP(timeout=TIMEOUT) as self.client:\n724             self.client.connect(self.server.host, self.server.port)\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 723,
      "line_range": [
        723
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "730         # QUIT sent inside the with block\n731         with ftplib.FTP(timeout=TIMEOUT) as self.client:\n732             self.client.connect(self.server.host, self.server.port)\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 731,
      "line_range": [
        731
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "740         try:\n741             with ftplib.FTP(timeout=TIMEOUT) as self.client:\n742                 self.client.connect(self.server.host, self.server.port)\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 741,
      "line_range": [
        741
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "779     def test_parse257(self):\n780         self.assertEqual(ftplib.parse257('257 \"/foo/bar\"'), '/foo/bar')\n781         self.assertEqual(ftplib.parse257('257 \"/foo/bar\" created'), '/foo/bar')\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 780,
      "line_range": [
        780
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "780         self.assertEqual(ftplib.parse257('257 \"/foo/bar\"'), '/foo/bar')\n781         self.assertEqual(ftplib.parse257('257 \"/foo/bar\" created'), '/foo/bar')\n782         self.assertEqual(ftplib.parse257('257 \"\"'), '')\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 781,
      "line_range": [
        781
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "781         self.assertEqual(ftplib.parse257('257 \"/foo/bar\" created'), '/foo/bar')\n782         self.assertEqual(ftplib.parse257('257 \"\"'), '')\n783         self.assertEqual(ftplib.parse257('257 \"\" created'), '')\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 782,
      "line_range": [
        782
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "782         self.assertEqual(ftplib.parse257('257 \"\"'), '')\n783         self.assertEqual(ftplib.parse257('257 \"\" created'), '')\n784         self.assertRaises(ftplib.error_reply, ftplib.parse257, '250 \"/foo/bar\"')\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 783,
      "line_range": [
        783
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "787         # they must be doubled (see RFC-959, chapter 7, appendix 2).\n788         self.assertEqual(ftplib.parse257('257 \"/foo/b\"\"ar\"'), '/foo/b\"ar')\n789         self.assertEqual(ftplib.parse257('257 \"/foo/b\"\"ar\" created'), '/foo/b\"ar')\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 788,
      "line_range": [
        788
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "788         self.assertEqual(ftplib.parse257('257 \"/foo/b\"\"ar\"'), '/foo/b\"ar')\n789         self.assertEqual(ftplib.parse257('257 \"/foo/b\"\"ar\" created'), '/foo/b\"ar')\n790 \n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 789,
      "line_range": [
        789
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "817         # Check default encoding\n818         client = ftplib.FTP(timeout=TIMEOUT)\n819         self.assertEqual(DEFAULT_ENCODING, client.encoding)\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 818,
      "line_range": [
        818
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "829         self.server.start()\n830         self.client = ftplib.FTP(timeout=TIMEOUT, encoding=DEFAULT_ENCODING)\n831         self.client.connect(self.server.host, self.server.port)\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 830,
      "line_range": [
        830
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "876         self.server.start()\n877         self.client = ftplib.FTP_TLS(timeout=TIMEOUT, encoding=encoding)\n878         self.client.connect(self.server.host, self.server.port)\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 877,
      "line_range": [
        877
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "890         self.server.start()\n891         self.client = ftplib.FTP_TLS(timeout=TIMEOUT)\n892         self.client.connect(self.server.host, self.server.port)\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 891,
      "line_range": [
        891
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "955 \n956         self.client = ftplib.FTP_TLS(context=ctx, timeout=TIMEOUT)\n957         self.client.connect(self.server.host, self.server.port)\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 956,
      "line_range": [
        956
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "981         ctx.load_verify_locations(CAFILE)\n982         self.client = ftplib.FTP_TLS(context=ctx, timeout=TIMEOUT)\n983 \n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 982,
      "line_range": [
        982
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "1054         try:\n1055             ftp = ftplib.FTP(HOST)\n1056         finally:\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 1055,
      "line_range": [
        1055
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "1066         try:\n1067             ftp = ftplib.FTP(HOST, timeout=None)\n1068         finally:\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 1067,
      "line_range": [
        1067
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "1075         # a value\n1076         ftp = ftplib.FTP(HOST, timeout=30)\n1077         self.assertEqual(ftp.sock.gettimeout(), 30)\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 1076,
      "line_range": [
        1076
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "1082         with self.assertRaises(ValueError):\n1083             ftplib.FTP(HOST, timeout=0)\n1084 \n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 1083,
      "line_range": [
        1083
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "1085     def testTimeoutConnect(self):\n1086         ftp = ftplib.FTP()\n1087         ftp.connect(HOST, timeout=30)\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 1086,
      "line_range": [
        1086
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "1092     def testTimeoutDifferentOrder(self):\n1093         ftp = ftplib.FTP(timeout=30)\n1094         ftp.connect(HOST)\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 1093,
      "line_range": [
        1093
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "1099     def testTimeoutDirectAccess(self):\n1100         ftp = ftplib.FTP()\n1101         ftp.timeout = 30\n",
      "filename": "cpython\\Lib\\test\\test_ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 1100,
      "line_range": [
        1100
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "135         s = \"\"\"def f(): pass\\nf.__name__\"\"\"\n136         exec(s, {'__builtins__': {}})\n137         # Test on methods, too\n",
      "filename": "cpython\\Lib\\test\\test_funcattrs.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 136,
      "line_range": [
        136
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "6 from itertools import permutations\n7 import pickle\n8 from random import choice\n",
      "filename": "cpython\\Lib\\test\\test_functools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "257             for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n258                 f_copy = pickle.loads(pickle.dumps(f, proto))\n259                 self.assertEqual(signature(f_copy), signature(f))\n",
      "filename": "cpython\\Lib\\test\\test_functools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 258,
      "line_range": [
        258
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "350                 for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n351                     f_copy = pickle.loads(pickle.dumps(f, proto))\n352                     try:\n",
      "filename": "cpython\\Lib\\test\\test_functools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 351,
      "line_range": [
        351
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "362                 for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n363                     f_copy = pickle.loads(pickle.dumps(f, proto))\n364                     try:\n",
      "filename": "cpython\\Lib\\test\\test_functools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 363,
      "line_range": [
        363
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1156                     method = getattr(Orderable_LT, name)\n1157                     method_copy = pickle.loads(pickle.dumps(method, proto))\n1158                     self.assertIs(method_copy, method)\n",
      "filename": "cpython\\Lib\\test\\test_functools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1157,
      "line_range": [
        1157
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1202         for i in range(1000):\n1203             x, y = choice(domain), choice(domain)\n1204             actual = f(x, y)\n",
      "filename": "cpython\\Lib\\test\\test_functools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1203,
      "line_range": [
        1203
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1202         for i in range(1000):\n1203             x, y = choice(domain), choice(domain)\n1204             actual = f(x, y)\n",
      "filename": "cpython\\Lib\\test\\test_functools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1203,
      "line_range": [
        1203
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1658                 with self.subTest(proto=proto, func=f):\n1659                     f_copy = pickle.loads(pickle.dumps(f, proto))\n1660                     self.assertIs(f_copy, f)\n",
      "filename": "cpython\\Lib\\test\\test_functools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1659,
      "line_range": [
        1659
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "102         try:\n103             exec(\"from __future__ import print_function; print 0\")\n104         except SyntaxError:\n",
      "filename": "cpython\\Lib\\test\\test_future.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 103,
      "line_range": [
        103
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "109         try:\n110             exec(\"from __future__ import (print_function); print 0\")\n111         except SyntaxError:\n",
      "filename": "cpython\\Lib\\test\\test_future.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 110,
      "line_range": [
        110
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "121         scope = {}\n122         exec(\"from __future__ import unicode_literals; x = ''\", {}, scope)\n123         self.assertIsInstance(scope[\"x\"], str)\n",
      "filename": "cpython\\Lib\\test\\test_future.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 122,
      "line_range": [
        122
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "143         scope = {}\n144         exec(self.template.format(ann=annotation), {}, scope)\n145         func_ret_ann = scope['f'].__annotations__['return']\n",
      "filename": "cpython\\Lib\\test\\test_future.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 144,
      "line_range": [
        144
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "224         d = {}\n225         exec(\"def f(): pass\\n\", d)\n226         gc.collect()\n",
      "filename": "cpython\\Lib\\test\\test_gc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 225,
      "line_range": [
        225
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "664     def test_garbage_at_shutdown(self):\n665         import subprocess\n666         code = \"\"\"if 1:\n",
      "filename": "cpython\\Lib\\test\\test_gc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 665,
      "line_range": [
        665
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "684         def run_command(code):\n685             p = subprocess.Popen([sys.executable, \"-Wd\", \"-c\", code],\n686                 stdout=subprocess.PIPE,\n687                 stderr=subprocess.PIPE)\n688             stdout, stderr = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_gc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 685,
      "line_range": [
        685,
        686,
        687
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1173 \n1174         import subprocess\n1175         code = textwrap.dedent('''\n",
      "filename": "cpython\\Lib\\test\\test_gc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 1174,
      "line_range": [
        1174
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "1193         ''')\n1194         p = subprocess.Popen([sys.executable, \"-c\", code],\n1195                              stdout=subprocess.PIPE,\n1196                              stderr=subprocess.PIPE)\n1197         stdout, stderr = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_gc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1194,
      "line_range": [
        1194,
        1195,
        1196
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1366     gc.disable()\n1367     assert not gc.isenabled()\n1368     debug = gc.get_debug()\n",
      "filename": "cpython\\Lib\\test\\test_gc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1367,
      "line_range": [
        1367
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1380         gc.enable()\n1381         assert gc.isenabled()\n1382         if not enabled:\n",
      "filename": "cpython\\Lib\\test\\test_gc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1381,
      "line_range": [
        1381
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "8 import re\n9 import subprocess\n10 import sys\n",
      "filename": "cpython\\Lib\\test\\test_gdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "20         cmd = [\"gdb\", \"-nx\", \"--version\"]\n21         proc = subprocess.Popen(cmd,\n22                                 stdout=subprocess.PIPE,\n23                                 stderr=subprocess.PIPE,\n24                                 universal_newlines=True)\n25         with proc:\n",
      "filename": "cpython\\Lib\\test\\test_gdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 21,
      "line_range": [
        21,
        22,
        23,
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "108         base_cmd += ('-iex', 'add-auto-load-safe-path ' + checkout_hook_path)\n109     proc = subprocess.Popen(base_cmd + args,\n110                             # Redirect stdin to prevent GDB from messing with\n111                             # the terminal settings\n112                             stdin=subprocess.PIPE,\n113                             stdout=subprocess.PIPE,\n114                             stderr=subprocess.PIPE,\n115                             env=env)\n116     with proc:\n",
      "filename": "cpython\\Lib\\test\\test_gdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 109,
      "line_range": [
        109,
        110,
        111,
        112,
        113,
        114,
        115
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2 import gc\n3 import pickle\n4 import sys\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "194                 make.throw(exc)\n195             except Exception:\n196                 pass\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 195,
      "line_range": [
        195
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "437                 yield\n438             except Exception:\n439                 pass\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 438,
      "line_range": [
        438
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1454     def _gen3(i):\n1455         assert i < n and (n-i) % 3 == 0\n1456         ip1, ip2, ip3 = i+1, i+2, i+3\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1455,
      "line_range": [
        1455
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1504         else:\n1505             assert i == n\n1506             yield values\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1505,
      "line_range": [
        1505
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1519         else:\n1520             assert i < 0\n1521             break\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1520,
      "line_range": [
        1520
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1565         n = self.n\n1566         assert n == len(row2col)\n1567         sep = \"+\" + \"-+\" * n\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1566,
      "line_range": [
        1566
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1633             corner = self.coords2index(0, 0)\n1634             assert self.lastij == corner  # i.e., we started in the corner\n1635             if m < 3 or n < 3:\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1634,
      "line_range": [
        1634
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1636                 return\n1637             assert len(succs[corner]) == 2\n1638             assert self.coords2index(1, 2) in succs[corner]\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1637,
      "line_range": [
        1637
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1637             assert len(succs[corner]) == 2\n1638             assert self.coords2index(1, 2) in succs[corner]\n1639             assert self.coords2index(2, 1) in succs[corner]\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1638,
      "line_range": [
        1638
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1638             assert self.coords2index(1, 2) in succs[corner]\n1639             assert self.coords2index(2, 1) in succs[corner]\n1640             # Only two choices.  Whichever we pick, the other must be the\n1641             # square picked on move m*n, as it's the only way to get back\n1642             # to (0, 0).  Save its index in self.final so that moves before\n1643             # the last know it must be kept free.\n1644             for i, j in (1, 2), (2, 1):\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1639,
      "line_range": [
        1639,
        1640,
        1641,
        1642,
        1643
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1662                 e = len(succs[i])\n1663                 assert e > 0, \"else remove_from_successors() pruning flawed\"\n1664                 if e == 1:\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1663,
      "line_range": [
        1663
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1690                 e = len(succs[i])\n1691                 assert e > 0, \"else remove_from_successors() pruning flawed\"\n1692                 if e == 1:\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1691,
      "line_range": [
        1691
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1709         def last():\n1710             assert self.final in succs[self.lastij]\n1711             yield self.final\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1710,
      "line_range": [
        1710
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1720     def coords2index(self, i, j):\n1721         assert 0 <= i < self.m\n1722         assert 0 <= j < self.n\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1721,
      "line_range": [
        1721
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1721         assert 0 <= i < self.m\n1722         assert 0 <= j < self.n\n1723         return i * self.n + j\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1722,
      "line_range": [
        1722
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1725     def index2coords(self, index):\n1726         assert 0 <= index < self.m * self.n\n1727         return divmod(index, self.n)\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1726,
      "line_range": [
        1726
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1752         m, n = self.m, self.n\n1753         assert len(x) == m*n\n1754         w = len(str(m*n))\n",
      "filename": "cpython\\Lib\\test\\test_generators.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1753,
      "line_range": [
        1753
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3 import unittest\n4 import pickle\n5 from collections import (\n",
      "filename": "cpython\\Lib\\test\\test_genericalias.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "274         s = pickle.dumps(alias)\n275         loaded = pickle.loads(s)\n276         self.assertEqual(alias.__origin__, loaded.__origin__)\n",
      "filename": "cpython\\Lib\\test\\test_genericalias.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 275,
      "line_range": [
        275
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "134                 try:\n135                     x = eval(s)\n136                 except OverflowError:\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 135,
      "line_range": [
        135
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "146                 try:\n147                     x = eval(s)\n148                 except OverflowError:\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 147,
      "line_range": [
        147
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "184         for lit in VALID_UNDERSCORE_LITERALS:\n185             self.assertEqual(eval(lit), eval(lit.replace('_', '')))\n186         for lit in INVALID_UNDERSCORE_LITERALS:\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 185,
      "line_range": [
        185
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "184         for lit in VALID_UNDERSCORE_LITERALS:\n185             self.assertEqual(eval(lit), eval(lit.replace('_', '')))\n186         for lit in INVALID_UNDERSCORE_LITERALS:\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 185,
      "line_range": [
        185
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "293         # testlist ENDMARKER\n294         x = eval('1, 0 or 1')\n295 \n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 294,
      "line_range": [
        294
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "404         gns = {}; lns= {}\n405         exec(\"'docstring'\\n\"\n406              \"__annotations__[1] = 2\\n\"\n407              \"x: int = 5\\n\", gns, lns)\n408         self.assertEqual(lns[\"__annotations__\"], {1: 2, 'x': 'int'})\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 405,
      "line_range": [
        405,
        406,
        407
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "414         ns = {'__annotations__': CNS()}\n415         exec('X: int; Z: str = \"Z\"; (w): complex = 1j', ns)\n416         self.assertEqual(ns['__annotations__']['x'], 'int')\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 415,
      "line_range": [
        415
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "429                 return self._dct[item]\n430         exec('x: int = 1', {}, CNS2())\n431         self.assertEqual(nonloc_ns['__annotations__']['x'], 'int')\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 430,
      "line_range": [
        430
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "446                 return self._dct[item]\n447         exec('X: str', {}, CNS2())\n448         self.assertEqual(nonloc_ns['__annotations__']['x'], 'str')\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 447,
      "line_range": [
        447
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "451         ns = {}\n452         exec('x: tuple = 1, 2', ns)\n453         self.assertEqual(ns['x'], (1, 2))\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 452,
      "line_range": [
        452
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "455                 '    x: int = yield')\n456         exec(stmt, ns)\n457         self.assertEqual(list(ns['f']()), [None])\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 456,
      "line_range": [
        456
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "459         ns = {\"a\": 1, 'b': (2, 3, 4), \"c\":5, \"Tuple\": typing.Tuple}\n460         exec('x: Tuple[int, ...] = a,*b,c', ns)\n461         self.assertEqual(ns['x'], (1, 2, 3, 4, 5))\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 460,
      "line_range": [
        460
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "788                     with self.assertRaisesRegex(SyntaxError, custom_msg):\n789                         exec(source)\n790                 source = source.replace(\"foo\", \"(foo.)\")\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 789,
      "line_range": [
        789
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "792                     with self.assertRaisesRegex(SyntaxError, \"invalid syntax\"):\n793                         exec(source)\n794 \n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 793,
      "line_range": [
        793
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1178         # assertTruestmt: 'assert' test [',' test]\n1179         assert 1\n1180         assert 1, 1\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1179,
      "line_range": [
        1179
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1179         assert 1\n1180         assert 1, 1\n1181         assert lambda x:x\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1180,
      "line_range": [
        1180
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1180         assert 1, 1\n1181         assert lambda x:x\n1182         assert 1, lambda x:x+1\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1181,
      "line_range": [
        1181
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1181         assert lambda x:x\n1182         assert 1, lambda x:x+1\n1183 \n1184         try:\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1182,
      "line_range": [
        1182,
        1183
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1184         try:\n1185             assert True\n1186         except AssertionError as e:\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1185,
      "line_range": [
        1185
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1189         try:\n1190             assert True, 'this should always pass'\n1191         except AssertionError as e:\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1190,
      "line_range": [
        1190
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1198         try:\n1199             assert 0, \"msg\"\n1200         except AssertionError as e:\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1199,
      "line_range": [
        1199
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1205         try:\n1206             assert False\n1207         except AssertionError as e:\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1206,
      "line_range": [
        1206
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1289         except TypeError as msg: pass\n1290         except: pass\n1291         else: pass\n",
      "filename": "cpython\\Lib\\test\\test_grammar.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 1290,
      "line_range": [
        1290
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "11 import unittest\n12 from subprocess import PIPE, Popen\n13 from test import support\n",
      "filename": "cpython\\Lib\\test\\test_gzip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with PIPE module.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "752             args = sys.executable, '-m', 'gzip', '-d'\n753             with Popen(args, stdin=PIPE, stdout=PIPE, stderr=PIPE) as proc:\n754                 out, err = proc.communicate(bytes_io.getvalue())\n",
      "filename": "cpython\\Lib\\test\\test_gzip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 753,
      "line_range": [
        753
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "784         args = sys.executable, '-m', 'gzip'\n785         with Popen(args, stdin=PIPE, stdout=PIPE, stderr=PIPE) as proc:\n786             out, err = proc.communicate(self.data)\n",
      "filename": "cpython\\Lib\\test\\test_gzip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 785,
      "line_range": [
        785
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "27     \"\"\"\n28     assert 0 <= uint64 < (1 << 64)\n29     # simple unsigned to signed int64\n30     if uint64 > (1 << 63) - 1:\n",
      "filename": "cpython\\Lib\\test\\test_hash.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 28,
      "line_range": [
        28,
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "248         else:\n249             assert(sys.byteorder == 'big')\n250             platform = 3 if IS_64BIT else 2\n",
      "filename": "cpython\\Lib\\test\\test_hash.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 249,
      "line_range": [
        249
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "62 def hexstr(s):\n63     assert isinstance(s, bytes), repr(s)\n64     h = \"0123456789abcdef\"\n",
      "filename": "cpython\\Lib\\test\\test_hashlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 63,
      "line_range": [
        63
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "221             cons(b'', usedforsecurity=True)\n222         hashlib.new(\"md5\", usedforsecurity=True)\n223         hashlib.md5(usedforsecurity=True)\n",
      "filename": "cpython\\Lib\\test\\test_hashlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD4 or MD5 hash function.",
      "line_number": 222,
      "line_range": [
        222
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b324_hashlib_new.html",
      "test_id": "B324",
      "test_name": "hashlib_new"
    },
    {
      "code": "222         hashlib.new(\"md5\", usedforsecurity=True)\n223         hashlib.md5(usedforsecurity=True)\n224         if self._hashlib is not None:\n",
      "filename": "cpython\\Lib\\test\\test_hashlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 223,
      "line_range": [
        223
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "232             cons(b'', usedforsecurity=False)\n233         hashlib.new(\"md5\", usedforsecurity=False)\n234         hashlib.md5(usedforsecurity=False)\n",
      "filename": "cpython\\Lib\\test\\test_hashlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD4 or MD5 hash function.",
      "line_number": 233,
      "line_range": [
        233
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b324_hashlib_new.html",
      "test_id": "B324",
      "test_name": "hashlib_new"
    },
    {
      "code": "233         hashlib.new(\"md5\", usedforsecurity=False)\n234         hashlib.md5(usedforsecurity=False)\n235         if self._hashlib is not None:\n",
      "filename": "cpython\\Lib\\test\\test_hashlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 234,
      "line_range": [
        234
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "882         # hash will be the same as doing it single threaded upfront.\n883         hasher = hashlib.sha1()\n884         num_threads = 5\n",
      "filename": "cpython\\Lib\\test\\test_hashlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 883,
      "line_range": [
        883
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "886         data = smallest_data * 200000\n887         expected_hash = hashlib.sha1(data*num_threads).hexdigest()\n888 \n",
      "filename": "cpython\\Lib\\test\\test_hashlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 887,
      "line_range": [
        887
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "55         for i in range(256):\n56             item = random.random()\n57             data.append(item)\n",
      "filename": "cpython\\Lib\\test\\test_heapq.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 56,
      "line_range": [
        56
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "86         for size in list(range(30)) + [20000]:\n87             heap = [random.random() for dummy in range(size)]\n88             self.module.heapify(heap)\n",
      "filename": "cpython\\Lib\\test\\test_heapq.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 87,
      "line_range": [
        87
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "93     def test_naive_nbest(self):\n94         data = [random.randrange(2000) for i in range(1000)]\n95         heap = []\n",
      "filename": "cpython\\Lib\\test\\test_heapq.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 94,
      "line_range": [
        94
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "116         # (10 log-time steps).\n117         data = [random.randrange(2000) for i in range(1000)]\n118         heap = data[:10]\n",
      "filename": "cpython\\Lib\\test\\test_heapq.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 117,
      "line_range": [
        117
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "129     def test_nbest_with_pushpop(self):\n130         data = [random.randrange(2000) for i in range(1000)]\n131         heap = data[:10]\n",
      "filename": "cpython\\Lib\\test\\test_heapq.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 130,
      "line_range": [
        130
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "166         for trial in range(100):\n167             size = random.randrange(50)\n168             data = [random.randrange(25) for i in range(size)]\n",
      "filename": "cpython\\Lib\\test\\test_heapq.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 167,
      "line_range": [
        167
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "167             size = random.randrange(50)\n168             data = [random.randrange(25) for i in range(size)]\n169             if trial & 1:     # Half of the time, use heapify\n",
      "filename": "cpython\\Lib\\test\\test_heapq.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 168,
      "line_range": [
        168
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "180         inputs = []\n181         for i in range(random.randrange(25)):\n182             row = []\n",
      "filename": "cpython\\Lib\\test\\test_heapq.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 181,
      "line_range": [
        181
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "182             row = []\n183             for j in range(random.randrange(100)):\n184                 tup = random.choice('ABC'), random.randrange(-500, 500)\n",
      "filename": "cpython\\Lib\\test\\test_heapq.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 183,
      "line_range": [
        183
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "183             for j in range(random.randrange(100)):\n184                 tup = random.choice('ABC'), random.randrange(-500, 500)\n185                 row.append(tup)\n",
      "filename": "cpython\\Lib\\test\\test_heapq.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 184,
      "line_range": [
        184
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "183             for j in range(random.randrange(100)):\n184                 tup = random.choice('ABC'), random.randrange(-500, 500)\n185                 row.append(tup)\n",
      "filename": "cpython\\Lib\\test\\test_heapq.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 184,
      "line_range": [
        184
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "216         for i in range(20000):\n217             stream = random.randrange(4)\n218             x = random.randrange(500)\n",
      "filename": "cpython\\Lib\\test\\test_heapq.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 217,
      "line_range": [
        217
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "217             stream = random.randrange(4)\n218             x = random.randrange(500)\n219             obj = Int(x)\n",
      "filename": "cpython\\Lib\\test\\test_heapq.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 218,
      "line_range": [
        218
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "227     def test_nsmallest(self):\n228         data = [(random.randrange(2000), i) for i in range(1000)]\n229         for f in (None, lambda x:  x[0] * 547 % 2000):\n",
      "filename": "cpython\\Lib\\test\\test_heapq.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 228,
      "line_range": [
        228
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "236     def test_nlargest(self):\n237         data = [(random.randrange(2000), i) for i in range(1000)]\n238         for f in (None, lambda x:  x[0] * 547 % 2000):\n",
      "filename": "cpython\\Lib\\test\\test_heapq.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 237,
      "line_range": [
        237
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "261                 return self.x >= other.x\n262         data = [random.random() for i in range(100)]\n263         target = sorted(data, reverse=True)\n",
      "filename": "cpython\\Lib\\test\\test_heapq.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 262,
      "line_range": [
        262
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "6 from http import cookies\n7 import pickle\n8 \n9 \n10 class CookieTests(unittest.TestCase):\n",
      "filename": "cpython\\Lib\\test\\test_http_cookies.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 7,
      "line_range": [
        7,
        8,
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "213             with self.subTest(proto=proto):\n214                 C1 = pickle.loads(pickle.dumps(C, protocol=proto))\n215                 self.assertEqual(C1.output(), expected_output)\n",
      "filename": "cpython\\Lib\\test\\test_http_cookies.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 214,
      "line_range": [
        214
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "436             with self.subTest(proto=proto):\n437                 morsel_b = pickle.loads(pickle.dumps(morsel_a, proto))\n438                 self.assertIsInstance(morsel_b, cookies.Morsel)\n",
      "filename": "cpython\\Lib\\test\\test_http_cookies.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 437,
      "line_range": [
        437
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1543     def testHTTPSConnectionSourceAddress(self):\n1544         self.conn = client.HTTPSConnection(HOST, self.port,\n1545                 source_address=('', self.source_port))\n1546         # We don't test anything here other than the constructor not barfing as\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1544,
      "line_range": [
        1544,
        1545
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1680         # simple test to check it's storing the timeout\n1681         h = client.HTTPSConnection(HOST, TimeoutTest.PORT, timeout=30)\n1682         self.assertEqual(h.timeout, 30)\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1681,
      "line_range": [
        1681
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1688         with socket_helper.transient_internet('self-signed.pythontest.net'):\n1689             h = client.HTTPSConnection('self-signed.pythontest.net', 443)\n1690             with self.assertRaises(ssl.SSLError) as exc_info:\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1689,
      "line_range": [
        1689
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1698         with socket_helper.transient_internet('self-signed.pythontest.net'):\n1699             context = ssl._create_unverified_context()\n1700             h = client.HTTPSConnection('self-signed.pythontest.net', 443,\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "By default, Python will create a secure, verified ssl context for use in such classes as HTTPSConnection. However, it still allows using an insecure context via the _create_unverified_context that reverts to the previous behavior that does not validate certificates or perform hostname checks.",
      "line_number": 1699,
      "line_range": [
        1699
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b323-unverified-context",
      "test_id": "B323",
      "test_name": "blacklist"
    },
    {
      "code": "1699             context = ssl._create_unverified_context()\n1700             h = client.HTTPSConnection('self-signed.pythontest.net', 443,\n1701                                        context=context)\n1702             h.request('GET', '/')\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1700,
      "line_range": [
        1700,
        1701
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1712         with socket_helper.transient_internet('www.python.org'):\n1713             h = client.HTTPSConnection('www.python.org', 443)\n1714             h.request('GET', '/')\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1713,
      "line_range": [
        1713
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1731             try:\n1732                 h = client.HTTPSConnection(selfsigned_pythontestdotnet, 443,\n1733                                            context=context)\n1734                 h.request('GET', '/')\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1732,
      "line_range": [
        1732,
        1733
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1760             context.load_verify_locations(CERT_localhost)\n1761             h = client.HTTPSConnection('self-signed.pythontest.net', 443, context=context)\n1762             with self.assertRaises(ssl.SSLError) as exc_info:\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1761,
      "line_range": [
        1761
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1769         server = self.make_server(CERT_localhost)\n1770         h = client.HTTPSConnection('localhost', server.port)\n1771         with self.assertRaises(ssl.SSLError) as exc_info:\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1770,
      "line_range": [
        1770
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1780         context.load_verify_locations(CERT_localhost)\n1781         h = client.HTTPSConnection('localhost', server.port, context=context)\n1782         self.addCleanup(h.close)\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1781,
      "line_range": [
        1781
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1793         context.load_verify_locations(CERT_fakehostname)\n1794         h = client.HTTPSConnection('localhost', server.port, context=context)\n1795         with self.assertRaises(ssl.CertificateError):\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1794,
      "line_range": [
        1794
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1798         with warnings_helper.check_warnings(('', DeprecationWarning)):\n1799             h = client.HTTPSConnection('localhost', server.port,\n1800                                        context=context, check_hostname=True)\n1801         with self.assertRaises(ssl.CertificateError):\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1799,
      "line_range": [
        1799,
        1800
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1805         with warnings_helper.check_warnings(('', DeprecationWarning)):\n1806             h = client.HTTPSConnection('localhost', server.port,\n1807                                        context=context, check_hostname=False)\n1808         h.request('GET', '/nonexistent')\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1806,
      "line_range": [
        1806,
        1807
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1815         context.check_hostname = False\n1816         h = client.HTTPSConnection('localhost', server.port, context=context)\n1817         h.request('GET', '/nonexistent')\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1816,
      "line_range": [
        1816
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1824         with warnings_helper.check_warnings(('', DeprecationWarning)):\n1825             h = client.HTTPSConnection('localhost', server.port,\n1826                                        context=context, check_hostname=True)\n1827         with self.assertRaises(ssl.CertificateError):\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1825,
      "line_range": [
        1825,
        1826
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1845                              443)):\n1846             c = client.HTTPSConnection(hp)\n1847             self.assertEqual(h, c.host)\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1846,
      "line_range": [
        1846
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1854         # just check status of PHA flag\n1855         h = client.HTTPSConnection('localhost', 443)\n1856         self.assertTrue(h._context.post_handshake_auth)\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1855,
      "line_range": [
        1855
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1859         self.assertFalse(context.post_handshake_auth)\n1860         h = client.HTTPSConnection('localhost', 443, context=context)\n1861         self.assertIs(h._context, context)\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1860,
      "line_range": [
        1860
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "1866                                     DeprecationWarning)\n1867             h = client.HTTPSConnection('localhost', 443, context=context,\n1868                                        cert_file=CERT_localhost)\n1869         self.assertTrue(h._context.post_handshake_auth)\n",
      "filename": "cpython\\Lib\\test\\test_httplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1867,
      "line_range": [
        1867,
        1868
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "360                 shutil.rmtree(self.tempdir)\n361             except:\n362                 pass\n",
      "filename": "cpython\\Lib\\test\\test_httpservers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 361,
      "line_range": [
        361
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "455             finally:\n456                 os.chmod(self.tempdir, 0o755)\n457 \n",
      "filename": "cpython\\Lib\\test\\test_httpservers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Chmod setting a permissive mask 0o755 on file (NOT PARSED).",
      "line_number": 456,
      "line_range": [
        456
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "641             fp.write(cgi_file1 % self.pythonexe)\n642         os.chmod(self.nocgi_path, 0o777)\n643 \n",
      "filename": "cpython\\Lib\\test\\test_httpservers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0o777 on file (NOT PARSED).",
      "line_number": 642,
      "line_range": [
        642
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "646             file1.write(cgi_file1 % self.pythonexe)\n647         os.chmod(self.file1_path, 0o777)\n648 \n",
      "filename": "cpython\\Lib\\test\\test_httpservers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0o777 on file (NOT PARSED).",
      "line_number": 647,
      "line_range": [
        647
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "651             file2.write(cgi_file2 % self.pythonexe)\n652         os.chmod(self.file2_path, 0o777)\n653 \n",
      "filename": "cpython\\Lib\\test\\test_httpservers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0o777 on file (NOT PARSED).",
      "line_number": 652,
      "line_range": [
        652
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "656             file3.write(cgi_file1 % self.pythonexe)\n657         os.chmod(self.file3_path, 0o777)\n658 \n",
      "filename": "cpython\\Lib\\test\\test_httpservers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0o777 on file (NOT PARSED).",
      "line_number": 657,
      "line_range": [
        657
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "661             file4.write(cgi_file4 % (self.pythonexe, 'QUERY_STRING'))\n662         os.chmod(self.file4_path, 0o777)\n663 \n",
      "filename": "cpython\\Lib\\test\\test_httpservers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0o777 on file (NOT PARSED).",
      "line_number": 662,
      "line_range": [
        662
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "666             file5.write(cgi_file1 % self.pythonexe)\n667         os.chmod(self.file5_path, 0o777)\n668 \n",
      "filename": "cpython\\Lib\\test\\test_httpservers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0o777 on file (NOT PARSED).",
      "line_number": 667,
      "line_range": [
        667
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "12 import stat\n13 import subprocess\n14 import sys\n",
      "filename": "cpython\\Lib\\test\\test_import\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "125             ):\n126                 exec(f\"from {name} import *\", globals)\n127             self.assertNotIn(b\"invalid_type\", globals)\n",
      "filename": "cpython\\Lib\\test\\test_import\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 126,
      "line_range": [
        126
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "134             ):\n135                 exec(f\"from {name} import *\", globals)\n136             self.assertNotIn(b\"invalid_type\", globals)\n",
      "filename": "cpython\\Lib\\test\\test_import\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 135,
      "line_range": [
        135
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "160                       ext, \"file.\", file=f)\n161                 a = random.randrange(1000)\n162                 b = random.randrange(1000)\n",
      "filename": "cpython\\Lib\\test\\test_import\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 161,
      "line_range": [
        161
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "161                 a = random.randrange(1000)\n162                 b = random.randrange(1000)\n163                 print(\"a =\", a, file=f)\n",
      "filename": "cpython\\Lib\\test\\test_import\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 162,
      "line_range": [
        162
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "218             # This used to crash.\n219             exec('import ' + module, None, namespace)\n220         finally:\n",
      "filename": "cpython\\Lib\\test\\test_import\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 219,
      "line_range": [
        219
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "498             # Test 1: import with added DLL directory\n499             subprocess.check_call([\n500                 pyexe, \"-Sc\", \";\".join([\n501                     \"import os\",\n502                     \"p = os.add_dll_directory({!r})\".format(\n503                         os.path.dirname(depname)),\n504                     \"import _sqlite3\",\n505                     \"p.close\"\n506                 ])],\n507                 stderr=subprocess.STDOUT,\n508                 env=env,\n509                 cwd=os.path.dirname(pyexe))\n510 \n",
      "filename": "cpython\\Lib\\test\\test_import\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 499,
      "line_range": [
        499,
        500,
        501,
        502,
        503,
        504,
        505,
        506,
        507,
        508,
        509
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "512             shutil.copy(depname, tmp2)\n513             subprocess.check_call([pyexe, \"-Sc\", \"import _sqlite3\"],\n514                                     stderr=subprocess.STDOUT,\n515                                     env=env,\n516                                     cwd=os.path.dirname(pyexe))\n517 \n",
      "filename": "cpython\\Lib\\test\\test_import\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 513,
      "line_range": [
        513,
        514,
        515,
        516
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "678             header = f.read(16)\n679             code = marshal.load(f)\n680         constants = list(code.co_consts)\n",
      "filename": "cpython\\Lib\\test\\test_import\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 679,
      "line_range": [
        679
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "762         def check_relative():\n763             exec(\"from . import relimport\", ns)\n764 \n",
      "filename": "cpython\\Lib\\test\\test_import\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 763,
      "line_range": [
        763
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "850     def tearDown(self):\n851         assert sys.path[0] == os.curdir, 'Unexpected sys.path[0]'\n852         del sys.path[0]\n",
      "filename": "cpython\\Lib\\test\\test_import\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 851,
      "line_range": [
        851
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1009         os_helper.create_empty_file(init_file)\n1010         assert os.path.exists(init_file)\n1011 \n1012         # now create a symlink to the tagged package\n1013         # sample -> sample-tagged\n1014         os.symlink(self.tagged, self.package_name, target_is_directory=True)\n",
      "filename": "cpython\\Lib\\test\\test_import\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1010,
      "line_range": [
        1010,
        1011,
        1012,
        1013
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1019 \n1020         assert os.path.isfile(os.path.join(self.package_name, '__init__.py'))\n1021 \n",
      "filename": "cpython\\Lib\\test\\test_import\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1020,
      "line_range": [
        1020
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1033         sys.path[:] = ['.']\n1034         assert os.path.exists(self.package_name)\n1035         assert os.path.exists(os.path.join(self.package_name, '__init__.py'))\n",
      "filename": "cpython\\Lib\\test\\test_import\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1034,
      "line_range": [
        1034
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1034         assert os.path.exists(self.package_name)\n1035         assert os.path.exists(os.path.join(self.package_name, '__init__.py'))\n1036 \n1037         # Try to import the package\n1038         importlib.import_module(self.package_name)\n",
      "filename": "cpython\\Lib\\test\\test_import\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1035,
      "line_range": [
        1035,
        1036,
        1037
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "35         name = 'importlib'\n36         assert name not in sys.builtin_module_names\n37         spec = self.machinery.BuiltinImporter.find_spec(name)\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\builtin\\test_finder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 36,
      "line_range": [
        36
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "71     def test_failure(self):\n72         assert 'importlib' not in sys.builtin_module_names\n73         loader = self.machinery.BuiltinImporter.find_module('importlib')\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\builtin\\test_finder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 72,
      "line_range": [
        72
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "49         name = 'dssdsdfff'\n50         assert name not in sys.builtin_module_names\n51         with self.assertRaises(ImportError) as cm:\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\builtin\\test_loader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 50,
      "line_range": [
        50
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "58         module_name = 'builtin_reload_test'\n59         assert module_name not in sys.builtin_module_names\n60         with util.uncache(module_name):\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\builtin\\test_loader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 59,
      "line_range": [
        59
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "17         bad_name = good_name.upper()\n18         assert good_name != bad_name\n19         finder = self.machinery.FileFinder(util.EXTENSIONS.path,\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\extension\\test_case_sensitivity.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 18,
      "line_range": [
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "92         self.spec = importlib.util.find_spec(self.name)\n93         assert self.spec\n94         self.loader = self.machinery.ExtensionFileLoader(\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\extension\\test_loader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 93,
      "line_range": [
        93
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "20             module.__spec__ = spec\n21             assert not hasattr(module, 'initialized')\n22             self.machinery.FrozenImporter.exec_module(module)\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\frozen\\test_loader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 21,
      "line_range": [
        21
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "80     def test_unloadable(self):\n81         assert self.machinery.FrozenImporter.find_module('_not_real') is None\n82         with self.assertRaises(ImportError) as cm:\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\frozen\\test_loader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 81,
      "line_range": [
        81
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "172     def test_unloadable(self):\n173         assert self.machinery.FrozenImporter.find_module('_not_real') is None\n174         with self.assertRaises(ImportError) as cm:\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\frozen\\test_loader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 173,
      "line_range": [
        173
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "193             mod = types.ModuleType(name)\n194             exec(code, mod.__dict__)\n195             self.assertTrue(hasattr(mod, 'initialized'))\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\frozen\\test_loader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 194,
      "line_range": [
        194
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "70         mod_name = 'top_level'\n71         assert '.' not in mod_name\n72         with self.mock_modules(mod_name) as importer:\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\import_\\test_meta_path.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 71,
      "line_range": [
        71
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "76                 self.__import__(mod_name)\n77                 assert len(log) == 1\n78                 args = log[0][0]\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\import_\\test_meta_path.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 77,
      "line_range": [
        77
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "87         path = [42]\n88         assert '.' in mod_name\n89         with self.mock_modules(pkg_name+'.__init__', mod_name) as importer:\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\import_\\test_meta_path.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 88,
      "line_range": [
        88
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "94                 self.__import__(mod_name)\n95                 assert len(log) == 2\n96                 args = log[1][0]\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\import_\\test_meta_path.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 95,
      "line_range": [
        95
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "82         # Try to import a submodule from a non-package should raise ImportError.\n83         assert not hasattr(sys, '__path__')\n84         with self.assertRaises(ImportError) as cm:\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\import_\\test_packages.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 83,
      "line_range": [
        83
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "21     name = 'MoDuLe'\n22     assert name != name.lower()\n23 \n24     def finder(self, path):\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\source\\test_case_sensitivity.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 22,
      "line_range": [
        22,
        23
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "46         encoding_line = \"# coding={0}\".format(encoding)\n47         assert CODING_RE.match(encoding_line)\n48         source_lines = [encoding_line.encode('utf-8')]\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\source\\test_source_encoding.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 47,
      "line_range": [
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "55         encoding_line = \"# coding=koi8-r\"\n56         assert CODING_RE.match(encoding_line)\n57         source = \"{0}\\na=42\\n\".format(encoding_line).encode(\"koi8-r\")\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\source\\test_source_encoding.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 56,
      "line_range": [
        56
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "40                                for class_name in self.subclass_names]\n41         assert self.subclasses or self.superclasses, self.__class__\n42         self.__test = getattr(self.abc, self._NAME)\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_abc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "504             code = loader.source_to_code(data, path)\n505         exec(code, module.__dict__)\n506         return module\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_abc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 505,
      "line_range": [
        505
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "551             code = loader.get_code('blah')\n552         exec(code, module.__dict__)\n553         self.assertEqual(module.attr, 42)\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_abc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 552,
      "line_range": [
        552
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "652         module = types.ModuleType('blah')\n653         exec(code, module.__dict__)\n654         self.assertEqual(module.attr, 42)\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_abc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 653,
      "line_range": [
        653
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "682         module = types.ModuleType('blah')\n683         exec(code, module.__dict__)\n684         self.assertEqual(module.attr, 42)\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_abc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 683,
      "line_range": [
        683
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "792         module.__path__ = []\n793         exec(code_object, module.__dict__)\n794         self.verify_module(module)\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_abc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 793,
      "line_range": [
        793
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "916         for source_mtime in (0, 2):\n917             assert source_mtime != self.loader.source_mtime\n918             original = self.loader.source_mtime\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_abc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 917,
      "line_range": [
        917
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "992         source = \"# coding: Latin-1\\nx='\u00fc'\"\n993         assert source.encode('latin-1') != source.encode('utf-8')\n994         mock.source = source.encode('latin-1')\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_abc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 993,
      "line_range": [
        993
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "13         actual = files.joinpath('utf-8.file').read_bytes()\n14         assert actual == b'Hello, UTF-8 world!\\n'\n15 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_files.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "18         actual = files.joinpath('utf-8.file').read_text()\n19         assert actual == 'Hello, UTF-8 world!\\n'\n20 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_files.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 19,
      "line_range": [
        19
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "25     def test_traversable(self):\n26         assert isinstance(resources.files(self.data), Traversable)\n27 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_files.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 26,
      "line_range": [
        26
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "50     def exec_module(self, module):\n51         exec(self.source_code, module.__dict__)\n52         self.loaded = module\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_lazy.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 51,
      "line_range": [
        51
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "80         importer = TestingImporter()\n81         assert importer.loaded is None\n82         with test_util.uncache(importer.module_name):\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_lazy.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 81,
      "line_range": [
        81
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4 import json\n5 import pickle\n6 import textwrap\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "27         dist = Distribution.from_name('distinfo-pkg')\n28         assert isinstance(dist.version, str)\n29         assert re.match(self.version_pattern, dist.version)\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 28,
      "line_range": [
        28
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "28         assert isinstance(dist.version, str)\n29         assert re.match(self.version_pattern, dist.version)\n30 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 29,
      "line_range": [
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "44 \n45         assert \"metadata\" in str(ctx.exception)\n46 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 45,
      "line_range": [
        45
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "73             )\n74         assert ep.load() is importlib.metadata\n75 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 74,
      "line_range": [
        74
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "97         pkg_name = self.pkg_with_dashes(self.site_dir)\n98         assert version(pkg_name) == '1.0'\n99 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 98,
      "line_range": [
        98
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "117         pkg_name = self.pkg_with_mixed_case(self.site_dir)\n118         assert version(pkg_name) == '1.0'\n119         assert version(pkg_name.lower()) == '1.0'\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 118,
      "line_range": [
        118
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "118         assert version(pkg_name) == '1.0'\n119         assert version(pkg_name.lower()) == '1.0'\n120         assert version(pkg_name.upper()) == '1.0'\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 119,
      "line_range": [
        119
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "119         assert version(pkg_name.lower()) == '1.0'\n120         assert version(pkg_name.upper()) == '1.0'\n121 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 120,
      "line_range": [
        120
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "156         meta = metadata(pkg_name)\n157         assert meta['Description'] == 'p\u00f4r\u02c8tend'\n158 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 157,
      "line_range": [
        157
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "161         meta = metadata(pkg_name)\n162         assert meta.get_payload() == 'p\u00f4r\u02c8tend\\n'\n163 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 162,
      "line_range": [
        162
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "170         dists = list(distributions())\n171         assert all(\n172             isinstance(dist, Distribution)\n173             for dist in dists\n174             )\n175         assert any(\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 171,
      "line_range": [
        171,
        172,
        173,
        174
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "174             )\n175         assert any(\n176             dist.metadata['Name'] == 'egginfo-pkg'\n177             for dist in dists\n178             )\n179         assert any(\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 175,
      "line_range": [
        175,
        176,
        177,
        178
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "178             )\n179         assert any(\n180             dist.metadata['Name'] == 'distinfo-pkg'\n181             for dist in dists\n182             )\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 179,
      "line_range": [
        179,
        180,
        181
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "237     def test_entry_point_pickleable(self):\n238         revived = pickle.loads(pickle.dumps(self.ep))\n239         assert revived == self.ep\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 238,
      "line_range": [
        238
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "238         revived = pickle.loads(pickle.dumps(self.ep))\n239         assert revived == self.ep\n240 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 239,
      "line_range": [
        239
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "246     def test_repr(self):\n247         assert 'EntryPoint' in repr(self.ep)\n248         assert 'name=' in repr(self.ep)\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 247,
      "line_range": [
        247
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "247         assert 'EntryPoint' in repr(self.ep)\n248         assert 'name=' in repr(self.ep)\n249         assert \"'name'\" in repr(self.ep)\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 248,
      "line_range": [
        248
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "248         assert 'name=' in repr(self.ep)\n249         assert \"'name'\" in repr(self.ep)\n250 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 249,
      "line_range": [
        249
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "262     def test_module(self):\n263         assert self.ep.module == 'value'\n264 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 263,
      "line_range": [
        263
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "265     def test_attr(self):\n266         assert self.ep.attr is None\n267 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 266,
      "line_range": [
        266
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "23         pkg_version = version('egginfo-pkg')\n24         assert isinstance(pkg_version, str)\n25         assert re.match(self.version_pattern, pkg_version)\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "24         assert isinstance(pkg_version, str)\n25         assert re.match(self.version_pattern, pkg_version)\n26 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 25,
      "line_range": [
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "28         pkg_version = version('distinfo-pkg')\n29         assert isinstance(pkg_version, str)\n30         assert re.match(self.version_pattern, pkg_version)\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 29,
      "line_range": [
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "29         assert isinstance(pkg_version, str)\n30         assert re.match(self.version_pattern, pkg_version)\n31 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 30,
      "line_range": [
        30
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "55         md = metadata('egginfo-pkg')\n56         assert md['author'] == 'Steven Ma'\n57         assert md['LICENSE'] == 'Unknown'\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 56,
      "line_range": [
        56
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "56         assert md['author'] == 'Steven Ma'\n57         assert md['LICENSE'] == 'Unknown'\n58         assert md['Name'] == 'egginfo-pkg'\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 57,
      "line_range": [
        57
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "57         assert md['LICENSE'] == 'Unknown'\n58         assert md['Name'] == 'egginfo-pkg'\n59         classifiers = md.get_all('Classifier')\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 58,
      "line_range": [
        58
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "59         classifiers = md.get_all('Classifier')\n60         assert 'Topic :: Software Development :: Libraries' in classifiers\n61 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 60,
      "line_range": [
        60
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "65         for file in files:\n66             assert file.root == root\n67             assert not file.hash or file.hash.value\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 66,
      "line_range": [
        66
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "66             assert file.root == root\n67             assert not file.hash or file.hash.value\n68             assert not file.hash or file.hash.mode == 'sha256'\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 67,
      "line_range": [
        67
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "67             assert not file.hash or file.hash.value\n68             assert not file.hash or file.hash.mode == 'sha256'\n69             assert not file.size or file.size >= 0\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 68,
      "line_range": [
        68
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "68             assert not file.hash or file.hash.mode == 'sha256'\n69             assert not file.size or file.size >= 0\n70             assert file.locate().exists()\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 69,
      "line_range": [
        69
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "69             assert not file.size or file.size >= 0\n70             assert file.locate().exists()\n71             assert isinstance(file.read_binary(), bytes)\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 70,
      "line_range": [
        70
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "70             assert file.locate().exists()\n71             assert isinstance(file.read_binary(), bytes)\n72             if file.name.endswith('.py'):\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 71,
      "line_range": [
        71
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "100         deps = requires('egginfo-pkg')\n101         assert len(deps) == 2\n102         assert any(\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 101,
      "line_range": [
        101
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "101         assert len(deps) == 2\n102         assert any(\n103             dep == 'wheel >= 1.0; python_version >= \"2.7\"'\n104             for dep in deps\n105             )\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 102,
      "line_range": [
        102,
        103,
        104
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "108         deps = requires('distinfo-pkg')\n109         assert len(deps) == 2\n110         assert all(deps)\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 109,
      "line_range": [
        109
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "109         assert len(deps) == 2\n110         assert all(deps)\n111         assert 'wheel >= 1.0' in deps\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 110,
      "line_range": [
        110
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "110         assert all(deps)\n111         assert 'wheel >= 1.0' in deps\n112         assert \"pytest; extra == 'test'\" in deps\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 111,
      "line_range": [
        111
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "111         assert 'wheel >= 1.0' in deps\n112         assert \"pytest; extra == 'test'\" in deps\n113 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 112,
      "line_range": [
        112
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "139 \n140         assert deps == expected\n141 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 140,
      "line_range": [
        140
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "145         dists = Distribution.discover(path=[str(self.site_dir)])\n146         assert any(\n147             dist.metadata['Name'] == 'distinfo-pkg'\n148             for dist in dists\n149             )\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 146,
      "line_range": [
        146,
        147,
        148
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "155         dist = Distribution.at(dist_info_path)\n156         assert dist.version == '1.0.0'\n157 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 156,
      "line_range": [
        156
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "160         dist = Distribution.at(str(dist_info_path))\n161         assert dist.version == '1.0.0'\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_metadata_api.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 161,
      "line_range": [
        161
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "36         with resources.path(self.data, 'utf-8.file') as path:\n37             assert 'data' in str(path)\n38 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_path.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 37,
      "line_range": [
        37
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "16         while self.package_name in sys.modules:\n17             self.package_name += random.choice(string.ascii_letters)\n18         self.module_name = self.package_name + '.foo'\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_pkg_import.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 17,
      "line_range": [
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "62         while var in dir(__builtins__):\n63             var += random.choice(string.ascii_letters)\n64 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_pkg_import.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 63,
      "line_range": [
        63
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "32         # This will fail if random is not completely initialized\n33         x = random.randrange(1, 3)\n34     except Exception as e:\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_threaded_import.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 33,
      "line_range": [
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "80         # Otherwise not.\n81         assert imp.lock_held()\n82         with self.lock:\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_threaded_import.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 81,
      "line_range": [
        81
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "29         source_bytes = source.encode('latin-1')\n30         assert source_bytes != source.encode('utf-8')\n31         self.assertEqual(self.util.decode_source(source_bytes), source)\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 30,
      "line_range": [
        30
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "20         file = self.resources.enter_context(resources.as_file(pkg_file))\n21         assert file.name.startswith('example-'), file.name\n22         sys.path.insert(0, str(file))\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_zip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 21,
      "line_range": [
        21
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "54             path = str(file.dist.locate_file(file))\n55             assert '.whl/' in path, path\n56 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_zip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 55,
      "line_range": [
        55
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "58         dists = list(distributions(path=sys.path[:1]))\n59         assert len(dists) == 1\n60 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_zip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 59,
      "line_range": [
        59
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "73             path = str(file.dist.locate_file(file))\n74             assert '.egg/' in path, path\n",
      "filename": "cpython\\Lib\\test\\test_importlib\\test_zip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 74,
      "line_range": [
        74
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "130         pyc_f.seek(16)\n131         return marshal.load(pyc_f)\n132 \n",
      "filename": "cpython\\Lib\\test\\test_importlib\\util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 131,
      "line_range": [
        131
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "257             def __len__(self):\n258                 assert False, \"__len__ should not be invoked\"\n259             def __getitem__(self, key):\n",
      "filename": "cpython\\Lib\\test\\test_index.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 258,
      "line_range": [
        258
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "11 import _pickle\n12 import pickle\n13 import shutil\n",
      "filename": "cpython\\Lib\\test\\test_inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "76         symbols = {}\n77         exec(fn_text, symbols, symbols)\n78         yield symbols['foo']\n",
      "filename": "cpython\\Lib\\test\\test_inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 77,
      "line_range": [
        77
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "95     def istest(self, predicate, exp):\n96         obj = eval(exp)\n97         self.assertTrue(predicate(obj), '%s(%s)' % (predicate.__name__, exp))\n",
      "filename": "cpython\\Lib\\test\\test_inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 96,
      "line_range": [
        96
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "556         m.__loader__ = \"dummy\"  # pretend the filename is understood by a loader\n557         exec(\"def x(): pass\", m.__dict__)\n558         self.assertEqual(inspect.getsourcefile(m.x.__code__), '<string>')\n",
      "filename": "cpython\\Lib\\test\\test_inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 557,
      "line_range": [
        557
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "573             ns = {}\n574             exec(compile(source, fn, 'single'), ns)\n575             inspect.getsource(ns[\"x\"])\n",
      "filename": "cpython\\Lib\\test\\test_inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 574,
      "line_range": [
        574
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1414         ns = {}\n1415         exec(code, ns)\n1416         return ns[\"f\"], ns\n",
      "filename": "cpython\\Lib\\test\\test_inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 1415,
      "line_range": [
        1415
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1440         locs = dict(locs or {}, func=func)\n1441         r1 = eval('func(%s)' % call_params_string, None, locs)\n1442         r2 = eval('inspect.getcallargs(func, %s)' % call_params_string, None,\n",
      "filename": "cpython\\Lib\\test\\test_inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 1441,
      "line_range": [
        1441
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1441         r1 = eval('func(%s)' % call_params_string, None, locs)\n1442         r2 = eval('inspect.getcallargs(func, %s)' % call_params_string, None,\n1443                   locs)\n1444         self.assertEqual(r1, r2)\n",
      "filename": "cpython\\Lib\\test\\test_inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 1442,
      "line_range": [
        1442,
        1443
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1448         try:\n1449             eval('func(%s)' % call_param_string, None, locs)\n1450         except Exception as e:\n",
      "filename": "cpython\\Lib\\test\\test_inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 1449,
      "line_range": [
        1449
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1454         try:\n1455             eval('inspect.getcallargs(func, %s)' % call_param_string, None,\n1456                  locs)\n1457         except Exception as e:\n",
      "filename": "cpython\\Lib\\test\\test_inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 1455,
      "line_range": [
        1455,
        1456
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1467         code = \"lambda %s: locals()\"\n1468         return eval(code % signature)\n1469 \n",
      "filename": "cpython\\Lib\\test\\test_inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 1468,
      "line_range": [
        1468
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1645     def makeCallable(self, signature):\n1646         assert 'self' not in signature\n1647         mk = super(TestGetcallargsMethods, self).makeCallable\n",
      "filename": "cpython\\Lib\\test\\test_inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1646,
      "line_range": [
        1646
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1665     def _getAssertEqualParams(self, func, call_params_string, locs=None):\n1666         assert 'inst' not in call_params_string\n1667         locs = dict(locs or {}, inst=self.inst)\n",
      "filename": "cpython\\Lib\\test\\test_inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1666,
      "line_range": [
        1666
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2172             with self.subTest(pickle_ver=ver, subclass=False):\n2173                 sig_pickled = pickle.loads(pickle.dumps(sig, ver))\n2174                 self.assertEqual(sig, sig_pickled)\n",
      "filename": "cpython\\Lib\\test\\test_inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 2173,
      "line_range": [
        2173
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2186             with self.subTest(pickle_ver=ver, subclass=True):\n2187                 sig_pickled = pickle.loads(pickle.dumps(mysig, ver))\n2188                 self.assertEqual(mysig, sig_pickled)\n",
      "filename": "cpython\\Lib\\test\\test_inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 2187,
      "line_range": [
        2187
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "3676             with self.subTest(pickle_ver=ver):\n3677                 ba_pickled = pickle.loads(pickle.dumps(ba, ver))\n3678                 self.assertEqual(ba, ba_pickled)\n",
      "filename": "cpython\\Lib\\test\\test_inspect.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 3677,
      "line_range": [
        3677
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "220                 continue\n221             self.assertEqual(int(lit, 0), eval(lit))\n222             self.assertEqual(int(lit, 0), int(lit.replace('_', ''), 0))\n",
      "filename": "cpython\\Lib\\test\\test_int.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 221,
      "line_range": [
        221
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "26 import os\n27 import pickle\n28 import random\n",
      "filename": "cpython\\Lib\\test\\test_io.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 27,
      "line_range": [
        27
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "387     def large_file_ops(self, f):\n388         assert f.readable()\n389         assert f.writable()\n",
      "filename": "cpython\\Lib\\test\\test_io.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 388,
      "line_range": [
        388
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "388         assert f.readable()\n389         assert f.writable()\n390         try:\n",
      "filename": "cpython\\Lib\\test\\test_io.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 389,
      "line_range": [
        389
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1360         b = array.array('i', b'x' * 32)\n1361         assert len(b) != 16\n1362 \n1363         # Read into it. We should get as many *bytes* as we can fit into b\n1364         # (which is more than the number of elements)\n1365         n = bufio.readinto(b)\n",
      "filename": "cpython\\Lib\\test\\test_io.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1361,
      "line_range": [
        1361,
        1362,
        1363,
        1364
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1381         b = array.array('i', b'x' * 32)\n1382         assert len(b) != 16\n1383 \n1384         # Read into it. We should get as many *bytes* as we can fit into b\n1385         # (which is more than the number of elements)\n1386         n = bufio.readinto1(b)\n",
      "filename": "cpython\\Lib\\test\\test_io.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1382,
      "line_range": [
        1382,
        1383,
        1384,
        1385
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2326         def mutate(bufio, pos1, pos2):\n2327             assert pos2 >= pos1\n2328             # Fill the buffer\n2329             bufio.seek(pos1)\n",
      "filename": "cpython\\Lib\\test\\test_io.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2327,
      "line_range": [
        2327,
        2328
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3565                 self.TextIOWrapper(F(), encoding='utf-8')\n3566             except Exception:\n3567                 pass\n",
      "filename": "cpython\\Lib\\test\\test_io.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 3566,
      "line_range": [
        3566
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "10 import operator\n11 import pickle\n12 import ipaddress\n",
      "filename": "cpython\\Lib\\test\\test_ipaddress.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "91                 x = self.factory(addr)\n92                 y = pickle.loads(pickle.dumps(x, proto))\n93                 self.assertEqual(y, x)\n",
      "filename": "cpython\\Lib\\test\\test_ipaddress.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 92,
      "line_range": [
        92
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "7 from test.support import check_free_after_iterating, ALWAYS_EQ, NEVER_EQ\n8 import pickle\n9 import collections.abc\n",
      "filename": "cpython\\Lib\\test\\test_iter.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "113             d = pickle.dumps(itorg, proto)\n114             it = pickle.loads(d)\n115             # Cannot assert type equality because dict iterators unpickle as list\n",
      "filename": "cpython\\Lib\\test\\test_iter.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 114,
      "line_range": [
        114
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "120 \n121             it = pickle.loads(d)\n122             try:\n",
      "filename": "cpython\\Lib\\test\\test_iter.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 121,
      "line_range": [
        121
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "126             d = pickle.dumps(it, proto)\n127             it = pickle.loads(d)\n128             self.assertEqual(list(it), seq[1:])\n",
      "filename": "cpython\\Lib\\test\\test_iter.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 127,
      "line_range": [
        127
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "189             d = pickle.dumps((itorig, orig), proto)\n190             it, seq = pickle.loads(d)\n191             seq.n = 7\n",
      "filename": "cpython\\Lib\\test\\test_iter.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 190,
      "line_range": [
        190
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "197             d = pickle.dumps((itorig, orig), proto)\n198             it, seq = pickle.loads(d)\n199             seq.n = 7\n",
      "filename": "cpython\\Lib\\test\\test_iter.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 198,
      "line_range": [
        198
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "206             d = pickle.dumps((itorig, orig), proto)\n207             it, seq = pickle.loads(d)\n208             seq.n = 7\n",
      "filename": "cpython\\Lib\\test\\test_iter.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 207,
      "line_range": [
        207
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "214             d = pickle.dumps((itorig, orig), proto)\n215             it, seq = pickle.loads(d)\n216             seq.n = 7\n",
      "filename": "cpython\\Lib\\test\\test_iter.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 215,
      "line_range": [
        215
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "890                 cls = self.__class__\n891                 assert cls.count > 0\n892                 cls.count -= 1\n",
      "filename": "cpython\\Lib\\test\\test_iter.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 891,
      "line_range": [
        891
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "9 import copy\n10 import pickle\n11 from functools import reduce\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "76 \n77 picklecopiers = [lambda s, proto=proto: pickle.loads(pickle.dumps(s, proto))\n78                  for proto in range(pickle.HIGHEST_PROTOCOL + 1)]\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 77,
      "line_range": [
        77
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "97         dump = pickle.dumps(it, protocol)\n98         i2 = pickle.loads(dump)\n99         self.assertEqual(type(it), type(i2))\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 98,
      "line_range": [
        98
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "106         # Take from the copy, and create another copy and compare them.\n107         i3 = pickle.loads(dump)\n108         took = 0\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 107,
      "line_range": [
        107
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "115         dump = pickle.dumps(i3, protocol)\n116         i4 = pickle.loads(dump)\n117         a, b = expand(i3), expand(i4)\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 116,
      "line_range": [
        116
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "642         for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n643             self.assertEqual(take(10, pickle.loads(pickle.dumps(c, proto))),\n644                              list('bcabcabcab'))\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 643,
      "line_range": [
        643
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "645             next(c)\n646             self.assertEqual(take(10, pickle.loads(pickle.dumps(c, proto))),\n647                              list('cabcabcabc'))\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 646,
      "line_range": [
        646
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "658             p = pickle.dumps(c, proto)\n659             d = pickle.loads(p)                  # rebuild the cycle object\n660             self.assertEqual(take(20, d), list('cdeabcdeabcdeabcdeab'))\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 659,
      "line_range": [
        659
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "666             p = pickle.dumps(c, proto)\n667             d = pickle.loads(p)                  # rebuild the cycle object\n668             self.assertEqual(take(20, d), list('cdeabcdeabcdeabcdeab'))\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 667,
      "line_range": [
        667
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "726             dup = []\n727             for k, g in pickle.loads(pickle.dumps(groupby(s, testR), proto)):\n728                 for elem in g:\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 727,
      "line_range": [
        727
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "745             dup = []\n746             for k, g in pickle.loads(pickle.dumps(groupby(s, testR), proto)):\n747                 for ik, ig in pickle.loads(pickle.dumps(groupby(g, testR2), proto)):\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 746,
      "line_range": [
        746
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "746             for k, g in pickle.loads(pickle.dumps(groupby(s, testR), proto)):\n747                 for ik, ig in pickle.loads(pickle.dumps(groupby(g, testR2), proto)):\n748                     for elem in ig:\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 747,
      "line_range": [
        747
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "778             next(it)\n779             self.assertEqual(list(pickle.loads(pickle.dumps(g, proto))), [])\n780 \n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 779,
      "line_range": [
        779
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "855             c = filter(isEven, range(6))\n856             self.assertEqual(list(pickle.loads(pickle.dumps(c, proto))), ans)\n857             next(c)\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 856,
      "line_range": [
        856
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "857             next(c)\n858             self.assertEqual(list(pickle.loads(pickle.dumps(c, proto))), ans[1:])\n859         for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 858,
      "line_range": [
        858
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "906         for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n907             ans = [(x,y) for x, y in pickle.loads(pickle.dumps(zip('abc',count()), proto))]\n908             self.assertEqual(ans, [('a', 0), ('b', 1), ('c', 2)])\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 907,
      "line_range": [
        907
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "912             next(testIntermediate)\n913             ans = [(x,y) for x, y in pickle.loads(pickle.dumps(testIntermediate, proto))]\n914             self.assertEqual(ans, [('b', 1), ('c', 2)])\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 913,
      "line_range": [
        913
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "949             try:\n950                 eval(stmt, globals(), locals())\n951             except TypeError:\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 950,
      "line_range": [
        950
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1076         for i in range(100):\n1077             args = [random.choice(argtypes) for j in range(random.randrange(5))]\n1078             expected_len = prod(map(len, args))\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1077,
      "line_range": [
        1077
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1076         for i in range(100):\n1077             args = [random.choice(argtypes) for j in range(random.randrange(5))]\n1078             expected_len = prod(map(len, args))\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1077,
      "line_range": [
        1077
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1568             it = accumulate(data)\n1569             self.assertEqual(list(pickle.loads(pickle.dumps(it, proto))), accumulated[:])\n1570             self.assertEqual(next(it), 1)\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1569,
      "line_range": [
        1569
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1570             self.assertEqual(next(it), 1)\n1571             self.assertEqual(list(pickle.loads(pickle.dumps(it, proto))), accumulated[1:])\n1572         it = accumulate(data)\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1571,
      "line_range": [
        1571
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1581         for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n1582             it_copy = pickle.loads(pickle.dumps(it, proto))\n1583             self.assertEqual(list(it_copy), [True, False])\n",
      "filename": "cpython\\Lib\\test\\test_itertools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1582,
      "line_range": [
        1582
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "26              (\"qrt\", 5), (\"pad\", 6), (\"hoy\", 7)]\n27         self.assertEqual(self.loads(s), eval(s))\n28         self.assertEqual(self.loads(s, object_pairs_hook=lambda x: x), p)\n",
      "filename": "cpython\\Lib\\test\\test_json\\test_decode.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 27,
      "line_range": [
        27
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "5 import unittest\n6 import subprocess\n7 \n8 from test import support\n",
      "filename": "cpython\\Lib\\test\\test_json\\test_tool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 6,
      "line_range": [
        6,
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "89         args = sys.executable, '-m', 'json.tool'\n90         process = subprocess.run(args, input=self.data, capture_output=True, text=True, check=True)\n91         self.assertEqual(process.stdout, self.expect)\n",
      "filename": "cpython\\Lib\\test\\test_json\\test_tool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 90,
      "line_range": [
        90
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "135         args = sys.executable, '-m', 'json.tool', '--json-lines'\n136         process = subprocess.run(args, input=self.jsonlines_raw, capture_output=True, text=True, check=True)\n137         self.assertEqual(process.stdout, self.jsonlines_expect)\n",
      "filename": "cpython\\Lib\\test\\test_json\\test_tool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 136,
      "line_range": [
        136
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "162         args = sys.executable, '-m', 'json.tool', '--indent', '2'\n163         process = subprocess.run(args, input=input_, capture_output=True, text=True, check=True)\n164         self.assertEqual(process.stdout, expect)\n",
      "filename": "cpython\\Lib\\test\\test_json\\test_tool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 163,
      "line_range": [
        163
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "170         args = sys.executable, '-m', 'json.tool', '--no-indent'\n171         process = subprocess.run(args, input=input_, capture_output=True, text=True, check=True)\n172         self.assertEqual(process.stdout, expect)\n",
      "filename": "cpython\\Lib\\test\\test_json\\test_tool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 171,
      "line_range": [
        171
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "178         args = sys.executable, '-m', 'json.tool', '--tab'\n179         process = subprocess.run(args, input=input_, capture_output=True, text=True, check=True)\n180         self.assertEqual(process.stdout, expect)\n",
      "filename": "cpython\\Lib\\test\\test_json\\test_tool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 179,
      "line_range": [
        179
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "186         args = sys.executable, '-m', 'json.tool', '--compact'\n187         process = subprocess.run(args, input=input_, capture_output=True, text=True, check=True)\n188         self.assertEqual(process.stdout, expect)\n",
      "filename": "cpython\\Lib\\test\\test_json\\test_tool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 187,
      "line_range": [
        187
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "215         cmd = [sys.executable, '-m', 'json.tool']\n216         proc = subprocess.Popen(cmd,\n217                                 stdout=subprocess.PIPE,\n218                                 stdin=subprocess.PIPE)\n219         # bpo-39828: Closing before json.tool attempts to write into stdout.\n",
      "filename": "cpython\\Lib\\test\\test_json\\test_tool.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 216,
      "line_range": [
        216,
        217,
        218
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "85              (\"qrt\", 5), (\"pad\", 6), (\"hoy\", 7)]\n86         self.assertEqual(self.loads(s), eval(s))\n87         self.assertEqual(self.loads(s, object_pairs_hook = lambda x: x), p)\n",
      "filename": "cpython\\Lib\\test\\test_json\\test_unicode.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 86,
      "line_range": [
        86
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "25             with self.assertRaises(SyntaxError):\n26                 exec(f\"{key} = 42\")\n27 \n",
      "filename": "cpython\\Lib\\test\\test_keyword.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 26,
      "line_range": [
        26
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "3 from test.support import cpython_only\n4 import pickle\n5 import unittest\n",
      "filename": "cpython\\Lib\\test\\test_list.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "87             d = pickle.dumps((itorig, orig), proto)\n88             it, a = pickle.loads(d)\n89             a[:] = data\n",
      "filename": "cpython\\Lib\\test\\test_list.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 88,
      "line_range": [
        88
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "95             d = pickle.dumps((itorig, orig), proto)\n96             it, a = pickle.loads(d)\n97             a[:] = data\n",
      "filename": "cpython\\Lib\\test\\test_list.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 96,
      "line_range": [
        96
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "104             d = pickle.dumps((itorig, orig), proto)\n105             it, a = pickle.loads(d)\n106             a[:] = data\n",
      "filename": "cpython\\Lib\\test\\test_list.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 105,
      "line_range": [
        105
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "112             d = pickle.dumps((itorig, orig), proto)\n113             it, a = pickle.loads(d)\n114             a[:] = data\n",
      "filename": "cpython\\Lib\\test\\test_list.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 113,
      "line_range": [
        113
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "123             d = pickle.dumps((itorig, orig), proto)\n124             it, a = pickle.loads(d)\n125             a[:] = data\n",
      "filename": "cpython\\Lib\\test\\test_list.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 124,
      "line_range": [
        124
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "131             d = pickle.dumps((itorig, orig), proto)\n132             it, a = pickle.loads(d)\n133             a[:] = data\n",
      "filename": "cpython\\Lib\\test\\test_list.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 132,
      "line_range": [
        132
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "140             d = pickle.dumps((itorig, orig), proto)\n141             it, a = pickle.loads(d)\n142             a[:] = data\n",
      "filename": "cpython\\Lib\\test\\test_list.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 141,
      "line_range": [
        141
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "148             d = pickle.dumps((itorig, orig), proto)\n149             it, a = pickle.loads(d)\n150             a[:] = data\n",
      "filename": "cpython\\Lib\\test\\test_list.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 149,
      "line_range": [
        149
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "30 import pathlib\n31 import pickle\n32 import io\n",
      "filename": "cpython\\Lib\\test\\test_logging.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 31,
      "line_range": [
        31
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "633                     pass\n634                 time.sleep(0.004 * random.randint(0, 4))\n635 \n",
      "filename": "cpython\\Lib\\test\\test_logging.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 634,
      "line_range": [
        634
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1728                 chunk = chunk + conn.recv(slen - len(chunk))\n1729             obj = pickle.loads(chunk)\n1730             record = logging.makeLogRecord(obj)\n",
      "filename": "cpython\\Lib\\test\\test_logging.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1729,
      "line_range": [
        1729
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1835         packet = request.packet[len(slen):]\n1836         obj = pickle.loads(packet)\n1837         record = logging.makeLogRecord(obj)\n",
      "filename": "cpython\\Lib\\test\\test_logging.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1836,
      "line_range": [
        1836
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "5035                 s = pickle.dumps(logger, proto)\n5036                 unpickled = pickle.loads(s)\n5037                 self.assertIs(unpickled, logger)\n",
      "filename": "cpython\\Lib\\test\\test_logging.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 5036,
      "line_range": [
        5036
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "73     # Checks: q is exactly representable, and q**2**shift doesn't overflow.\n74     assert q % 4 == 0 and q // 4 <= 2**(sys.float_info.mant_dig)\n75     assert q * 2**shift <= sys.float_info.max\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 74,
      "line_range": [
        74
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "74     assert q % 4 == 0 and q // 4 <= 2**(sys.float_info.mant_dig)\n75     assert q * 2**shift <= sys.float_info.max\n76 \n77     # Some circularity here, since float(q) is doing an int-to-float\n78     # conversion.  But here q is of bounded size, and is exactly representable\n79     # as a float.  In a low-level C-like language, this operation would be a\n80     # simple cast (e.g., from unsigned long long to double).\n81     return math.ldexp(float(q), shift)\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 75,
      "line_range": [
        75,
        76,
        77,
        78,
        79,
        80
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "128         nbits = 0\n129         r = int(random.random() * (SHIFT * 2)) | 1  # force 1 bits to start\n130         while nbits < nbits_lo:\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 129,
      "line_range": [
        129
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "137                 answer = answer | ((1 << bits) - 1)\n138             r = int(random.random() * (SHIFT * 2))\n139         self.assertTrue(nbits_lo <= nbits <= nbits_hi)\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 138,
      "line_range": [
        138
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "139         self.assertTrue(nbits_lo <= nbits <= nbits_hi)\n140         if random.random() < 0.5:\n141             answer = -answer\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 140,
      "line_range": [
        140
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "149         for i in range(ndigits):\n150             answer = (answer << SHIFT) | random.randint(0, MASK)\n151         if random.random() < 0.5:\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 150,
      "line_range": [
        150
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "150             answer = (answer << SHIFT) | random.randint(0, MASK)\n151         if random.random() < 0.5:\n152             answer = -answer\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 151,
      "line_range": [
        151
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "548                     f, e = math.frexp(abs(value))\n549                     assert f == 0 or 0.5 <= f < 1.0\n550                     # |value| = f * 2**e exactly\n551 \n552                     # Suck up CHUNK bits at a time; 28 is enough so that we suck\n553                     # up all bits in 2 iterations for all known binary double-\n554                     # precision formats, and small enough to fit in an int.\n555                     CHUNK = 28\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 549,
      "line_range": [
        549,
        550,
        551,
        552,
        553,
        554
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "560                         digit = int(f)\n561                         assert digit >> CHUNK == 0\n562                         top = (top << CHUNK) | digit\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 561,
      "line_range": [
        561
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "563                         f -= digit\n564                         assert 0.0 <= f < 1.0\n565                         e -= CHUNK\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 564,
      "line_range": [
        564
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "577                     self.d = d\n578                     assert float(n) / float(d) == value\n579                 else:\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 578,
      "line_range": [
        578
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "767                          \"100 / mhuge\", \"200 / mhuge\"]:\n768             result = eval(underflow, namespace)\n769             self.assertEqual(result, 0.0,\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 768,
      "line_range": [
        768
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "897             for i in range(1000):\n898                 a = random.randrange(1, M)\n899                 b = random.randrange(a, 2*a+1)\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 898,
      "line_range": [
        898
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "898                 a = random.randrange(1, M)\n899                 b = random.randrange(a, 2*a+1)\n900                 self.check_truediv(a, b)\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 899,
      "line_range": [
        899
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "906         for _ in range(10000):\n907             a_bits = random.randrange(1000)\n908             b_bits = random.randrange(1, 1000)\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 907,
      "line_range": [
        907
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "907             a_bits = random.randrange(1000)\n908             b_bits = random.randrange(1, 1000)\n909             x = random.randrange(2**a_bits)\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 908,
      "line_range": [
        908
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "908             b_bits = random.randrange(1, 1000)\n909             x = random.randrange(2**a_bits)\n910             y = random.randrange(1, 2**b_bits)\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 909,
      "line_range": [
        909
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "909             x = random.randrange(2**a_bits)\n910             y = random.randrange(1, 2**b_bits)\n911             self.check_truediv(x, y)\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 910,
      "line_range": [
        910
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1084             for i in range(100):\n1085                 x = random.randrange(-10000, 10000)\n1086                 got = round(x, n)\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1085,
      "line_range": [
        1085
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1093         for i in range(100):\n1094             x = random.randrange(-10000, 10000)\n1095             got = round(x)\n",
      "filename": "cpython\\Lib\\test\\test_long.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1094,
      "line_range": [
        1094
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "5         REPS = 65580\n6         l = eval(\"[\" + \"2,\" * REPS + \"]\")\n7         self.assertEqual(len(l), REPS)\n",
      "filename": "cpython\\Lib\\test\\test_longexp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "4 import pathlib\n5 import pickle\n6 import random\n",
      "filename": "cpython\\Lib\\test\\test_lzma.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "17     def helper(self, sample, *extra):\n18         new = marshal.loads(marshal.dumps(sample, *extra))\n19         self.assertEqual(sample, new)\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 18,
      "line_range": [
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "23             with open(os_helper.TESTFN, \"rb\") as f:\n24                 new = marshal.load(f)\n25             self.assertEqual(sample, new)\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "44                 s = b'I' + int.to_bytes(base, 8, 'little', signed=True)\n45                 got = marshal.loads(s)\n46                 self.assertEqual(base, got)\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 45,
      "line_range": [
        45
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "51 \n52         got = marshal.loads(b'I\\xfe\\xdc\\xba\\x98\\x76\\x54\\x32\\x10')\n53         self.assertEqual(got, 0x1032547698badcfe)\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 52,
      "line_range": [
        52
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "53         self.assertEqual(got, 0x1032547698badcfe)\n54         got = marshal.loads(b'I\\x01\\x23\\x45\\x67\\x89\\xab\\xcd\\xef')\n55         self.assertEqual(got, -0x1032547698badcff)\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 54,
      "line_range": [
        54
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "55         self.assertEqual(got, -0x1032547698badcff)\n56         got = marshal.loads(b'I\\x08\\x19\\x2a\\x3b\\x4c\\x5d\\x6e\\x7f')\n57         self.assertEqual(got, 0x7f6e5d4c3b2a1908)\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 56,
      "line_range": [
        56
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "57         self.assertEqual(got, 0x7f6e5d4c3b2a1908)\n58         got = marshal.loads(b'I\\xf7\\xe6\\xd5\\xc4\\xb3\\xa2\\x91\\x80')\n59         self.assertEqual(got, -0x7f6e5d4c3b2a1909)\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 58,
      "line_range": [
        58
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "76         s = marshal.dumps(f, 2)\n77         got = marshal.loads(s)\n78         self.assertEqual(f, got)\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 77,
      "line_range": [
        77
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "80         s = marshal.dumps(f, 1)\n81         got = marshal.loads(s)\n82         self.assertEqual(f, got)\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 81,
      "line_range": [
        81
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "94         for s in [\"\", \"Andr\\xe8 Previn\", \"abc\", \" \"*10000]:\n95             self.helper(marshal.loads(marshal.dumps(s)))\n96 \n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 95,
      "line_range": [
        95
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "106     def test_exceptions(self):\n107         new = marshal.loads(marshal.dumps(StopIteration))\n108         self.assertEqual(StopIteration, new)\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 107,
      "line_range": [
        107
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "112         co = ExceptionTestCase.test_exceptions.__code__\n113         new = marshal.loads(marshal.dumps(co))\n114         self.assertEqual(co, new)\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 113,
      "line_range": [
        113
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "119         codes = (ExceptionTestCase.test_exceptions.__code__,) * count\n120         marshal.loads(marshal.dumps(codes))\n121 \n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 120,
      "line_range": [
        120
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "124         co2 = compile(\"y\", \"f2\", \"exec\")\n125         co1, co2 = marshal.loads(marshal.dumps((co1, co2)))\n126         self.assertEqual(co1.co_filename, \"f1\")\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 125,
      "line_range": [
        125
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "132         co = compile(s, \"myfile\", \"exec\")\n133         co = marshal.loads(marshal.dumps(co))\n134         for obj in co.co_consts:\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 133,
      "line_range": [
        133
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "167         self.helper(b)\n168         new = marshal.loads(marshal.dumps(b))\n169         self.assertEqual(type(new), bytes)\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 168,
      "line_range": [
        168
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "173         self.helper(b)\n174         new = marshal.loads(marshal.dumps(b))\n175         self.assertEqual(type(new), bytes)\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 174,
      "line_range": [
        174
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "178         a = array.array('B', b\"abc\")\n179         new = marshal.loads(marshal.dumps(a))\n180         self.assertEqual(new, b\"abc\")\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 179,
      "line_range": [
        179
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "194         # Python 2.4.0 crashes for any call to marshal.dumps(x, y)\n195         self.assertEqual(marshal.loads(marshal.dumps(5, 0)), 5)\n196         self.assertEqual(marshal.loads(marshal.dumps(5, 1)), 5)\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 195,
      "line_range": [
        195
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "195         self.assertEqual(marshal.loads(marshal.dumps(5, 0)), 5)\n196         self.assertEqual(marshal.loads(marshal.dumps(5, 1)), 5)\n197 \n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 196,
      "line_range": [
        196
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "203             try:\n204                 marshal.loads(c)\n205             except Exception:\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 204,
      "line_range": [
        204
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "204                 marshal.loads(c)\n205             except Exception:\n206                 pass\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 205,
      "line_range": [
        205
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "243         data = marshal.dumps(head)\n244         new_head = marshal.loads(data)\n245         # Don't use == to compare objects, it can exceed the recursion limit.\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 244,
      "line_range": [
        244
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "292                     for i, d in enumerate(data):\n293                         self.assertEqual(d, marshal.load(f))\n294                         if ilen:\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 293,
      "line_range": [
        293
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "389             s3 = marshal.dumps(sample, v)\n390             n3 = CollectObjectIDs(set(), marshal.loads(s3))\n391 \n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 390,
      "line_range": [
        390
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "397             s2 = marshal.dumps(sample, 2)\n398             n2 = CollectObjectIDs(set(), marshal.loads(s2))\n399             #old format generated more instances\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 398,
      "line_range": [
        398
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "481         data = marshal.dumps(code, version)\n482         marshal.loads(data)\n483 \n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 482,
      "line_range": [
        482
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "500     def testIntern(self):\n501         s = marshal.loads(marshal.dumps(self.strobj))\n502         self.assertEqual(s, self.strobj)\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 501,
      "line_range": [
        501
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "507     def testNoIntern(self):\n508         s = marshal.loads(marshal.dumps(self.strobj, 2))\n509         self.assertEqual(s, self.strobj)\n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 508,
      "line_range": [
        508
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "532             os_helper.unlink(os_helper.TESTFN)\n533             self.assertEqual(marshal.loads(data), obj)\n534 \n",
      "filename": "cpython\\Lib\\test\\test_marshal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 533,
      "line_range": [
        533
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "680             for i in range(200):\n681                 v = gauss(0, random()) ** 7 - s\n682                 s += v\n",
      "filename": "cpython\\Lib\\test\\test_math.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 681,
      "line_range": [
        681
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "10 import _pyio as pyio\n11 import pickle\n12 import sys\n",
      "filename": "cpython\\Lib\\test\\test_memoryio.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "419             for obj in (memio, submemio):\n420                 obj2 = pickle.loads(pickle.dumps(obj, protocol=proto))\n421                 self.assertEqual(obj.getvalue(), obj2.getvalue())\n",
      "filename": "cpython\\Lib\\test\\test_memoryio.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 420,
      "line_range": [
        420
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "717         def __new__(cls, *args, **kwargs):\n718             return pickle.loads(pickle.dumps(pyio.StringIO(*args, **kwargs)))\n719         def __init__(self, *args, **kwargs):\n",
      "filename": "cpython\\Lib\\test\\test_memoryio.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 718,
      "line_range": [
        718
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "862         def __new__(cls, *args, **kwargs):\n863             return pickle.loads(pickle.dumps(io.StringIO(*args, **kwargs)))\n864         def __init__(self, *args, **kwargs):\n",
      "filename": "cpython\\Lib\\test\\test_memoryio.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 863,
      "line_range": [
        863
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "14 import copy\n15 import pickle\n16 \n17 from test.support import import_helper\n",
      "filename": "cpython\\Lib\\test\\test_memoryview.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 15,
      "line_range": [
        15,
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "3 import copy\n4 import pickle\n5 import io\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "8 \n9 import xml.dom.minidom\n10 \n11 from xml.dom.minidom import parse, Node, Document, parseString\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.dom.minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 9,
      "line_range": [
        9,
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b408-import-xml-minidom",
      "test_id": "B408",
      "test_name": "blacklist"
    },
    {
      "code": "10 \n11 from xml.dom.minidom import parse, Node, Document, parseString\n12 from xml.dom.minidom import getDOMImplementation\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parse with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b408-import-xml-minidom",
      "test_id": "B408",
      "test_name": "blacklist"
    },
    {
      "code": "11 from xml.dom.minidom import parse, Node, Document, parseString\n12 from xml.dom.minidom import getDOMImplementation\n13 \n14 \n15 tstfile = support.findfile(\"test.xml\", subdir=\"xmltestdata\")\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using getDOMImplementation to parse untrusted XML data is known to be vulnerable to XML attacks. Replace getDOMImplementation with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 12,
      "line_range": [
        12,
        13,
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b408-import-xml-minidom",
      "test_id": "B408",
      "test_name": "blacklist"
    },
    {
      "code": "67         with open(tstfile, 'rb') as file:\n68             dom = parse(file)\n69             dom.unlink()\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 68,
      "line_range": [
        68
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "73         with open(tstfile, 'r', encoding='iso-8859-1') as file:\n74             dom = parse(file)\n75             dom.unlink()\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 74,
      "line_range": [
        74
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "78     def testGetElementsByTagName(self):\n79         dom = parse(tstfile)\n80         self.confirm(dom.getElementsByTagName(\"LI\") == \\\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 79,
      "line_range": [
        79
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "84     def testInsertBefore(self):\n85         dom = parseString(\"<doc><foo/></doc>\")\n86         root = dom.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 85,
      "line_range": [
        85
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "127     def _create_fragment_test_nodes(self):\n128         dom = parseString(\"<doc/>\")\n129         orig = dom.createTextNode(\"original\")\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 128,
      "line_range": [
        128
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "157     def testAppendChild(self):\n158         dom = parse(tstfile)\n159         dom.documentElement.appendChild(dom.createComment(\"Hello\"))\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 158,
      "line_range": [
        158
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "220     def testNonZero(self):\n221         dom = parse(tstfile)\n222         self.confirm(dom)# should not be zero\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 221,
      "line_range": [
        221
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "227     def testUnlink(self):\n228         dom = parse(tstfile)\n229         self.assertTrue(dom.childNodes)\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 228,
      "line_range": [
        228
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "233     def testContext(self):\n234         with parse(tstfile) as dom:\n235             self.assertTrue(dom.childNodes)\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 234,
      "line_range": [
        234
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "244     def testAAA(self):\n245         dom = parseString(\"<abc/>\")\n246         el = dom.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 245,
      "line_range": [
        245
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "256     def testAAB(self):\n257         dom = parseString(\"<abc/>\")\n258         el = dom.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 257,
      "line_range": [
        257
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "345     def testChangeAttr(self):\n346         dom = parseString(\"<abc/>\")\n347         el = dom.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 346,
      "line_range": [
        346
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "417         </foo>\"\"\"\n418         dom = parseString(d)\n419         elems = dom.getElementsByTagNameNS(\"http://pyxml.sf.net/minidom\",\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 418,
      "line_range": [
        418
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "434     def testGetEmptyNodeListFromElementsByTagNameNS(self):\n435         doc = parseString('<doc/>')\n436         self.get_empty_nodelist_from_elements_by_tagName_ns_helper(\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 435,
      "line_range": [
        435
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "442 \n443         doc = parseString('<doc xmlns=\"http://xml.python.org/splat\"><e/></doc>')\n444         self.get_empty_nodelist_from_elements_by_tagName_ns_helper(\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 443,
      "line_range": [
        443
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "487         str = '<?xml version=\"1.0\" ?><a b=\"c\"/>'\n488         dom = parseString(str)\n489         domstr = dom.toxml()\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 488,
      "line_range": [
        488
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "494         str = '<?xml version=\"1.0\" ?>\\n<a b=\"c\"/>\\n'\n495         dom = parseString(str)\n496         domstr = dom.toprettyxml(newl=\"\\r\\n\")\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 495,
      "line_range": [
        495
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "502         decl = '<?xml version=\"1.0\" ?>\\n'\n503         self.assertEqual(parseString('<B>A</B>').toprettyxml(),\n504                          decl + '<B>A</B>\\n')\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 503,
      "line_range": [
        503
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "504                          decl + '<B>A</B>\\n')\n505         self.assertEqual(parseString('<C>A<B>A</B></C>').toprettyxml(),\n506                          decl + '<C>\\n\\tA\\n\\t<B>A</B>\\n</C>\\n')\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 505,
      "line_range": [
        505
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "506                          decl + '<C>\\n\\tA\\n\\t<B>A</B>\\n</C>\\n')\n507         self.assertEqual(parseString('<C><B>A</B>A</C>').toprettyxml(),\n508                          decl + '<C>\\n\\t<B>A</B>\\n\\tA\\n</C>\\n')\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 507,
      "line_range": [
        507
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "508                          decl + '<C>\\n\\t<B>A</B>\\n\\tA\\n</C>\\n')\n509         self.assertEqual(parseString('<C><B>A</B><B>A</B></C>').toprettyxml(),\n510                          decl + '<C>\\n\\t<B>A</B>\\n\\t<B>A</B>\\n</C>\\n')\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 509,
      "line_range": [
        509
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "510                          decl + '<C>\\n\\t<B>A</B>\\n\\t<B>A</B>\\n</C>\\n')\n511         self.assertEqual(parseString('<C><B>A</B>A<B>A</B></C>').toprettyxml(),\n512                          decl + '<C>\\n\\t<B>A</B>\\n\\tA\\n\\t<B>A</B>\\n</C>\\n')\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 511,
      "line_range": [
        511
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "527         for str in ('<B>A</B>', '<A><B>C</B></A>'):\n528             dom = parseString(str)\n529             dom2 = parseString(dom.toprettyxml())\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 528,
      "line_range": [
        528
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "528             dom = parseString(str)\n529             dom2 = parseString(dom.toprettyxml())\n530             self.assertEqual(\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 529,
      "line_range": [
        529
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "534     def testProcessingInstruction(self):\n535         dom = parseString('<e><?mypi \\t\\n data \\t\\n ?></e>')\n536         pi = dom.documentElement.firstChild\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 535,
      "line_range": [
        535
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "557     def testTooManyDocumentElements(self):\n558         doc = parseString(\"<doc/>\")\n559         elem = doc.createElement(\"extra\")\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 558,
      "line_range": [
        558
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "585     def testRemoveNamedItem(self):\n586         doc = parseString(\"<doc a=''/>\")\n587         e = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 586,
      "line_range": [
        586
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "594     def testRemoveNamedItemNS(self):\n595         doc = parseString(\"<doc xmlns:a='http://xml.python.org/' a:b=''/>\")\n596         e = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 595,
      "line_range": [
        595
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "628     def testHasChildNodes(self):\n629         dom = parseString(\"<doc><foo/></doc>\")\n630         doc = dom.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 629,
      "line_range": [
        629
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "631         self.assertTrue(doc.hasChildNodes())\n632         dom2 = parseString(\"<doc/>\")\n633         doc2 = dom2.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 632,
      "line_range": [
        632
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "656     def _setupCloneElement(self, deep):\n657         dom = parseString(\"<doc attr='value'><foo/></doc>\")\n658         root = dom.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 657,
      "line_range": [
        657
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "686     def testCloneDocumentShallow(self):\n687         doc = parseString(\"<?xml version='1.0'?>\\n\"\n688                     \"<!-- comment -->\"\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 687,
      "line_range": [
        687
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "698     def testCloneDocumentDeep(self):\n699         doc = parseString(\"<?xml version='1.0'?>\\n\"\n700                     \"<!-- comment -->\"\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 699,
      "line_range": [
        699
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "781     def check_import_document(self, deep, testName):\n782         doc1 = parseString(\"<doc/>\")\n783         doc2 = parseString(\"<doc/>\")\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 782,
      "line_range": [
        782
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "782         doc1 = parseString(\"<doc/>\")\n783         doc2 = parseString(\"<doc/>\")\n784         self.assertRaises(xml.dom.NotSupportedErr, doc1.importNode, doc2, deep)\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 783,
      "line_range": [
        783
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "806     def check_clone_attribute(self, deep, testName):\n807         doc = parseString(\"<doc attr='value'/>\")\n808         attr = doc.documentElement.getAttributeNode(\"attr\")\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 807,
      "line_range": [
        807
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "826     def check_clone_pi(self, deep, testName):\n827         doc = parseString(\"<?target data?><doc/>\")\n828         pi = doc.firstChild\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 827,
      "line_range": [
        827
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "842         # an entity\n843         document = xml.dom.minidom.parseString(\"\"\"\n844             <?xml version=\"1.0\" ?>\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 843,
      "line_range": [
        843
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "891     def testNormalize(self):\n892         doc = parseString(\"<doc/>\")\n893         root = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 892,
      "line_range": [
        892
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "906 \n907         doc = parseString(\"<doc/>\")\n908         root = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 907,
      "line_range": [
        907
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "916     def testNormalizeCombineAndNextSibling(self):\n917         doc = parseString(\"<doc/>\")\n918         root = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 917,
      "line_range": [
        917
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "937     def testNormalizeDeleteWithPrevSibling(self):\n938         doc = parseString(\"<doc/>\")\n939         root = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 938,
      "line_range": [
        938
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "955     def testNormalizeDeleteWithNextSibling(self):\n956         doc = parseString(\"<doc/>\")\n957         root = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 956,
      "line_range": [
        956
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "973     def testNormalizeDeleteWithTwoNonTextSiblings(self):\n974         doc = parseString(\"<doc/>\")\n975         root = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 974,
      "line_range": [
        974
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "993     def testNormalizeDeleteAndCombine(self):\n994         doc = parseString(\"<doc/>\")\n995         root = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 994,
      "line_range": [
        994
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1014     def testNormalizeRecursion(self):\n1015         doc = parseString(\"<doc>\"\n1016                             \"<o>\"\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1015,
      "line_range": [
        1015
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1077     def testBug0777884(self):\n1078         doc = parseString(\"<o>text</o>\")\n1079         text = doc.documentElement.childNodes[0]\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1078,
      "line_range": [
        1078
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1085     def testBug1433694(self):\n1086         doc = parseString(\"<o><i/>t</o>\")\n1087         node = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1086,
      "line_range": [
        1086
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1093     def testSiblings(self):\n1094         doc = parseString(\"<doc><?pi?>text?<elm/></doc>\")\n1095         root = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1094,
      "line_range": [
        1094
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1107     def testParents(self):\n1108         doc = parseString(\n1109             \"<doc><elm1><elm2/><elm2><elm3/></elm2></elm1></doc>\")\n1110         root = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1108,
      "line_range": [
        1108,
        1109
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1122     def testNodeListItem(self):\n1123         doc = parseString(\"<doc><e/><e/></doc>\")\n1124         children = doc.childNodes\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1123,
      "line_range": [
        1123
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1134     def testEncodings(self):\n1135         doc = parseString('<foo>&#x20ac;</foo>')\n1136         self.assertEqual(doc.toxml(),\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1135,
      "line_range": [
        1135
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1155     def testStandalone(self):\n1156         doc = parseString('<foo>&#x20ac;</foo>')\n1157         self.assertEqual(doc.toxml(),\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1156,
      "line_range": [
        1156
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1205                           \"http://xml.python.org/ns\", \"xmlns:foo\")\n1206         doc2 = parseString(\"<doc/>\")\n1207         self.assertRaises(xml.dom.WrongDocumentErr, doc2.renameNode, node,\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1206,
      "line_range": [
        1206
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1210     def testRenameAttribute(self):\n1211         doc = parseString(\"<doc a='v'/>\")\n1212         elem = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1211,
      "line_range": [
        1211
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1287     def testRenameElement(self):\n1288         doc = parseString(\"<doc/>\")\n1289         elem = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1288,
      "line_range": [
        1288
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1340     def testWholeText(self):\n1341         doc = parseString(\"<doc>a</doc>\")\n1342         elem = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1341,
      "line_range": [
        1341
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1376     def testPatch1094164(self):\n1377         doc = parseString(\"<doc><e/></doc>\")\n1378         elem = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1377,
      "line_range": [
        1377
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1386         def setup():\n1387             doc = parseString(\"<doc>a<e/>d</doc>\")\n1388             elem = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1387,
      "line_range": [
        1387
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1414     def testSchemaType(self):\n1415         doc = parseString(\n1416             \"<!DOCTYPE doc [\\n\"\n1417             \"  <!ENTITY e1 SYSTEM 'http://xml.python.org/e1'>\\n\"\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1415,
      "line_range": [
        1415,
        1416
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1447     def testSetIdAttribute(self):\n1448         doc = parseString(\"<doc a1='v' a2='w'/>\")\n1449         e = doc.documentElement\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1448,
      "line_range": [
        1448
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1480         NS2 = \"http://xml.python.org/ns2\"\n1481         doc = parseString(\"<doc\"\n1482                           \" xmlns:ns1='\" + NS1 + \"'\"\n1483                           \" xmlns:ns2='\" + NS2 + \"'\"\n1484                           \" ns1:a1='v' ns2:a2='w'/>\")\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1481,
      "line_range": [
        1481,
        1482,
        1483
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1516         NS2 = \"http://xml.python.org/ns2\"\n1517         doc = parseString(\"<doc\"\n1518                           \" xmlns:ns1='\" + NS1 + \"'\"\n1519                           \" xmlns:ns2='\" + NS2 + \"'\"\n1520                           \" ns1:a1='v' ns2:a2='w'/>\")\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1517,
      "line_range": [
        1517,
        1518,
        1519
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1587     def testPickledDocument(self):\n1588         doc = parseString(sample)\n1589         for proto in range(2, pickle.HIGHEST_PROTOCOL + 1):\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1588,
      "line_range": [
        1588
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1590             s = pickle.dumps(doc, proto)\n1591             doc2 = pickle.loads(s)\n1592             self.assert_recursive_equal(doc, doc2)\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1591,
      "line_range": [
        1591
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1594     def testDeepcopiedDocument(self):\n1595         doc = parseString(sample)\n1596         doc2 = copy.deepcopy(doc)\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1595,
      "line_range": [
        1595
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1605     def testEmptyXMLNSValue(self):\n1606         doc = parseString(\"<element xmlns=''>\\n\"\n1607                           \"<foo/>\\n</element>\")\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1606,
      "line_range": [
        1606
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1607                           \"<foo/>\\n</element>\")\n1608         doc2 = parseString(doc.toxml())\n1609         self.confirm(doc2.namespaceURI == xml.dom.EMPTY_NAMESPACE)\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1608,
      "line_range": [
        1608
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1612         with self.assertRaisesRegex(ValueError, 'Unsupported syntax'):\n1613             parseString('<element xmlns:abc=\"http:abc.com/de f g/hi/j k\"><abc:foo /></element>')\n1614 \n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1613,
      "line_range": [
        1613
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1615     def testDocRemoveChild(self):\n1616         doc = parse(tstfile)\n1617         title_tag = doc.documentElement.getElementsByTagName(\"TITLE\")[0]\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1616,
      "line_range": [
        1616
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1626         # lead to \"NameError: name 'data' is not defined\"\n1627         doc = parse(tstfile)\n1628         pi = doc.createProcessingInstruction(\"y\", \"z\")\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1627,
      "line_range": [
        1627
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1632         xml_str = '<?xml version=\"1.0\" ?><curriculum status=\"public\" company=\"example\"/>'\n1633         doc = parseString(xml_str)\n1634         output = io.StringIO()\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1633,
      "line_range": [
        1633
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1639         xml_str = '<?xml version=\"1.0\" ?><curriculum status=\"public\" company=\"example\"/>'\n1640         doc = parseString(xml_str)\n1641         self.assertEqual(doc.toxml(), xml_str)\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1640,
      "line_range": [
        1640
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1644         xml_str = '<?xml version=\"1.0\" ?><curriculum status=\"public\" company=\"example\"/>'\n1645         doc = parseString(xml_str)\n1646         self.assertEqual(doc.toprettyxml(),\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1645,
      "line_range": [
        1645
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1651         xml_str = '<?xml version=\"1.0\" ?><root><node><![CDATA[</data>]]></node></root>'\n1652         doc = parseString(xml_str)\n1653         self.assertEqual(doc.toprettyxml(),\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1652,
      "line_range": [
        1652
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1660         xml_str = '<?xml version=\"1.0\" ?><root><node><![CDATA[</data>]]></node></root>'\n1661         dom1 = parseString(xml_str)\n1662         self.checkWholeText(dom1.getElementsByTagName('node')[0].firstChild, '</data>')\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1661,
      "line_range": [
        1661
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1662         self.checkWholeText(dom1.getElementsByTagName('node')[0].firstChild, '</data>')\n1663         dom2 = parseString(dom1.toprettyxml())\n1664         self.checkWholeText(dom2.getElementsByTagName('node')[0].firstChild, '</data>')\n",
      "filename": "cpython\\Lib\\test\\test_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1663,
      "line_range": [
        1663
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "610         data2 = b\"abcdefghij\"\n611         assert len(data1) == len(data2)\n612 \n613         # Test same tag\n614         m1 = mmap.mmap(-1, len(data1), tagname=\"foo\")\n",
      "filename": "cpython\\Lib\\test\\test_mmap.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 611,
      "line_range": [
        611,
        612,
        613
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "647             mmap.mmap(-1, 5000, tagname=\"foo\")[:] # same tagname, but larger size\n648         except:\n649             pass\n",
      "filename": "cpython\\Lib\\test\\test_mmap.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 648,
      "line_range": [
        648
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "659             m.resize(0) # will raise OSError\n660         except:\n661             pass\n",
      "filename": "cpython\\Lib\\test\\test_mmap.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 660,
      "line_range": [
        660
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "663             m[:]\n664         except:\n665             pass\n",
      "filename": "cpython\\Lib\\test\\test_mmap.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 664,
      "line_range": [
        664
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "113 a = A(destroyed)\"\"\"\n114         exec(s, m.__dict__)\n115         del m\n",
      "filename": "cpython\\Lib\\test\\test_module.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 114,
      "line_range": [
        114
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "200         m = ModuleType('foo')\n201         assert m.__loader__ is None\n202         self.assertEqual(repr(m), \"<module 'foo'>\")\n",
      "filename": "cpython\\Lib\\test\\test_module.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 201,
      "line_range": [
        201
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "58                 code = '# coding: {}\\n'.format(enc)\n59                 exec(code)\n60         finally:\n",
      "filename": "cpython\\Lib\\test\\test_multibytecodec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 59,
      "line_range": [
        59
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "10         with self.assertRaisesRegex(SyntaxError, \"invalid syntax\"):\n11             exec(code, {}, {})\n12 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "16         with self.assertRaisesRegex(SyntaxError, \"invalid syntax\"):\n17             exec(code, {}, {})\n18 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 17,
      "line_range": [
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "22         with self.assertRaisesRegex(SyntaxError, \"invalid syntax\"):\n23             exec(code, {}, {})\n24 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 23,
      "line_range": [
        23
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "28         with self.assertRaisesRegex(SyntaxError, \"invalid syntax\"):\n29             exec(code, {}, {})\n30 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 29,
      "line_range": [
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "34         with self.assertRaisesRegex(SyntaxError, \"cannot use assignment expressions with tuple\"):\n35             exec(code, {}, {})\n36 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 35,
      "line_range": [
        35
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "40         with self.assertRaisesRegex(SyntaxError, \"invalid syntax\"):\n41             exec(code, {}, {})\n42 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "46         with self.assertRaisesRegex(SyntaxError, \"invalid syntax\"):\n47             exec(code, {}, {})\n48 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 47,
      "line_range": [
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "52         with self.assertRaisesRegex(SyntaxError, \"invalid syntax\"):\n53             exec(code, {}, {})\n54 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 53,
      "line_range": [
        53
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "58         with self.assertRaisesRegex(SyntaxError, \"invalid syntax\"):\n59             exec(code, {}, {})\n60 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 59,
      "line_range": [
        59
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "65             \"positional argument follows keyword argument\"):\n66             exec(code, {}, {})\n67 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 66,
      "line_range": [
        66
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "72             \"positional argument follows keyword argument\"):\n73             exec(code, {}, {})\n74 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 73,
      "line_range": [
        73
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "79             \"positional argument follows keyword argument\"):\n80             exec(code, {}, {})\n81 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 80,
      "line_range": [
        80
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "85         with self.assertRaisesRegex(SyntaxError, \"invalid syntax\"):\n86             exec(code, {}, {})\n87 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 86,
      "line_range": [
        86
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "92             \"cannot use assignment expressions with lambda\"):\n93             exec(code, {}, {})\n94 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 93,
      "line_range": [
        93
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "98         with self.assertRaisesRegex(SyntaxError, \"invalid syntax\"):\n99             exec(code, {}, {})\n100 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 99,
      "line_range": [
        99
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "104         with self.assertRaisesRegex(SyntaxError, \"invalid syntax\"):\n105             exec(code, {}, {})\n106 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 105,
      "line_range": [
        105
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "113             \"assignment expression within a comprehension cannot be used in a class body\"):\n114             exec(code, {}, {})\n115 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 114,
      "line_range": [
        114
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "130                 with self.assertRaisesRegex(SyntaxError, msg):\n131                     exec(code, {}, {})\n132 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 131,
      "line_range": [
        131
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "141                 with self.assertRaisesRegex(SyntaxError, msg):\n142                     exec(code, {}) # Module scope\n143                 with self.assertRaisesRegex(SyntaxError, msg):\n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 142,
      "line_range": [
        142
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "143                 with self.assertRaisesRegex(SyntaxError, msg):\n144                     exec(code, {}, {}) # Class scope\n145                 with self.assertRaisesRegex(SyntaxError, msg):\n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 144,
      "line_range": [
        144
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "145                 with self.assertRaisesRegex(SyntaxError, msg):\n146                     exec(f\"lambda: {code}\", {}) # Function scope\n147 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 146,
      "line_range": [
        146
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "163                 with self.assertRaisesRegex(SyntaxError, msg):\n164                     exec(code, {}) # Module scope\n165                 with self.assertRaisesRegex(SyntaxError, msg):\n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 164,
      "line_range": [
        164
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "165                 with self.assertRaisesRegex(SyntaxError, msg):\n166                     exec(code, {}, {}) # Class scope\n167                 with self.assertRaisesRegex(SyntaxError, msg):\n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 166,
      "line_range": [
        166
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "167                 with self.assertRaisesRegex(SyntaxError, msg):\n168                     exec(f\"lambda: {code}\", {}) # Function scope\n169 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 168,
      "line_range": [
        168
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "282         with self.assertRaisesRegex(NameError, \"name 'a' is not defined\"):\n283             exec(code, {}, {})\n284 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 283,
      "line_range": [
        283
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "440 \n441         exec(code, ns, {})\n442 \n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 441,
      "line_range": [
        441
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "468                 ns = {}\n469                 exec(code, ns)\n470                 self.assertEqual(ns[\"x\"], 2)\n",
      "filename": "cpython\\Lib\\test\\test_named_expressions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 469,
      "line_range": [
        469
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "62 \n63     def _test_comment(self, nrc, passwd='pass'):\n64         nrc = self.make_nrc(nrc)\n65         self.assertEqual(nrc.hosts['foo.domain.com'], ('bar', None, passwd))\n66         self.assertEqual(nrc.hosts['bar.domain.com'], ('foo', None, 'pass'))\n67 \n68     def test_comment_before_machine_line(self):\n",
      "filename": "cpython\\Lib\\test\\test_netrc.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'pass'",
      "line_number": 63,
      "line_range": [
        63,
        64,
        65,
        66,
        67
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b107_hardcoded_password_default.html",
      "test_id": "B107",
      "test_name": "hardcoded_password_default"
    },
    {
      "code": "126                              ('bar', None, 'pass'))\n127             os.chmod(fn, 0o622)\n128             self.assertRaises(netrc.NetrcParseError, netrc.netrc)\n",
      "filename": "cpython\\Lib\\test\\test_netrc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0o622 on file (fn).",
      "line_number": 127,
      "line_range": [
        127
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "599         elif action == \"NEWSGROUPS\":\n600             assert param is not None\n601             if param == \"comp.lang.python\":\n",
      "filename": "cpython\\Lib\\test\\test_nntplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 600,
      "line_range": [
        600
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "689         else:\n690             assert self.allow_posting\n691             self.push_lit(\"240 Article received OK\")\n",
      "filename": "cpython\\Lib\\test\\test_nntplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 690,
      "line_range": [
        690
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "702         else:\n703             assert self.allow_posting\n704             self.push_lit(\"235 Article transferred OK\")\n",
      "filename": "cpython\\Lib\\test\\test_nntplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 703,
      "line_range": [
        703
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "835     def handle_MODE(self, what):\n836         assert not self._switched and what == 'reader'\n837         self._switched = True\n",
      "filename": "cpython\\Lib\\test\\test_nntplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 836,
      "line_range": [
        836
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "54     fn = fn.replace(\"\\\\\", \"\\\\\\\\\")\n55     gotResult = eval(fn)\n56     if wantResult != gotResult and _norm(wantResult) != _norm(gotResult):\n",
      "filename": "cpython\\Lib\\test\\test_ntpath.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 55,
      "line_range": [
        55
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "70         warnings.simplefilter(\"ignore\", DeprecationWarning)\n71         gotResult = eval(fn)\n72     if _norm(wantResult) != _norm(gotResult):\n",
      "filename": "cpython\\Lib\\test\\test_ntpath.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 71,
      "line_range": [
        71
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "58         for _ in range(1000):\n59             e = random.randrange(300)\n60             n = random.randrange(-10**e, 10**e)\n",
      "filename": "cpython\\Lib\\test\\test_numeric_tower.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 59,
      "line_range": [
        59
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "59             e = random.randrange(300)\n60             n = random.randrange(-10**e, 10**e)\n61             self.check_equal_hash(n, D(n))\n",
      "filename": "cpython\\Lib\\test\\test_numeric_tower.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 60,
      "line_range": [
        60
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "82         for _ in range(1000):\n83             x = random.random() * math.exp(random.random()*200.0 - 100.0)\n84             self.check_equal_hash(x, D.from_float(x))\n",
      "filename": "cpython\\Lib\\test\\test_numeric_tower.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 83,
      "line_range": [
        83
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "82         for _ in range(1000):\n83             x = random.random() * math.exp(random.random()*200.0 - 100.0)\n84             self.check_equal_hash(x, D.from_float(x))\n",
      "filename": "cpython\\Lib\\test\\test_numeric_tower.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 83,
      "line_range": [
        83
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "16             try: pass\n17             except: pass\n18             try: pass\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 17,
      "line_range": [
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "40         ns = {'__annotations__': {1: 2}}\n41         exec('x: int', ns)\n42         self.assertEqual(ns['__annotations__'], {'x': 'int', 1: 2})\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "62         try: raise AClass()\n63         except: pass\n64 \n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 63,
      "line_range": [
        63
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "72         except CClass: self.fail()\n73         except: pass\n74 \n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 73,
      "line_range": [
        73
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "97 \n98         f = eval('lambda: None')\n99         g = eval('lambda: None')\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 98,
      "line_range": [
        98
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "98         f = eval('lambda: None')\n99         g = eval('lambda: None')\n100         self.assertNotEqual(f, g)\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 99,
      "line_range": [
        99
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "101 \n102         f = eval('lambda a: a')\n103         g = eval('lambda a: a')\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 102,
      "line_range": [
        102
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "102         f = eval('lambda a: a')\n103         g = eval('lambda a: a')\n104         self.assertNotEqual(f, g)\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 103,
      "line_range": [
        103
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "105 \n106         f = eval('lambda a=1: a')\n107         g = eval('lambda a=1: a')\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 106,
      "line_range": [
        106
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "106         f = eval('lambda a=1: a')\n107         g = eval('lambda a=1: a')\n108         self.assertNotEqual(f, g)\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 107,
      "line_range": [
        107
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "109 \n110         f = eval('lambda: 0')\n111         g = eval('lambda: 1')\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 110,
      "line_range": [
        110
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "110         f = eval('lambda: 0')\n111         g = eval('lambda: 1')\n112         self.assertNotEqual(f, g)\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 111,
      "line_range": [
        111
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "113 \n114         f = eval('lambda: None')\n115         g = eval('lambda a: None')\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 114,
      "line_range": [
        114
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "114         f = eval('lambda: None')\n115         g = eval('lambda a: None')\n116         self.assertNotEqual(f, g)\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 115,
      "line_range": [
        115
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "117 \n118         f = eval('lambda a: None')\n119         g = eval('lambda b: None')\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 118,
      "line_range": [
        118
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "118         f = eval('lambda a: None')\n119         g = eval('lambda b: None')\n120         self.assertNotEqual(f, g)\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 119,
      "line_range": [
        119
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "121 \n122         f = eval('lambda a: None')\n123         g = eval('lambda a=None: None')\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 122,
      "line_range": [
        122
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "122         f = eval('lambda a: None')\n123         g = eval('lambda a=None: None')\n124         self.assertNotEqual(f, g)\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 123,
      "line_range": [
        123
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "125 \n126         f = eval('lambda a=0: None')\n127         g = eval('lambda a=1: None')\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 126,
      "line_range": [
        126
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "126         f = eval('lambda a=0: None')\n127         g = eval('lambda a=1: None')\n128         self.assertNotEqual(f, g)\n",
      "filename": "cpython\\Lib\\test\\test_opcodes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 127,
      "line_range": [
        127
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1 import unittest\n2 import pickle\n3 import sys\n",
      "filename": "cpython\\Lib\\test\\test_operator.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "535         with support.swap_item(sys.modules, 'operator', self.module2):\n536             return pickle.loads(pickled)\n537 \n",
      "filename": "cpython\\Lib\\test\\test_operator.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 536,
      "line_range": [
        536
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "4 import gc\n5 import pickle\n6 from random import randrange, shuffle\n",
      "filename": "cpython\\Lib\\test\\test_ordered_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "303                 with self.subTest(proto=proto):\n304                     check(pickle.loads(pickle.dumps(od, proto)))\n305         check(eval(repr(od)))\n",
      "filename": "cpython\\Lib\\test\\test_ordered_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 304,
      "line_range": [
        304
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "304                     check(pickle.loads(pickle.dumps(od, proto)))\n305         check(eval(repr(od)))\n306         update_test = OrderedDict()\n",
      "filename": "cpython\\Lib\\test\\test_ordered_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 305,
      "line_range": [
        305
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "339             for proto in range(-1, pickle.HIGHEST_PROTOCOL + 1):\n340                 dup = pickle.loads(pickle.dumps(od, proto))\n341                 self.assertIsNot(dup, od)\n",
      "filename": "cpython\\Lib\\test\\test_ordered_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 340,
      "line_range": [
        340
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "349             \"OrderedDict([('c', 1), ('b', 2), ('a', 3), ('d', 4), ('e', 5), ('f', 6)])\")\n350         self.assertEqual(eval(repr(od)), od)\n351         self.assertEqual(repr(OrderedDict()), \"OrderedDict()\")\n",
      "filename": "cpython\\Lib\\test\\test_ordered_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 350,
      "line_range": [
        350
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "535             def __hash__(self):\n536                 return randrange(100000)\n537 \n",
      "filename": "cpython\\Lib\\test\\test_ordered_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 536,
      "line_range": [
        536
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "798                     p = pickle.dumps(it, i)\n799                     unpickled = pickle.loads(p)\n800                     self.assertEqual(list(unpickled), expected)\n",
      "filename": "cpython\\Lib\\test\\test_ordered_dict.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 799,
      "line_range": [
        799
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "16 import os\n17 import pickle\n18 import shutil\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 17,
      "line_range": [
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "21 import stat\n22 import subprocess\n23 import sys\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 22,
      "line_range": [
        22
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "243             # use a shell to hide the console window (SW_HIDE)\n244             shell=True)\n245         self.assertEqual(retcode, 0)\n246 \n247     @unittest.skipUnless(sys.platform == 'win32',\n248                          'test specific to the Windows console')\n249     def test_write_windows_console(self):\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 244,
      "line_range": [
        240,
        241,
        242,
        243,
        244
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "469                 self.assertIn(b'cos\\nstat_result\\n', p)\n470             unpickled = pickle.loads(p)\n471             self.assertEqual(result, unpickled)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 470,
      "line_range": [
        470
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "526                 self.assertIn(b'cos\\nstatvfs_result\\n', p)\n527             unpickled = pickle.loads(p)\n528             self.assertEqual(result, unpickled)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 527,
      "line_range": [
        527
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "591         DETACHED_PROCESS = 8\n592         subprocess.check_call(\n593             # bpo-30584: Use security identifier *S-1-5-32-545 instead\n594             # of localized \"Users\" to not depend on the locale.\n595             ['icacls.exe', fname, '/deny', '*S-1-5-32-545:(S)'],\n596             creationflags=DETACHED_PROCESS\n597         )\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 592,
      "line_range": [
        592,
        593,
        594,
        595,
        596
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "591         DETACHED_PROCESS = 8\n592         subprocess.check_call(\n593             # bpo-30584: Use security identifier *S-1-5-32-545 instead\n594             # of localized \"Users\" to not depend on the locale.\n595             ['icacls.exe', fname, '/deny', '*S-1-5-32-545:(S)'],\n596             creationflags=DETACHED_PROCESS\n597         )\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 592,
      "line_range": [
        592,
        593,
        594,
        595,
        596
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "864         os.environ.update(HELLO=\"World\")\n865         with os.popen(\"%s -c 'echo $HELLO'\" % unix_shell) as popen:\n866             value = popen.read().strip()\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 865,
      "line_range": [
        865
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "871     def test_os_popen_iter(self):\n872         with os.popen(\"%s -c 'echo \\\"line1\\nline2\\nline3\\\"'\"\n873                       % unix_shell) as popen:\n874             it = iter(popen)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 872,
      "line_range": [
        872,
        873
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "971             os.putenv(name, value)\n972             proc = subprocess.run([sys.executable, '-c', code], check=True,\n973                                   stdout=subprocess.PIPE, text=True)\n974             self.assertEqual(proc.stdout.rstrip(), repr(value))\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 972,
      "line_range": [
        972,
        973
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "976             os.unsetenv(name)\n977             proc = subprocess.run([sys.executable, '-c', code], check=True,\n978                                   stdout=subprocess.PIPE, text=True)\n979             self.assertEqual(proc.stdout.rstrip(), repr(None))\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 977,
      "line_range": [
        977,
        978
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1039 \n1040         with os.popen(f\"{unix_shell} -c 'echo ${var}'\") as popen:\n1041             value = popen.read().strip()\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 1040,
      "line_range": [
        1040
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "1900         with self.assertRaises(ValueError):\n1901             os.execve(args[0], args, newenv)\n1902 \n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 1901,
      "line_range": [
        1901
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "1906         with self.assertRaises(ValueError):\n1907             os.execve(args[0], args, newenv)\n1908 \n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 1907,
      "line_range": [
        1907
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "1912         with self.assertRaises(ValueError):\n1913             os.execve(args[0], args, newenv)\n1914 \n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 1913,
      "line_range": [
        1913
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "1918         try:\n1919             os.execve('', ['arg'], {})\n1920         except OSError as e:\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 1919,
      "line_range": [
        1919
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "1918         try:\n1919             os.execve('', ['arg'], {})\n1920         except OSError as e:\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 1919,
      "line_range": [
        1919
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "2145         # altering the test runner's process state (issue8045).\n2146         subprocess.check_call([\n2147                 sys.executable, '-c',\n2148                 'import os,sys;os.setreuid(-1,-1);sys.exit(0)'])\n2149 \n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2146,
      "line_range": [
        2146,
        2147,
        2148
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2162         # altering the test runner's process state (issue8045).\n2163         subprocess.check_call([\n2164                 sys.executable, '-c',\n2165                 'import os,sys;os.setregid(-1,-1);sys.exit(0)'])\n2166 \n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2163,
      "line_range": [
        2163,
        2164,
        2165
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2262         msg = \"running\"\n2263         proc = subprocess.Popen([sys.executable, \"-c\",\n2264                                  \"import sys;\"\n2265                                  \"sys.stdout.write('{}');\"\n2266                                  \"sys.stdout.flush();\"\n2267                                  \"input()\".format(msg)],\n2268                                 stdout=subprocess.PIPE,\n2269                                 stderr=subprocess.PIPE,\n2270                                 stdin=subprocess.PIPE)\n2271         self.addCleanup(proc.stdout.close)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2263,
      "line_range": [
        2263,
        2264,
        2265,
        2266,
        2267,
        2268,
        2269,
        2270
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2307         # Run a script which has console control handling enabled.\n2308         proc = subprocess.Popen([sys.executable,\n2309                    os.path.join(os.path.dirname(__file__),\n2310                                 \"win_console_handler.py\"), tagname],\n2311                    creationflags=subprocess.CREATE_NEW_PROCESS_GROUP)\n2312         # Let the interpreter startup before we send signals. See #3137.\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2308,
      "line_range": [
        2308,
        2309,
        2310,
        2311
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2473     def setUp(self):\n2474         assert os.path.exists(self.dirlink_target)\n2475         assert os.path.exists(self.filelink_target)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2474,
      "line_range": [
        2474
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2474         assert os.path.exists(self.dirlink_target)\n2475         assert os.path.exists(self.filelink_target)\n2476         assert not os.path.exists(self.dirlink)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2475,
      "line_range": [
        2475
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2475         assert os.path.exists(self.filelink_target)\n2476         assert not os.path.exists(self.dirlink)\n2477         assert not os.path.exists(self.filelink)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2476,
      "line_range": [
        2476
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2476         assert not os.path.exists(self.dirlink)\n2477         assert not os.path.exists(self.filelink)\n2478         assert not os.path.exists(self.missing_link)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2477,
      "line_range": [
        2477
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2477         assert not os.path.exists(self.filelink)\n2478         assert not os.path.exists(self.missing_link)\n2479 \n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2478,
      "line_range": [
        2478
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2507         target = r'c:\\\\target does not exist.29r3c740'\n2508         assert not os.path.exists(target)\n2509         target_is_dir = True\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2508,
      "line_range": [
        2508
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2646     def setUp(self):\n2647         assert os.path.exists(self.junction_target)\n2648         assert not os.path.lexists(self.junction)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2647,
      "line_range": [
        2647
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2647         assert os.path.exists(self.junction_target)\n2648         assert not os.path.lexists(self.junction)\n2649 \n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2648,
      "line_range": [
        2648
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2709                     nt._getfinalpathname(name)\n2710                 except Exception:\n2711                     # Failure is expected\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 2710,
      "line_range": [
        2710
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "2714                     os.stat(name)\n2715                 except Exception:\n2716                     pass\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 2715,
      "line_range": [
        2715
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "2753         os.symlink('some_dir', src)\n2754         assert os.path.isdir(src)\n2755 \n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2754,
      "line_range": [
        2754
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2790     def test_getppid(self):\n2791         p = subprocess.Popen([sys.executable, '-c',\n2792                               'import os; print(os.getppid())'],\n2793                              stdout=subprocess.PIPE)\n2794         stdout, _ = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2791,
      "line_range": [
        2791,
        2792,
        2793
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2804             args = [sys.executable, '-c', code]\n2805         pid = os.spawnv(os.P_NOWAIT, sys.executable, args)\n2806 \n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 2805,
      "line_range": [
        2805
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "2891         args = self.create_args()\n2892         exitcode = os.spawnl(os.P_WAIT, args[0], *args)\n2893         self.assertEqual(exitcode, self.exitcode)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 2892,
      "line_range": [
        2892
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "2897         args = self.create_args(with_env=True)\n2898         exitcode = os.spawnle(os.P_WAIT, args[0], *args, self.env)\n2899         self.assertEqual(exitcode, self.exitcode)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 2898,
      "line_range": [
        2898
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "2903         args = self.create_args()\n2904         exitcode = os.spawnlp(os.P_WAIT, args[0], *args)\n2905         self.assertEqual(exitcode, self.exitcode)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 2904,
      "line_range": [
        2904
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "2909         args = self.create_args(with_env=True)\n2910         exitcode = os.spawnlpe(os.P_WAIT, args[0], *args, self.env)\n2911         self.assertEqual(exitcode, self.exitcode)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 2910,
      "line_range": [
        2910
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "2915         args = self.create_args()\n2916         exitcode = os.spawnv(os.P_WAIT, args[0], args)\n2917         self.assertEqual(exitcode, self.exitcode)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 2916,
      "line_range": [
        2916
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "2919         # Test for PyUnicode_FSConverter()\n2920         exitcode = os.spawnv(os.P_WAIT, FakePath(args[0]), args)\n2921         self.assertEqual(exitcode, self.exitcode)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 2920,
      "line_range": [
        2920
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "2925         args = self.create_args(with_env=True)\n2926         exitcode = os.spawnve(os.P_WAIT, args[0], args, self.env)\n2927         self.assertEqual(exitcode, self.exitcode)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 2926,
      "line_range": [
        2926
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "2931         args = self.create_args()\n2932         exitcode = os.spawnvp(os.P_WAIT, args[0], args)\n2933         self.assertEqual(exitcode, self.exitcode)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 2932,
      "line_range": [
        2932
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "2937         args = self.create_args(with_env=True)\n2938         exitcode = os.spawnvpe(os.P_WAIT, args[0], args, self.env)\n2939         self.assertEqual(exitcode, self.exitcode)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 2938,
      "line_range": [
        2938
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "2943         args = self.create_args()\n2944         pid = os.spawnv(os.P_NOWAIT, args[0], args)\n2945         support.wait_process(pid, exitcode=self.exitcode)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 2944,
      "line_range": [
        2944
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "2950         args = self.create_args(with_env=True, use_bytes=True)\n2951         exitcode = os.spawnve(os.P_WAIT, args[0], args, self.env)\n2952         self.assertEqual(exitcode, self.exitcode)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 2951,
      "line_range": [
        2951
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "3114     def start(self):\n3115         assert not self.running\n3116         self.__flag = threading.Event()\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3115,
      "line_range": [
        3115
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3120     def stop(self):\n3121         assert self.running\n3122         self._active = False\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3121,
      "line_range": [
        3121
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3493             size = (\n3494                 subprocess.check_output(\n3495                     [\"stty\", \"size\"], stderr=subprocess.DEVNULL, text=True\n3496                 ).split()\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 3494,
      "line_range": [
        3494,
        3495
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "3493             size = (\n3494                 subprocess.check_output(\n3495                     [\"stty\", \"size\"], stderr=subprocess.DEVNULL, text=True\n3496                 ).split()\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3494,
      "line_range": [
        3494,
        3495
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3829         self.assertEqual(entry.name, \"file.txt\")\n3830         import pickle\n3831         self.assertRaises(TypeError, pickle.dumps, entry, filename)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 3830,
      "line_range": [
        3830
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "3875         scandir_iter = os.scandir(self.path)\n3876         import pickle\n3877         self.assertRaises(TypeError, pickle.dumps, scandir_iter, filename)\n",
      "filename": "cpython\\Lib\\test\\test_os.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 3876,
      "line_range": [
        3876
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "5 from test.support.os_helper import EnvironmentVarGuard\n6 import subprocess\n7 import sys\n",
      "filename": "cpython\\Lib\\test\\test_osx_env.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "21             # test that test on sys.xxx normally fails\n22             rc = subprocess.call(subpc)\n23             self.assertEqual(rc, 3, \"expected %s not %s %s\" % (ev, cond, sv))\n",
      "filename": "cpython\\Lib\\test\\test_osx_env.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 22,
      "line_range": [
        22
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "26             # test that sys.xxx has been influenced by the environ value\n27             rc = subprocess.call(subpc)\n28             self.assertEqual(rc, 2, \"expected %s %s %s\" % (ev, cond, sv))\n",
      "filename": "cpython\\Lib\\test\\test_osx_env.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 27,
      "line_range": [
        27
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "6 import pathlib\n7 import pickle\n8 import socket\n",
      "filename": "cpython\\Lib\\test\\test_pathlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "294             inner = r[len(clsname) + 1 : -1]\n295             self.assertEqual(eval(inner), p.as_posix())\n296             # The repr() roundtrips.\n",
      "filename": "cpython\\Lib\\test\\test_pathlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 295,
      "line_range": [
        295
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "296             # The repr() roundtrips.\n297             q = eval(r, pathlib.__dict__)\n298             self.assertIs(q.__class__, p.__class__)\n",
      "filename": "cpython\\Lib\\test\\test_pathlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 297,
      "line_range": [
        297
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "678             dumped = pickle.dumps(p, proto)\n679             pp = pickle.loads(dumped)\n680             self.assertIs(pp.__class__, p.__class__)\n",
      "filename": "cpython\\Lib\\test\\test_pathlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 679,
      "line_range": [
        679
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1348         def cleanup():\n1349             os.chmod(join('dirE'), 0o777)\n1350             os_helper.rmtree(BASE)\n",
      "filename": "cpython\\Lib\\test\\test_pathlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0o777 on file (NOT PARSED).",
      "line_number": 1349,
      "line_range": [
        1349
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "2259             dumped = pickle.dumps(p, proto)\n2260             pp = pickle.loads(dumped)\n2261             self.assertEqual(pp.stat(), p.stat())\n",
      "filename": "cpython\\Lib\\test\\test_pathlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 2260,
      "line_range": [
        2260
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "9 import unittest\n10 import subprocess\n11 import textwrap\n",
      "filename": "cpython\\Lib\\test\\test_pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "556 mod = types.ModuleType('module_to_skip')\n557 exec('def foo_pony(callback): x = 1; callback(); return None', mod.__dict__)\n558 \n",
      "filename": "cpython\\Lib\\test\\test_pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 557,
      "line_range": [
        557
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1236         cmd = [sys.executable, '-m', 'pdb'] + pdb_args\n1237         with subprocess.Popen(\n1238                 cmd,\n1239                 stdout=subprocess.PIPE,\n1240                 stdin=subprocess.PIPE,\n1241                 stderr=subprocess.STDOUT,\n1242                 env = {**os.environ, 'PYTHONIOENCODING': 'utf-8'}\n1243         ) as proc:\n",
      "filename": "cpython\\Lib\\test\\test_pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1237,
      "line_range": [
        1237,
        1238,
        1239,
        1240,
        1241,
        1242
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1330         cmd = [sys.executable, '-m', 'pdb', os_helper.TESTFN]\n1331         proc = subprocess.Popen(cmd,\n1332             stdout=subprocess.PIPE,\n1333             stdin=subprocess.PIPE,\n1334             stderr=subprocess.STDOUT,\n1335             )\n",
      "filename": "cpython\\Lib\\test\\test_pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1331,
      "line_range": [
        1331,
        1332,
        1333,
        1334
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1393         cmd = [sys.executable, '-u', os_helper.TESTFN]\n1394         proc = subprocess.Popen(cmd,\n1395             stdout=subprocess.PIPE,\n1396             stdin=subprocess.PIPE,\n1397             stderr=subprocess.STDOUT,\n1398             env={**os.environ, 'PYTHONIOENCODING': 'utf-8'}\n1399             )\n",
      "filename": "cpython\\Lib\\test\\test_pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1394,
      "line_range": [
        1394,
        1395,
        1396,
        1397,
        1398
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1423         cmd = [sys.executable, '-u', os_helper.TESTFN]\n1424         proc = subprocess.Popen(cmd,\n1425             stdout=subprocess.PIPE,\n1426             stdin=subprocess.PIPE,\n1427             stderr=subprocess.STDOUT,\n1428             env = {**os.environ, 'PYTHONIOENCODING': 'utf-8'}\n1429             )\n",
      "filename": "cpython\\Lib\\test\\test_pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1424,
      "line_range": [
        1424,
        1425,
        1426,
        1427,
        1428
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1463                 cmd = [sys.executable, 'main.py']\n1464                 proc = subprocess.Popen(\n1465                     cmd,\n1466                     stdout=subprocess.PIPE,\n1467                     stdin=subprocess.PIPE,\n1468                     stderr=subprocess.PIPE,\n1469                 )\n",
      "filename": "cpython\\Lib\\test\\test_pdb.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1464,
      "line_range": [
        1464,
        1465,
        1466,
        1467,
        1468
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "414         parser_source = generate_c_parser_source(grammar)\n415         assert \"expect_soft_keyword\" not in parser_source\n416 \n",
      "filename": "cpython\\Lib\\test\\test_peg_generator\\test_c_parser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 415,
      "line_range": [
        415
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "423         parser_source = generate_c_parser_source(grammar)\n424         assert \"expect_soft_keyword\" in parser_source\n425 \n",
      "filename": "cpython\\Lib\\test\\test_peg_generator\\test_c_parser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 424,
      "line_range": [
        424
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "89         node = parse_string(\"42\\n\", parser_class)\n90         assert node == [\n91             [[TokenInfo(NUMBER, string=\"42\", start=(1, 0), end=(1, 2), line=\"42\\n\")]],\n92             TokenInfo(NEWLINE, string=\"\\n\", start=(1, 2), end=(1, 3), line=\"42\\n\"),\n93         ]\n94         node = parse_string(\"1, 2\\n\", parser_class)\n",
      "filename": "cpython\\Lib\\test\\test_peg_generator\\test_pegen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 90,
      "line_range": [
        90,
        91,
        92,
        93
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "94         node = parse_string(\"1, 2\\n\", parser_class)\n95         assert node == [\n96             [\n97                 [TokenInfo(NUMBER, string=\"1\", start=(1, 0), end=(1, 1), line=\"1, 2\\n\")],\n98                 [TokenInfo(NUMBER, string=\"2\", start=(1, 3), end=(1, 4), line=\"1, 2\\n\")],\n99             ],\n100             TokenInfo(NEWLINE, string=\"\\n\", start=(1, 4), end=(1, 5), line=\"1, 2\\n\"),\n101         ]\n",
      "filename": "cpython\\Lib\\test\\test_peg_generator\\test_pegen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 95,
      "line_range": [
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "347         code = compile(node, \"\", \"eval\")\n348         val = eval(code)\n349         self.assertEqual(val, 3.0)\n",
      "filename": "cpython\\Lib\\test\\test_peg_generator\\test_pegen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 348,
      "line_range": [
        348
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "391         ns: Dict[str, Any] = {}\n392         exec(out.getvalue(), ns)\n393         parser_class: Type[Parser] = ns[\"GeneratedParser\"]\n",
      "filename": "cpython\\Lib\\test\\test_peg_generator\\test_pegen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 392,
      "line_range": [
        392
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "440         ns: Dict[str, Any] = {}\n441         exec(out.getvalue(), ns)\n442         parser_class = ns[\"GeneratedParser\"]\n",
      "filename": "cpython\\Lib\\test\\test_peg_generator\\test_pegen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 441,
      "line_range": [
        441
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "3 import builtins\n4 import pickle\n5 import io\n",
      "filename": "cpython\\Lib\\test\\test_pickle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "85     def loads(self, buf, **kwds):\n86         return pickle.loads(buf, **kwds)\n87 \n",
      "filename": "cpython\\Lib\\test\\test_pickle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 86,
      "line_range": [
        86
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "6 import gc\n7 from pickle import PickleBuffer\n8 import weakref\n",
      "filename": "cpython\\Lib\\test\\test_picklebuffer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with PickleBuffer module.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1 import pickle\n2 import pickletools\n3 from test import support\n",
      "filename": "cpython\\Lib\\test\\test_pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1 import pickle\n2 import pickletools\n3 from test import support\n",
      "filename": "cpython\\Lib\\test\\test_pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickletools module.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "12     def loads(self, buf, **kwds):\n13         return pickle.loads(buf, **kwds)\n14 \n",
      "filename": "cpython\\Lib\\test\\test_pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "25             pickled = pickle.dumps(data, proto)\n26             unpickled = pickle.loads(pickled)\n27             self.assertEqual(unpickled, data)\n",
      "filename": "cpython\\Lib\\test\\test_pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 26,
      "line_range": [
        26
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "30             pickled2 = pickletools.optimize(pickled)\n31             unpickled2 = pickle.loads(pickled2)\n32             self.assertEqual(unpickled2, data)\n",
      "filename": "cpython\\Lib\\test\\test_pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 31,
      "line_range": [
        31
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "52         self.assertIn(pickle.BINPUT, pickled)\n53         unpickled = pickle.loads(pickled)\n54         self.assertEqual(unpickled, ['spam', 'ham', 'ham'])\n",
      "filename": "cpython\\Lib\\test\\test_pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 53,
      "line_range": [
        53
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "57         pickled2 = pickletools.optimize(pickled)\n58         unpickled2 = pickle.loads(pickled2)\n59         self.assertEqual(unpickled2, ['spam', 'ham', 'ham'])\n",
      "filename": "cpython\\Lib\\test\\test_pickletools.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 58,
      "line_range": [
        58
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "69     def run_code(self, code):\n70         exec(textwrap.dedent(code), globals(), {\"self\": self})\n71 \n",
      "filename": "cpython\\Lib\\test\\test_pkg.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 70,
      "line_range": [
        70
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "2 import platform\n3 import subprocess\n4 import sys\n",
      "filename": "cpython\\Lib\\test\\test_platform.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "185         try:\n186             proc_res = subprocess.check_output(['uname', '-p'], text=True).strip()\n187             expect = platform._unknown_as_blank(proc_res)\n",
      "filename": "cpython\\Lib\\test\\test_platform.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 186,
      "line_range": [
        186
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "185         try:\n186             proc_res = subprocess.check_output(['uname', '-p'], text=True).strip()\n187             expect = platform._unknown_as_blank(proc_res)\n",
      "filename": "cpython\\Lib\\test\\test_platform.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 186,
      "line_range": [
        186
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "226             # information is returned\n227             output = subprocess.check_output(['sw_vers'], text=True)\n228             for line in output.splitlines():\n",
      "filename": "cpython\\Lib\\test\\test_platform.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 227,
      "line_range": [
        227
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "226             # information is returned\n227             output = subprocess.check_output(['sw_vers'], text=True)\n228             for line in output.splitlines():\n",
      "filename": "cpython\\Lib\\test\\test_platform.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 227,
      "line_range": [
        227
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3 import operator\n4 import pickle\n5 import unittest\n",
      "filename": "cpython\\Lib\\test\\test_plistlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "127             os.unlink(os_helper.TESTFN)\n128         except:\n129             pass\n",
      "filename": "cpython\\Lib\\test\\test_plistlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 128,
      "line_range": [
        128
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "272         for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n273             self.assertEqual(pickle.loads(pickle.dumps(UID(19), protocol=proto)), UID(19))\n274 \n",
      "filename": "cpython\\Lib\\test\\test_plistlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 273,
      "line_range": [
        273
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "3 import os\n4 import subprocess\n5 import random\n",
      "filename": "cpython\\Lib\\test\\test_poll.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "60                 raise RuntimeError(\"no pipes ready for writing\")\n61             wr = random.choice(ready_writers)\n62             os.write(wr, MSG)\n",
      "filename": "cpython\\Lib\\test\\test_poll.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 61,
      "line_range": [
        61
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "67                 raise RuntimeError(\"no pipes ready for reading\")\n68             rd = random.choice(ready_readers)\n69             buf = os.read(rd, MSG_LEN)\n",
      "filename": "cpython\\Lib\\test\\test_poll.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 68,
      "line_range": [
        68
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "124         cmd = 'for i in 0 1 2 3 4 5 6 7 8 9; do echo testing...; sleep 1; done'\n125         proc = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE,\n126                                 bufsize=0)\n127         proc.__enter__()\n",
      "filename": "cpython\\Lib\\test\\test_poll.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 125,
      "line_range": [
        125,
        126
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "23         cmd = cmd % (python, cmdline)\n24         with os.popen(cmd) as p:\n25             data = p.read()\n",
      "filename": "cpython\\Lib\\test\\test_popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "25             data = p.read()\n26         got = eval(data)[1:] # strip off argv[0]\n27         self.assertEqual(got, expected)\n",
      "filename": "cpython\\Lib\\test\\test_popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 26,
      "line_range": [
        26
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "45     def test_return_code(self):\n46         self.assertEqual(os.popen(\"exit 0\").close(), None)\n47         status = os.popen(\"exit 42\").close()\n",
      "filename": "cpython\\Lib\\test\\test_popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 46,
      "line_range": [
        46
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "45     def test_return_code(self):\n46         self.assertEqual(os.popen(\"exit 0\").close(), None)\n47         status = os.popen(\"exit 42\").close()\n",
      "filename": "cpython\\Lib\\test\\test_popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 46,
      "line_range": [
        46
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "46         self.assertEqual(os.popen(\"exit 0\").close(), None)\n47         status = os.popen(\"exit 42\").close()\n48         if os.name == 'nt':\n",
      "filename": "cpython\\Lib\\test\\test_popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 47,
      "line_range": [
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "46         self.assertEqual(os.popen(\"exit 0\").close(), None)\n47         status = os.popen(\"exit 42\").close()\n48         if os.name == 'nt':\n",
      "filename": "cpython\\Lib\\test\\test_popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 47,
      "line_range": [
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "53     def test_contextmanager(self):\n54         with os.popen(\"echo hello\") as f:\n55             self.assertEqual(f.read(), \"hello\\n\")\n",
      "filename": "cpython\\Lib\\test\\test_popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 54,
      "line_range": [
        54
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "53     def test_contextmanager(self):\n54         with os.popen(\"echo hello\") as f:\n55             self.assertEqual(f.read(), \"hello\\n\")\n",
      "filename": "cpython\\Lib\\test\\test_popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 54,
      "line_range": [
        54
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "57     def test_iterating(self):\n58         with os.popen(\"echo hello\") as f:\n59             self.assertEqual(list(f), [\"hello\\n\"])\n",
      "filename": "cpython\\Lib\\test\\test_popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 58,
      "line_range": [
        58
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "57     def test_iterating(self):\n58         with os.popen(\"echo hello\") as f:\n59             self.assertEqual(list(f), [\"hello\\n\"])\n",
      "filename": "cpython\\Lib\\test\\test_popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 58,
      "line_range": [
        58
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "219     def start(self):\n220         assert not self.active\n221         self.__flag = threading.Event()\n",
      "filename": "cpython\\Lib\\test\\test_poplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 220,
      "line_range": [
        220
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "235     def stop(self):\n236         assert self.active\n237         self.active = False\n",
      "filename": "cpython\\Lib\\test\\test_poplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 236,
      "line_range": [
        236
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3 import dis\n4 import pickle\n5 import unittest\n",
      "filename": "cpython\\Lib\\test\\test_positional_only_arg.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "304 \n305         assert inner_has_pos_only().__annotations__ == {'x': 'int'}\n306 \n307         class Something:\n",
      "filename": "cpython\\Lib\\test\\test_positional_only_arg.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 305,
      "line_range": [
        305,
        306
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "311 \n312         assert Something().method().__annotations__ == {'x': 'int'}\n313 \n314         def multiple_levels():\n",
      "filename": "cpython\\Lib\\test\\test_positional_only_arg.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 312,
      "line_range": [
        312,
        313
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "319 \n320         assert multiple_levels().__annotations__ == {'x': 'int'}\n321 \n",
      "filename": "cpython\\Lib\\test\\test_positional_only_arg.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 320,
      "line_range": [
        320
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "357 \n358         unpickled_posonly = pickle.loads(pickled_posonly)\n359         unpickled_optional = pickle.loads(pickled_optional)\n",
      "filename": "cpython\\Lib\\test\\test_positional_only_arg.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 358,
      "line_range": [
        358
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "358         unpickled_posonly = pickle.loads(pickled_posonly)\n359         unpickled_optional = pickle.loads(pickled_optional)\n360         unpickled_defaults = pickle.loads(pickled_defaults)\n",
      "filename": "cpython\\Lib\\test\\test_positional_only_arg.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 359,
      "line_range": [
        359
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "359         unpickled_optional = pickle.loads(pickled_optional)\n360         unpickled_defaults = pickle.loads(pickled_defaults)\n361 \n",
      "filename": "cpython\\Lib\\test\\test_positional_only_arg.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 360,
      "line_range": [
        360
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1043     def test_getgroups(self):\n1044         with os.popen('id -G 2>/dev/null') as idg:\n1045             groups = idg.read().strip()\n",
      "filename": "cpython\\Lib\\test\\test_posix.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 1044,
      "line_range": [
        1044
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "1043     def test_getgroups(self):\n1044         with os.popen('id -G 2>/dev/null') as idg:\n1045             groups = idg.read().strip()\n",
      "filename": "cpython\\Lib\\test\\test_posix.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 1044,
      "line_range": [
        1044
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "298      '1 2']]]]]\"\"\"\n299         o = eval(expected)\n300         self.assertEqual(pprint.pformat(o, width=15), expected)\n",
      "filename": "cpython\\Lib\\test\\test_pprint.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 299,
      "line_range": [
        299
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "833             formatted = pprint.pformat(special, width=width)\n834             self.assertEqual(eval(formatted), special)\n835             formatted = pprint.pformat([special] * 2, width=width)\n",
      "filename": "cpython\\Lib\\test\\test_pprint.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 834,
      "line_range": [
        834
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "835             formatted = pprint.pformat([special] * 2, width=width)\n836             self.assertEqual(eval(formatted), [special] * 2)\n837 \n",
      "filename": "cpython\\Lib\\test\\test_pprint.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 836,
      "line_range": [
        836
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "914             formatted = pprint.pformat(special, width=width)\n915             self.assertEqual(eval(formatted), special)\n916             formatted = pprint.pformat([special] * 2, width=width)\n",
      "filename": "cpython\\Lib\\test\\test_pprint.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 915,
      "line_range": [
        915
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "916             formatted = pprint.pformat([special] * 2, width=width)\n917             self.assertEqual(eval(formatted), [special] * 2)\n918 \n",
      "filename": "cpython\\Lib\\test\\test_pprint.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 917,
      "line_range": [
        917
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "140         with self.assertRaises(SyntaxError) as context:\n141             exec(python2_print_str)\n142 \n",
      "filename": "cpython\\Lib\\test\\test_print.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 141,
      "line_range": [
        141
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "147         with self.assertRaises(SyntaxError) as context:\n148             exec(python2_print_str)\n149 \n",
      "filename": "cpython\\Lib\\test\\test_print.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 148,
      "line_range": [
        148
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "154         with self.assertRaises(SyntaxError) as context:\n155             exec(python2_print_str)\n156 \n",
      "filename": "cpython\\Lib\\test\\test_print.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 155,
      "line_range": [
        155
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "163         with self.assertRaises(SyntaxError) as context:\n164             exec(python2_print_str)\n165 \n",
      "filename": "cpython\\Lib\\test\\test_print.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 164,
      "line_range": [
        164
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "173         with self.assertRaises(SyntaxError) as context:\n174             exec(python2_print_str)\n175 \n",
      "filename": "cpython\\Lib\\test\\test_print.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 174,
      "line_range": [
        174
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "180         with self.assertRaises(SyntaxError) as context:\n181             exec(python2_print_str)\n182 \n",
      "filename": "cpython\\Lib\\test\\test_print.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 181,
      "line_range": [
        181
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "2 import unittest\n3 import xml.sax\n4 \n5 from xml.sax.xmlreader import AttributesImpl\n",
      "filename": "cpython\\Lib\\test\\test_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.sax to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 3,
      "line_range": [
        3,
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "4 \n5 from xml.sax.xmlreader import AttributesImpl\n6 from xml.sax.handler import feature_external_ges\n",
      "filename": "cpython\\Lib\\test\\test_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using AttributesImpl to parse untrusted XML data is known to be vulnerable to XML attacks. Replace AttributesImpl with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "5 from xml.sax.xmlreader import AttributesImpl\n6 from xml.sax.handler import feature_external_ges\n7 from xml.dom import pulldom\n",
      "filename": "cpython\\Lib\\test\\test_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using feature_external_ges to parse untrusted XML data is known to be vulnerable to XML attacks. Replace feature_external_ges with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "6 from xml.sax.handler import feature_external_ges\n7 from xml.dom import pulldom\n8 \n9 from test.support import findfile\n",
      "filename": "cpython\\Lib\\test\\test_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using pulldom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace pulldom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 7,
      "line_range": [
        7,
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b409-import-xml-pulldom",
      "test_id": "B409",
      "test_name": "blacklist"
    },
    {
      "code": "34         # Test with a filename:\n35         handler = pulldom.parse(tstfile)\n36         self.addCleanup(handler.stream.close)\n",
      "filename": "cpython\\Lib\\test\\test_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.pulldom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 35,
      "line_range": [
        35
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-pulldom",
      "test_id": "B319",
      "test_name": "blacklist"
    },
    {
      "code": "40         with open(tstfile, \"rb\") as fin:\n41             list(pulldom.parse(fin))\n42 \n",
      "filename": "cpython\\Lib\\test\\test_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.pulldom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-pulldom",
      "test_id": "B319",
      "test_name": "blacklist"
    },
    {
      "code": "45 \n46         items = pulldom.parseString(SMALL_SAMPLE)\n47         evt, node = next(items)\n",
      "filename": "cpython\\Lib\\test\\test_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.pulldom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 46,
      "line_range": [
        46
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-pulldom",
      "test_id": "B319",
      "test_name": "blacklist"
    },
    {
      "code": "106         \"\"\"Ensure expandItem works as expected.\"\"\"\n107         items = pulldom.parseString(SMALL_SAMPLE)\n108         # Loop through the nodes until we get to a \"title\" start tag:\n",
      "filename": "cpython\\Lib\\test\\test_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.pulldom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 107,
      "line_range": [
        107
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-pulldom",
      "test_id": "B319",
      "test_name": "blacklist"
    },
    {
      "code": "139         \"\"\"PullDOM does not receive \"comment\" events.\"\"\"\n140         items = pulldom.parseString(SMALL_SAMPLE)\n141         for evt, _ in items:\n",
      "filename": "cpython\\Lib\\test\\test_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.pulldom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 140,
      "line_range": [
        140
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-pulldom",
      "test_id": "B319",
      "test_name": "blacklist"
    },
    {
      "code": "149         \"\"\"PullDOM does not receive \"end-document\" events.\"\"\"\n150         items = pulldom.parseString(SMALL_SAMPLE)\n151         # Read all of the nodes up to and including </html>:\n",
      "filename": "cpython\\Lib\\test\\test_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.pulldom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 150,
      "line_range": [
        150
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-pulldom",
      "test_id": "B319",
      "test_name": "blacklist"
    },
    {
      "code": "163     def test_getitem_deprecation(self):\n164         parser = pulldom.parseString(SMALL_SAMPLE)\n165         with self.assertWarnsRegex(DeprecationWarning,\n",
      "filename": "cpython\\Lib\\test\\test_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.pulldom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 164,
      "line_range": [
        164
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-pulldom",
      "test_id": "B319",
      "test_name": "blacklist"
    },
    {
      "code": "170     def test_external_ges_default(self):\n171         parser = pulldom.parseString(SMALL_SAMPLE)\n172         saxparser = parser.parser\n",
      "filename": "cpython\\Lib\\test\\test_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.pulldom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 171,
      "line_range": [
        171
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-pulldom",
      "test_id": "B319",
      "test_name": "blacklist"
    },
    {
      "code": "181         \"\"\"Test some of the hard-to-reach parts of PullDOM.\"\"\"\n182         self._test_thorough(pulldom.parse(None, parser=SAXExerciser()))\n183 \n",
      "filename": "cpython\\Lib\\test\\test_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.pulldom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 182,
      "line_range": [
        182
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-pulldom",
      "test_id": "B319",
      "test_name": "blacklist"
    },
    {
      "code": "310         with io.StringIO(SMALL_SAMPLE) as fin:\n311             sd = SAX2DOMTestHelper(fin, xml.sax.make_parser(),\n312                                    len(SMALL_SAMPLE))\n",
      "filename": "cpython\\Lib\\test\\test_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 311,
      "line_range": [
        311
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "6 import stat\n7 import subprocess\n8 import sys\n",
      "filename": "cpython\\Lib\\test\\test_py_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "88         else:\n89             assert os.path.islink(self.pyc_path)\n90             with self.assertRaises(FileExistsError):\n",
      "filename": "cpython\\Lib\\test\\test_py_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 89,
      "line_range": [
        89
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "237         if args and args[0] == '-' and 'input' in kwargs:\n238             return subprocess.run([sys.executable, '-m', 'py_compile', '-'],\n239                                   input=kwargs['input'].encode(),\n240                                   capture_output=True)\n241         return script_helper.assert_python_ok('-m', 'py_compile', *args, **kwargs)\n",
      "filename": "cpython\\Lib\\test\\test_py_compile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 238,
      "line_range": [
        238,
        239,
        240
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "253         module_name = \"doesnotexist\"\n254         assert module_name not in pyclbr._modules\n255         with test_importlib_util.uncache(module_name):\n",
      "filename": "cpython\\Lib\\test\\test_pyclbr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 254,
      "line_range": [
        254
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "21 import xml.etree\n22 import xml.etree.ElementTree\n23 import textwrap\n",
      "filename": "cpython\\Lib\\test\\test_pydoc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 22,
      "line_range": [
        22
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b405-import-xml-etree",
      "test_id": "B405",
      "test_name": "blacklist"
    },
    {
      "code": "1083         lines = text.split('\\n')\n1084         assert len(lines) >= 2\n1085         return lines[2]\n",
      "filename": "cpython\\Lib\\test\\test_pydoc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1084,
      "line_range": [
        1084
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "470         seq.reverse()\n471         rnd = random.Random(42)\n472 \n",
      "filename": "cpython\\Lib\\test\\test_queue.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 471,
      "line_range": [
        471
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2 \n3 import sys, io, subprocess\n4 import quopri\n",
      "filename": "cpython\\Lib\\test\\test_quopri.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "184         (p, e) = self.STRINGS[-1]\n185         process = subprocess.Popen([sys.executable, \"-mquopri\"],\n186                                    stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n187         self.addCleanup(process.stdout.close)\n",
      "filename": "cpython\\Lib\\test\\test_quopri.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 185,
      "line_range": [
        185,
        186
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "193         e = e.decode('latin-1').splitlines()\n194         assert len(cout)==len(e)\n195         for i in range(len(cout)):\n",
      "filename": "cpython\\Lib\\test\\test_quopri.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 194,
      "line_range": [
        194
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "200         (p, e) = self.STRINGS[-1]\n201         process = subprocess.Popen([sys.executable, \"-mquopri\", \"-d\"],\n202                                    stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n203         self.addCleanup(process.stdout.close)\n",
      "filename": "cpython\\Lib\\test\\test_quopri.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 201,
      "line_range": [
        201,
        202
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "144         try:\n145             assert False, (3,)\n146         except AssertionError as e:\n",
      "filename": "cpython\\Lib\\test\\test_raise.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 145,
      "line_range": [
        145
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5 import time\n6 import pickle\n7 import warnings\n",
      "filename": "cpython\\Lib\\test\\test_random.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "388             origseq = [self.gen.random() for i in range(10)]\n389             newgen = pickle.loads(state)\n390             restoredseq = [newgen.random() for i in range(10)]\n",
      "filename": "cpython\\Lib\\test\\test_random.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 389,
      "line_range": [
        389
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "409             with open(support.findfile(file),\"rb\") as f:\n410                 r = pickle.load(f)\n411             self.assertEqual(int(r.random()*1000), value)\n",
      "filename": "cpython\\Lib\\test\\test_random.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 410,
      "line_range": [
        410
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "542 class MersenneTwister_TestBasicOps(TestBasicOps, unittest.TestCase):\n543     gen = random.Random()\n544 \n",
      "filename": "cpython\\Lib\\test\\test_random.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 543,
      "line_range": [
        543
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "899         seed = 2849427419\n900         gen2 = random.Random()\n901         self.gen.seed(seed)\n",
      "filename": "cpython\\Lib\\test\\test_random.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 900,
      "line_range": [
        900
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "928         # Verify that distributions can handle a series of zero inputs'\n929         g = random.Random()\n930         x = [g.random() for i in range(50)] + [0.0]*5\n",
      "filename": "cpython\\Lib\\test\\test_random.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 929,
      "line_range": [
        929
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "948         # Only works for distributions which do not consume variates in pairs\n949         g = random.Random()\n950         N = 5000\n",
      "filename": "cpython\\Lib\\test\\test_random.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 949,
      "line_range": [
        949
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "978     def test_constant(self):\n979         g = random.Random()\n980         N = 100\n",
      "filename": "cpython\\Lib\\test\\test_random.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 979,
      "line_range": [
        979
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1000         # range [0, 2*PI].\n1001         g = random.Random()\n1002         N = 100\n",
      "filename": "cpython\\Lib\\test\\test_random.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1001,
      "line_range": [
        1001
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1260             with open(r, \"r\") as f:\n1261                 child_val = eval(f.read())\n1262             self.assertNotEqual(val, child_val)\n",
      "filename": "cpython\\Lib\\test\\test_random.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 1261,
      "line_range": [
        1261
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "4 import sys\n5 import pickle\n6 import itertools\n",
      "filename": "cpython\\Lib\\test\\test_range.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "372                     r = range(*t)\n373                     self.assertEqual(list(pickle.loads(pickle.dumps(r, proto))),\n374                                      list(r))\n",
      "filename": "cpython\\Lib\\test\\test_range.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 373,
      "line_range": [
        373
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "384                 d = pickle.dumps(it, proto)\n385                 it = pickle.loads(d)\n386                 self.assertEqual(type(itorg), type(it))\n",
      "filename": "cpython\\Lib\\test\\test_range.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 385,
      "line_range": [
        385
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "388 \n389                 it = pickle.loads(d)\n390                 try:\n",
      "filename": "cpython\\Lib\\test\\test_range.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 389,
      "line_range": [
        389
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "394                 d = pickle.dumps(it, proto)\n395                 it = pickle.loads(d)\n396                 self.assertEqual(list(it), data[1:])\n",
      "filename": "cpython\\Lib\\test\\test_range.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 395,
      "line_range": [
        395
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "406             d = pickle.dumps(i, proto)\n407             i2 = pickle.loads(d)\n408             self.assertEqual(list(i), [])\n",
      "filename": "cpython\\Lib\\test\\test_range.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 407,
      "line_range": [
        407
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "419             d = pickle.dumps(i, proto)\n420             i2 = pickle.loads(d)\n421             self.assertEqual(list(i), [])\n",
      "filename": "cpython\\Lib\\test\\test_range.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 420,
      "line_range": [
        420
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "842 \n843         assert '\\u212a'.lower() == 'k' # '\u212a'\n844         self.assertTrue(re.match(r'K', '\\u212a', re.I))\n",
      "filename": "cpython\\Lib\\test\\test_re.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 843,
      "line_range": [
        843
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "847         self.assertTrue(re.match(r'\\u212a', 'k', re.I))\n848         assert '\\u017f'.upper() == 'S' # '\u017f'\n849         self.assertTrue(re.match(r'S', '\\u017f', re.I))\n",
      "filename": "cpython\\Lib\\test\\test_re.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 848,
      "line_range": [
        848
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "852         self.assertTrue(re.match(r'\\u017f', 's', re.I))\n853         assert '\\ufb05'.upper() == '\\ufb06'.upper() == 'ST' # '\ufb05', '\ufb06'\n854         self.assertTrue(re.match(r'\\ufb05', '\\ufb06', re.I))\n",
      "filename": "cpython\\Lib\\test\\test_re.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 853,
      "line_range": [
        853
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "865         self.assertTrue(re.match(br'[19A]', b'a', re.I))\n866         assert '\\u212a'.lower() == 'k' # '\u212a'\n867         self.assertTrue(re.match(r'[19K]', '\\u212a', re.I))\n",
      "filename": "cpython\\Lib\\test\\test_re.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 866,
      "line_range": [
        866
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "870         self.assertTrue(re.match(r'[19\\u212a]', 'k', re.I))\n871         assert '\\u017f'.upper() == 'S' # '\u017f'\n872         self.assertTrue(re.match(r'[19S]', '\\u017f', re.I))\n",
      "filename": "cpython\\Lib\\test\\test_re.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 871,
      "line_range": [
        871
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "875         self.assertTrue(re.match(r'[19\\u017f]', 's', re.I))\n876         assert '\\ufb05'.upper() == '\\ufb06'.upper() == 'ST' # '\ufb05', '\ufb06'\n877         self.assertTrue(re.match(r'[19\\ufb05]', '\\ufb06', re.I))\n",
      "filename": "cpython\\Lib\\test\\test_re.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 876,
      "line_range": [
        876
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "898 \n899         assert '\\u212a'.lower() == 'k' # '\u212a'\n900         self.assertTrue(re.match(r'[J-M]', '\\u212a', re.I))\n",
      "filename": "cpython\\Lib\\test\\test_re.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 899,
      "line_range": [
        899
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "903         self.assertTrue(re.match(r'[\\u2129-\\u212b]', 'k', re.I))\n904         assert '\\u017f'.upper() == 'S' # '\u017f'\n905         self.assertTrue(re.match(r'[R-T]', '\\u017f', re.I))\n",
      "filename": "cpython\\Lib\\test\\test_re.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 904,
      "line_range": [
        904
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "908         self.assertTrue(re.match(r'[\\u017e-\\u0180]', 's', re.I))\n909         assert '\\ufb05'.upper() == '\\ufb06'.upper() == 'ST' # '\ufb05', '\ufb06'\n910         self.assertTrue(re.match(r'[\\ufb04-\\ufb05]', '\\ufb06', re.I))\n",
      "filename": "cpython\\Lib\\test\\test_re.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 909,
      "line_range": [
        909
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1054     def test_pickling(self):\n1055         import pickle\n1056         oldpat = re.compile('a(?:b|(c|e){1,2}?|d)+?(.)', re.UNICODE)\n",
      "filename": "cpython\\Lib\\test\\test_re.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 1055,
      "line_range": [
        1055
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1058             pickled = pickle.dumps(oldpat, proto)\n1059             newpat = pickle.loads(pickled)\n1060             self.assertEqual(newpat, oldpat)\n",
      "filename": "cpython\\Lib\\test\\test_re.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1059,
      "line_range": [
        1059
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2266                         vardict[i] = gi\n2267                     self.assertEqual(eval(repl, vardict), expected,\n2268                                      'grouping error')\n",
      "filename": "cpython\\Lib\\test\\test_re.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 2267,
      "line_range": [
        2267
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "8 import selectors\n9 import subprocess\n10 import sys\n",
      "filename": "cpython\\Lib\\test\\test_readline.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "288     args = (sys.executable, '-c', script)\n289     proc = subprocess.Popen(args, stdin=slave, stdout=slave, stderr=slave, env=env)\n290     os.close(slave)\n",
      "filename": "cpython\\Lib\\test\\test_readline.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 289,
      "line_range": [
        289
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "12 import re\n13 import subprocess\n14 import sys\n",
      "filename": "cpython\\Lib\\test\\test_regrtest.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "521             kw['stderr'] = subprocess.STDOUT\n522         proc = subprocess.run(args,\n523                               universal_newlines=True,\n524                               input=input,\n525                               stdout=subprocess.PIPE,\n526                               **kw)\n527         if proc.returncode != exitcode:\n",
      "filename": "cpython\\Lib\\test\\test_regrtest.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 522,
      "line_range": [
        522,
        523,
        524,
        525,
        526
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "5 import unittest\n6 import subprocess\n7 from textwrap import dedent\n",
      "filename": "cpython\\Lib\\test\\test_repl.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "31     env['TERM'] = 'vt100'\n32     return subprocess.Popen(cmd_line,\n33                             executable=sys.executable,\n34                             text=True,\n35                             stdin=subprocess.PIPE,\n36                             stdout=stdout, stderr=stderr,\n37                             **kw)\n38 \n",
      "filename": "cpython\\Lib\\test\\test_repl.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 32,
      "line_range": [
        32,
        33,
        34,
        35,
        36,
        37
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "289         for i in range(50):\n290             imag1a[random.randrange(100)*1j] = random.randrange(100)*1j\n291         items = list(imag1a.items())\n",
      "filename": "cpython\\Lib\\test\\test_richcmp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 290,
      "line_range": [
        290
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "289         for i in range(50):\n290             imag1a[random.randrange(100)*1j] = random.randrange(100)*1j\n291         items = list(imag1a.items())\n",
      "filename": "cpython\\Lib\\test\\test_richcmp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 290,
      "line_range": [
        290
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "8 import signal\n9 import subprocess\n10 import sys\n",
      "filename": "cpython\\Lib\\test\\test_runpy.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "784     def assertSigInt(self, *args, **kwargs):\n785         proc = subprocess.run(*args, **kwargs, text=True, stderr=subprocess.PIPE)\n786         self.assertTrue(proc.stderr.endswith(\"\\nKeyboardInterrupt\\n\"))\n",
      "filename": "cpython\\Lib\\test\\test_runpy.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 785,
      "line_range": [
        785
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3 \n4 from xml.sax import make_parser, ContentHandler, \\\n5                     SAXException, SAXReaderNotAvailable, SAXParseException\n6 import unittest\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace make_parser with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 4,
      "line_range": [
        4,
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "8 try:\n9     make_parser()\n10 except SAXReaderNotAvailable:\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "12     raise unittest.SkipTest(\"no XML parsers available\")\n13 from xml.sax.saxutils import XMLGenerator, escape, unescape, quoteattr, \\\n14                              XMLFilterBase, prepare_input_source\n15 from xml.sax.expatreader import create_parser\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using XMLGenerator to parse untrusted XML data is known to be vulnerable to XML attacks. Replace XMLGenerator with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 13,
      "line_range": [
        13,
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "14                              XMLFilterBase, prepare_input_source\n15 from xml.sax.expatreader import create_parser\n16 from xml.sax.handler import (feature_namespaces, feature_external_ges,\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace create_parser with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "15 from xml.sax.expatreader import create_parser\n16 from xml.sax.handler import (feature_namespaces, feature_external_ges,\n17                              LexicalHandler)\n18 from xml.sax.xmlreader import InputSource, AttributesImpl, AttributesNSImpl\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using feature_namespaces to parse untrusted XML data is known to be vulnerable to XML attacks. Replace feature_namespaces with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 16,
      "line_range": [
        16,
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "17                              LexicalHandler)\n18 from xml.sax.xmlreader import InputSource, AttributesImpl, AttributesNSImpl\n19 from io import BytesIO, StringIO\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using InputSource to parse untrusted XML data is known to be vulnerable to XML attacks. Replace InputSource with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 18,
      "line_range": [
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "129     def check_parse(self, f):\n130         from xml.sax import parse\n131         result = StringIO()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parse with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 130,
      "line_range": [
        130
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "131         result = StringIO()\n132         parse(f, XMLGenerator(result, 'utf-8'))\n133         self.assertEqual(result.getvalue(), xml_str(self.data, 'utf-8'))\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 132,
      "line_range": [
        132
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "218     def check_parseString(self, s):\n219         from xml.sax import parseString\n220         result = StringIO()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parseString with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 219,
      "line_range": [
        219
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "220         result = StringIO()\n221         parseString(s, XMLGenerator(result, 'utf-8'))\n222         self.assertEqual(result.getvalue(), xml_str(self.data, 'utf-8'))\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 221,
      "line_range": [
        221
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "251         # before.\n252         from xml.sax import make_parser\n253         p = make_parser()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace make_parser with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 252,
      "line_range": [
        252
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "252         from xml.sax import make_parser\n253         p = make_parser()\n254         from xml.sax import make_parser\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 253,
      "line_range": [
        253
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "253         p = make_parser()\n254         from xml.sax import make_parser\n255         p = make_parser()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace make_parser with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 254,
      "line_range": [
        254
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "254         from xml.sax import make_parser\n255         p = make_parser()\n256         from xml.sax import make_parser\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 255,
      "line_range": [
        255
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "255         p = make_parser()\n256         from xml.sax import make_parser\n257         p = make_parser()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace make_parser with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 256,
      "line_range": [
        256
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "256         from xml.sax import make_parser\n257         p = make_parser()\n258         from xml.sax import make_parser\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 257,
      "line_range": [
        257
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "257         p = make_parser()\n258         from xml.sax import make_parser\n259         p = make_parser()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace make_parser with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 258,
      "line_range": [
        258
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "258         from xml.sax import make_parser\n259         p = make_parser()\n260         from xml.sax import make_parser\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 259,
      "line_range": [
        259
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "259         p = make_parser()\n260         from xml.sax import make_parser\n261         p = make_parser()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace make_parser with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 260,
      "line_range": [
        260
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "260         from xml.sax import make_parser\n261         p = make_parser()\n262         from xml.sax import make_parser\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 261,
      "line_range": [
        261
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "261         p = make_parser()\n262         from xml.sax import make_parser\n263         p = make_parser()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace make_parser with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 262,
      "line_range": [
        262
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "262         from xml.sax import make_parser\n263         p = make_parser()\n264 \n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 263,
      "line_range": [
        263
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "267         # iterables.\n268         make_parser(['module'])\n269         make_parser(('module', ))\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 268,
      "line_range": [
        268
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "268         make_parser(['module'])\n269         make_parser(('module', ))\n270         make_parser({'module'})\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 269,
      "line_range": [
        269
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "269         make_parser(('module', ))\n270         make_parser({'module'})\n271         make_parser(frozenset({'module'}))\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 270,
      "line_range": [
        270
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "270         make_parser({'module'})\n271         make_parser(frozenset({'module'}))\n272         make_parser({'module': None})\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 271,
      "line_range": [
        271
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "271         make_parser(frozenset({'module'}))\n272         make_parser({'module': None})\n273         make_parser(iter(['module']))\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 272,
      "line_range": [
        272
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "272         make_parser({'module': None})\n273         make_parser(iter(['module']))\n274 \n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 273,
      "line_range": [
        273
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "276         # Testing that make_parser can handle empty iterables.\n277         make_parser([])\n278         make_parser(tuple())\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 277,
      "line_range": [
        277
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "277         make_parser([])\n278         make_parser(tuple())\n279         make_parser(set())\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 278,
      "line_range": [
        278
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "278         make_parser(tuple())\n279         make_parser(set())\n280         make_parser(frozenset())\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 279,
      "line_range": [
        279
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "279         make_parser(set())\n280         make_parser(frozenset())\n281         make_parser({})\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 280,
      "line_range": [
        280
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "280         make_parser(frozenset())\n281         make_parser({})\n282         make_parser(iter([]))\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 281,
      "line_range": [
        281
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "281         make_parser({})\n282         make_parser(iter([]))\n283 \n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 282,
      "line_range": [
        282
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "286         # one item.\n287         make_parser(['module1', 'module2'])\n288         make_parser(('module1', 'module2'))\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 287,
      "line_range": [
        287
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "287         make_parser(['module1', 'module2'])\n288         make_parser(('module1', 'module2'))\n289         make_parser({'module1', 'module2'})\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 288,
      "line_range": [
        288
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "288         make_parser(('module1', 'module2'))\n289         make_parser({'module1', 'module2'})\n290         make_parser(frozenset({'module1', 'module2'}))\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 289,
      "line_range": [
        289
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "289         make_parser({'module1', 'module2'})\n290         make_parser(frozenset({'module1', 'module2'}))\n291         make_parser({'module1': None, 'module2': None})\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 290,
      "line_range": [
        290
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "290         make_parser(frozenset({'module1', 'module2'}))\n291         make_parser({'module1': None, 'module2': None})\n292         make_parser(iter(['module1', 'module2']))\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 291,
      "line_range": [
        291
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "291         make_parser({'module1': None, 'module2': None})\n292         make_parser(iter(['module1', 'module2']))\n293 \n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 292,
      "line_range": [
        292
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "348         # to the expatreader\n349         p = make_parser(['xml.parsers.no_such_parser'])\n350 \n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 349,
      "line_range": [
        349
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "722 \n723         parser = make_parser()\n724         parser.setFeature(feature_namespaces, True)\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 723,
      "line_range": [
        723
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "883     def test_expat_binary_file(self):\n884         parser = create_parser()\n885         result = BytesIO()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 884,
      "line_range": [
        884
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "894     def test_expat_text_file(self):\n895         parser = create_parser()\n896         result = BytesIO()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 895,
      "line_range": [
        895
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "910 \n911         parser = create_parser()\n912         result = BytesIO()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 911,
      "line_range": [
        911
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "921         fname = os.fsencode(TEST_XMLFILE)\n922         parser = create_parser()\n923         result = BytesIO()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 922,
      "line_range": [
        922
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "932     def test_expat_binary_file_int_name(self):\n933         parser = create_parser()\n934         result = BytesIO()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 933,
      "line_range": [
        933
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "970     def test_expat_dtdhandler(self):\n971         parser = create_parser()\n972         handler = self.TestDTDHandler()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 971,
      "line_range": [
        971
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "989 \n990         parser = create_parser()\n991         parser.setFeature(feature_external_ges, True)\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 990,
      "line_range": [
        990
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1003     def test_expat_external_dtd_default(self):\n1004         parser = create_parser()\n1005         resolver = self.TestEntityRecorder()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1004,
      "line_range": [
        1004
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1024     def test_expat_entityresolver_enabled(self):\n1025         parser = create_parser()\n1026         parser.setFeature(feature_external_ges, True)\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1025,
      "line_range": [
        1025
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1040     def test_expat_entityresolver_default(self):\n1041         parser = create_parser()\n1042         self.assertEqual(parser.getFeature(feature_external_ges), False)\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1041,
      "line_range": [
        1041
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1066     def test_expat_attrs_empty(self):\n1067         parser = create_parser()\n1068         gather = self.AttrGatherer()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1067,
      "line_range": [
        1067
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1076     def test_expat_attrs_wattr(self):\n1077         parser = create_parser()\n1078         gather = self.AttrGatherer()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1077,
      "line_range": [
        1077
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1086     def test_expat_nsattrs_empty(self):\n1087         parser = create_parser(1)\n1088         gather = self.AttrGatherer()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1087,
      "line_range": [
        1087
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1096     def test_expat_nsattrs_wattr(self):\n1097         parser = create_parser(1)\n1098         gather = self.AttrGatherer()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1097,
      "line_range": [
        1097
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1121     def test_expat_inpsource_filename(self):\n1122         parser = create_parser()\n1123         result = BytesIO()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1122,
      "line_range": [
        1122
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1131     def test_expat_inpsource_sysid(self):\n1132         parser = create_parser()\n1133         result = BytesIO()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1132,
      "line_range": [
        1132
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1146 \n1147         parser = create_parser()\n1148         result = BytesIO()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1147,
      "line_range": [
        1147
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1156     def test_expat_inpsource_byte_stream(self):\n1157         parser = create_parser()\n1158         result = BytesIO()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1157,
      "line_range": [
        1157
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1169     def test_expat_inpsource_character_stream(self):\n1170         parser = create_parser()\n1171         result = BytesIO()\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1170,
      "line_range": [
        1170
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1186         xmlgen = XMLGenerator(result)\n1187         parser = create_parser()\n1188         parser.setContentHandler(xmlgen)\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1187,
      "line_range": [
        1187
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1198         xmlgen = XMLGenerator(result)\n1199         parser = create_parser()\n1200         parser.setContentHandler(xmlgen)\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1199,
      "line_range": [
        1199
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1221         xmlgen = XMLGenerator(result)\n1222         parser = create_parser()\n1223         parser.setContentHandler(xmlgen)\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1222,
      "line_range": [
        1222
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1235         xmlgen = XMLGenerator(result)\n1236         parser = create_parser()\n1237         parser.setContentHandler(xmlgen)\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1236,
      "line_range": [
        1236
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1250         xmlgen = XMLGenerator(result)\n1251         parser = create_parser()\n1252         parser.setContentHandler(xmlgen)\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1251,
      "line_range": [
        1251
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1266     def test_expat_inpsource_location(self):\n1267         parser = create_parser()\n1268         parser.setContentHandler(ContentHandler()) # do nothing\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1267,
      "line_range": [
        1267
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1279     def test_expat_incomplete(self):\n1280         parser = create_parser()\n1281         parser.setContentHandler(ContentHandler()) # do nothing\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1280,
      "line_range": [
        1280
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1431 \n1432         self.parser = create_parser()\n1433         self.parser.setContentHandler(ContentHandler())\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1432,
      "line_range": [
        1432
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1495 \n1496         self.parser = create_parser()\n1497         self.parser.setContentHandler(TestCharHandler(self))\n",
      "filename": "cpython\\Lib\\test\\test_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1496,
      "line_range": [
        1496
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "24     def sleep(self, t):\n25         assert t >= 0\n26         with self._cond:\n",
      "filename": "cpython\\Lib\\test\\test_sched.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 25,
      "line_range": [
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "34     def advance(self, t):\n35         assert t >= 0\n36         with self._cond:\n",
      "filename": "cpython\\Lib\\test\\test_sched.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 35,
      "line_range": [
        35
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "292         # test for bug #1501934: incorrect LOAD/STORE_GLOBAL generation\n293         exec(\"\"\"if 1:\n294             global_x = 1\n295             def f():\n296                 global_x += 1\n297             try:\n298                 f()\n299             except UnboundLocalError:\n300                 pass\n301             else:\n302                 fail('scope of global_x not correctly determined')\n303             \"\"\", {'fail': self.fail})\n304 \n",
      "filename": "cpython\\Lib\\test\\test_scope.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 293,
      "line_range": [
        293,
        294,
        295,
        296,
        297,
        298,
        299,
        300,
        301,
        302,
        303
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "323 \n324         exec(\"\"\"if 1:\n325             # I\n",
      "filename": "cpython\\Lib\\test\\test_scope.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 324,
      "line_range": [
        324
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "428 \n429         exec(\"\"\"if 1:\n430             def test(x):\n",
      "filename": "cpython\\Lib\\test\\test_scope.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 429,
      "line_range": [
        429
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "563         try:\n564             exec(g.__code__, {})\n565         except TypeError:\n",
      "filename": "cpython\\Lib\\test\\test_scope.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 564,
      "line_range": [
        564
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "592                 x\n593                 eval(\"x + 1\")\n594             return g\n",
      "filename": "cpython\\Lib\\test\\test_scope.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 593,
      "line_range": [
        593
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "648         global_ns = {}\n649         exec(\"\"\"if 1:\n650             def f():\n651                 y = 1\n652                 def g():\n653                     global y\n654                     return y\n655                 def h():\n656                     return y + 1\n657                 return g, h\n658             y = 9\n659             g, h = f()\n660             result9 = g()\n661             result2 = h()\n662             \"\"\", local_ns, global_ns)\n663         self.assertEqual(2, global_ns[\"result2\"])\n",
      "filename": "cpython\\Lib\\test\\test_scope.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 649,
      "line_range": [
        649,
        650,
        651,
        652,
        653,
        654,
        655,
        656,
        657,
        658,
        659,
        660,
        661,
        662
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "2 \n3 import subprocess\n4 import sys\n",
      "filename": "cpython\\Lib\\test\\test_script_helper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "39         b = a.encode('utf-8')\n40         assert isinstance(a, str)\n41         assert isinstance(b, bytes)\n",
      "filename": "cpython\\Lib\\test\\test_secrets.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 40,
      "line_range": [
        40
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "40         assert isinstance(a, str)\n41         assert isinstance(b, bytes)\n42         self.assertRaises(TypeError, secrets.compare_digest, a, b)\n",
      "filename": "cpython\\Lib\\test\\test_secrets.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "48         cmd = 'for i in 0 1 2 3 4 5 6 7 8 9; do echo testing...; sleep 1; done'\n49         with os.popen(cmd) as p:\n50             for tout in (0, 1, 2, 4, 8, 16) + (None,)*10:\n",
      "filename": "cpython\\Lib\\test\\test_select.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 49,
      "line_range": [
        49
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "327                 self.fail(\"no sockets ready for writing\")\n328             wr = random.choice(ready_writers)\n329             wr.send(MSG)\n",
      "filename": "cpython\\Lib\\test\\test_selectors.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 328,
      "line_range": [
        328
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "7 import copy\n8 import pickle\n9 from random import randrange, shuffle\n",
      "filename": "cpython\\Lib\\test\\test_set.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "230             p = pickle.dumps(self.s, i)\n231             dup = pickle.loads(p)\n232             self.assertEqual(self.s, dup, \"%s != %s\" % (self.s, dup))\n",
      "filename": "cpython\\Lib\\test\\test_set.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 231,
      "line_range": [
        231
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "235                 p = pickle.dumps(self.s, i)\n236                 dup = pickle.loads(p)\n237                 self.assertEqual(self.s.x, dup.x)\n",
      "filename": "cpython\\Lib\\test\\test_set.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 236,
      "line_range": [
        236
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "243             d = pickle.dumps(itorg, proto)\n244             it = pickle.loads(d)\n245             # Set iterators unpickle as list iterators due to the\n",
      "filename": "cpython\\Lib\\test\\test_set.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 244,
      "line_range": [
        244
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "250 \n251             it = pickle.loads(d)\n252             try:\n",
      "filename": "cpython\\Lib\\test\\test_set.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 251,
      "line_range": [
        251
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "256             d = pickle.dumps(it, proto)\n257             it = pickle.loads(d)\n258             self.assertEqual(self.thetype(it), data - self.thetype((drop,)))\n",
      "filename": "cpython\\Lib\\test\\test_set.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 257,
      "line_range": [
        257
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "675         n = 100\n676         seq = [randrange(n) for i in range(n)]\n677         results = set()\n",
      "filename": "cpython\\Lib\\test\\test_set.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 676,
      "line_range": [
        676
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "860             p = pickle.dumps(self.set, proto)\n861             copy = pickle.loads(p)\n862             self.assertEqual(self.set, copy,\n",
      "filename": "cpython\\Lib\\test\\test_set.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 861,
      "line_range": [
        861
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1273             # Test the binary infix spelling.\n1274             result = eval(\"x\" + case + \"y\", locals())\n1275             self.assertEqual(result, expected)\n",
      "filename": "cpython\\Lib\\test\\test_set.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 1274,
      "line_range": [
        1274
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1283             rcase = TestSubsets.reverse[case]\n1284             result = eval(\"y\" + rcase + \"x\", locals())\n1285             self.assertEqual(result, expected)\n",
      "filename": "cpython\\Lib\\test\\test_set.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 1284,
      "line_range": [
        1284
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3 import glob\n4 import pickle\n5 \n6 from test import support\n",
      "filename": "cpython\\Lib\\test\\test_shelve.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 4,
      "line_range": [
        4,
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "13 import pathlib\n14 import subprocess\n15 import random\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "80     def chunks(total, step):\n81         assert total >= step\n82         while total > step:\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 81,
      "line_range": [
        81
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "88     bufsize = min(size, 8192)\n89     chunk = b\"\".join([random.choice(string.ascii_letters).encode()\n90                       for i in range(bufsize)])\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 89,
      "line_range": [
        89
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "93             f.write(chunk)\n94     assert os.path.getsize(path) == size\n95 \n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 94,
      "line_range": [
        94
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "271         # filename is guaranteed not to exist\n272         filename = tempfile.mktemp(dir=self.mkdtemp())\n273         self.assertRaises(FileNotFoundError, shutil.rmtree, filename)\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 272,
      "line_range": [
        272
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "631 \n632         os.chmod(src_dir, 0o777)\n633         write_file((src_dir, 'permissive.txt'), '123')\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0o777 on file (src_dir).",
      "line_number": 632,
      "line_range": [
        632
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "633         write_file((src_dir, 'permissive.txt'), '123')\n634         os.chmod(os.path.join(src_dir, 'permissive.txt'), 0o777)\n635         write_file((src_dir, 'restrictive.txt'), '456')\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0o777 on file (NOT PARSED).",
      "line_number": 634,
      "line_range": [
        634
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "676         src = self.mkdtemp()\n677         dst = tempfile.mktemp(dir=self.mkdtemp())\n678         with open(os.path.join(src, 'foo'), 'w') as f:\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 677,
      "line_range": [
        677
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "1320         tar_cmd = ['tar', '-cf', 'archive2.tar', base_dir]\n1321         subprocess.check_call(tar_cmd, cwd=root_dir,\n1322                               stdout=subprocess.DEVNULL)\n1323 \n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1321,
      "line_range": [
        1321,
        1322
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1390         zip_cmd = ['zip', '-q', '-r', 'archive2.zip', base_dir]\n1391         subprocess.check_call(zip_cmd, cwd=root_dir,\n1392                               stdout=subprocess.DEVNULL)\n1393 \n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1391,
      "line_range": [
        1391,
        1392
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1417             try:\n1418                 subprocess.check_output(zip_cmd, stderr=subprocess.STDOUT)\n1419             except subprocess.CalledProcessError as exc:\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1418,
      "line_range": [
        1418
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1490                 make_archive('xxx', 'xxx', root_dir=self.mkdtemp())\n1491             except Exception:\n1492                 pass\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 1491,
      "line_range": [
        1491
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1623         dirname = self.mkdtemp()\n1624         filename = tempfile.mktemp(dir=dirname)\n1625         write_file(filename, 'testing chown function')\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 1624,
      "line_range": [
        1624
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "1934         # Move a dir to another location on the same filesystem.\n1935         dst_dir = tempfile.mktemp(dir=self.mkdtemp())\n1936         try:\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 1935,
      "line_range": [
        1935
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "2110                 raise OSError('Cannot open \"srcfile\"')\n2111             assert 0  # shouldn't reach here.\n2112 \n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2111,
      "line_range": [
        2111
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2125                 raise OSError('Cannot open \"destfile\"')\n2126             assert 0  # shouldn't reach here.\n2127 \n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2126,
      "line_range": [
        2126
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2144                 return destfile\n2145             assert 0  # shouldn't reach here.\n2146 \n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2145,
      "line_range": [
        2145
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2166                 return destfile\n2167             assert 0  # shouldn't reach here.\n2168 \n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2167,
      "line_range": [
        2167
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2212             shutil.copyfileobj(src, dst)\n2213             assert not src.closed\n2214             assert not dst.closed\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2213,
      "line_range": [
        2213
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2213             assert not src.closed\n2214             assert not dst.closed\n2215 \n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2214,
      "line_range": [
        2214
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2226             shutil.copyfile(TESTFN, TESTFN2)\n2227         assert m.called\n2228 \n2229         # File size is 2 MiB but max buf size should be 1 MiB.\n2230         self.assertEqual(m.call_args[0][2], 1 * 1024 * 1024)\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2227,
      "line_range": [
        2227,
        2228,
        2229
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2248             shutil.copyfile(fname, TESTFN2)\n2249         assert not m.called\n2250         self.assert_files_eq(fname, TESTFN2)\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2249,
      "line_range": [
        2249
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2263             cls.FILEDATA = f.read()\n2264             assert len(cls.FILEDATA) == cls.FILESIZE\n2265 \n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2264,
      "line_range": [
        2264
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2297                 shutil.copyfile(TESTFN, TESTFN2)\n2298             assert not m.called\n2299 \n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2298,
      "line_range": [
        2298
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2308     def test_non_existent_src(self):\n2309         name = tempfile.mktemp(dir=os.getcwd())\n2310         with self.assertRaises(FileNotFoundError) as cm:\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 2309,
      "line_range": [
        2309
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "2392                     shutil._fastcopy_sendfile(src, dst)\n2393         assert flag\n2394         self.assertEqual(cm.exception.errno, errno.EBADF)\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2393,
      "line_range": [
        2393
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2402                 shutil._fastcopy_sendfile(src, dst)\n2403                 assert m.called\n2404         self.assertEqual(read_file(TESTFN2, binary=True), self.FILEDATA)\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2403,
      "line_range": [
        2403
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2415                 shutil._fastcopy_sendfile(src, dst)\n2416                 assert m.called\n2417         self.assertEqual(read_file(TESTFN2, binary=True), self.FILEDATA)\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2416,
      "line_range": [
        2416
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2428                 shutil._fastcopy_sendfile(src, dst)\n2429                 assert m.called\n2430         self.assertEqual(read_file(TESTFN2, binary=True), self.FILEDATA)\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2429,
      "line_range": [
        2429
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2453         # fast-copy attempt from then on.\n2454         assert shutil._USE_CP_SENDFILE\n2455         try:\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2454,
      "line_range": [
        2454
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2461                         shutil._fastcopy_sendfile(src, dst)\n2462                 assert m.called\n2463             assert not shutil._USE_CP_SENDFILE\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2462,
      "line_range": [
        2462
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2462                 assert m.called\n2463             assert not shutil._USE_CP_SENDFILE\n2464 \n2465             with unittest.mock.patch(self.PATCHPOINT) as m:\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2463,
      "line_range": [
        2463,
        2464
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2466                 shutil.copyfile(TESTFN, TESTFN2)\n2467                 assert not m.called\n2468         finally:\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2467,
      "line_range": [
        2467
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2524         try:\n2525             size = subprocess.check_output(['stty', 'size']).decode().split()\n2526         except (FileNotFoundError, PermissionError,\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 2525,
      "line_range": [
        2525
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "2524         try:\n2525             size = subprocess.check_output(['stty', 'size']).decode().split()\n2526         except (FileNotFoundError, PermissionError,\n",
      "filename": "cpython\\Lib\\test\\test_shutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2525,
      "line_range": [
        2525
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "6 import statistics\n7 import subprocess\n8 import sys\n",
      "filename": "cpython\\Lib\\test\\test_signal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "83         \"\"\"KeyboardInterrupt triggers exit via SIGINT.\"\"\"\n84         process = subprocess.run(\n85                 [sys.executable, \"-c\",\n86                  \"import os, signal, time\\n\"\n87                  \"os.kill(os.getpid(), signal.SIGINT)\\n\"\n88                  \"for _ in range(999): time.sleep(0.01)\"],\n89                 stderr=subprocess.PIPE)\n90         self.assertIn(b\"KeyboardInterrupt\", process.stderr)\n",
      "filename": "cpython\\Lib\\test\\test_signal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 84,
      "line_range": [
        84,
        85,
        86,
        87,
        88,
        89
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "137         # @eryksun on https://github.com/python/cpython/pull/11862)\n138         process = subprocess.run(\n139                 [sys.executable, \"-c\", \"raise KeyboardInterrupt\"],\n140                 stderr=subprocess.PIPE)\n141         self.assertIn(b\"KeyboardInterrupt\", process.stderr)\n",
      "filename": "cpython\\Lib\\test\\test_signal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 138,
      "line_range": [
        138,
        139,
        140
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1182             # Py_MakePendingCalls().\n1183             signal.setitimer(signal.ITIMER_REAL, 1e-6 + random.random() * 1e-5)\n1184 \n",
      "filename": "cpython\\Lib\\test\\test_signal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1183,
      "line_range": [
        1183
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1234             # initial processing of SIGUSR1.\n1235             signal.setitimer(signal.ITIMER_REAL, 1e-6 + random.random() * 1e-5)\n1236             os.kill(os.getpid(), signal.SIGUSR1)\n",
      "filename": "cpython\\Lib\\test\\test_signal.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1235,
      "line_range": [
        1235
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "20 import shutil\n21 import subprocess\n22 import sys\n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 21,
      "line_range": [
        21
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "213         env = os.environ.copy()\n214         rc = subprocess.call([sys.executable, '-c',\n215             'import sys; sys.exit(%r in sys.path)' % usersite],\n216             env=env)\n217         self.assertEqual(rc, 1)\n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 214,
      "line_range": [
        214,
        215,
        216
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "219         env = os.environ.copy()\n220         rc = subprocess.call([sys.executable, '-s', '-c',\n221             'import sys; sys.exit(%r in sys.path)' % usersite],\n222             env=env)\n223         if usersite == site.getsitepackages()[0]:\n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 220,
      "line_range": [
        220,
        221,
        222
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "229         env[\"PYTHONNOUSERSITE\"] = \"1\"\n230         rc = subprocess.call([sys.executable, '-c',\n231             'import sys; sys.exit(%r in sys.path)' % usersite],\n232             env=env)\n233         if usersite == site.getsitepackages()[0]:\n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 230,
      "line_range": [
        230,
        231,
        232
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "240         env[\"PYTHONUSERBASE\"] = \"/tmp\"\n241         rc = subprocess.call([sys.executable, '-c',\n242             'import sys, site; sys.exit(site.USER_BASE.startswith(\"/tmp\"))'],\n243             env=env)\n244         self.assertEqual(rc, 1,\n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 241,
      "line_range": [
        241,
        242,
        243
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "431             # relative.\n432             proc = subprocess.Popen([sys.executable, '-S', '-c', command],\n433                                     env=env,\n434                                     stdout=subprocess.PIPE)\n435             stdout, stderr = proc.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 432,
      "line_range": [
        432,
        433,
        434
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "441             # Now, with 'import site', it works.\n442             proc = subprocess.Popen([sys.executable, '-c', command],\n443                                     env=env,\n444                                     stdout=subprocess.PIPE)\n445             stdout, stderr = proc.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 442,
      "line_range": [
        442,
        443,
        444
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "529             with socket_helper.transient_internet(url):\n530                 with urllib.request.urlopen(req) as data:\n531                     code = data.getcode()\n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 530,
      "line_range": [
        530
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "540         # Get sys.path in isolated mode (python3 -I)\n541         popen = subprocess.Popen([sys.executable, '-I', '-c',\n542                                   'import sys; print(repr(sys.path))'],\n543                                  stdout=subprocess.PIPE,\n544                                  encoding='utf-8')\n545         stdout = popen.communicate()[0]\n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 541,
      "line_range": [
        541,
        542,
        543,
        544
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "546         self.assertEqual(popen.returncode, 0, repr(stdout))\n547         isolated_paths = eval(stdout)\n548 \n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 547,
      "line_range": [
        547
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "558         # initially starts upon startup.\n559         popen = subprocess.Popen([sys.executable, '-I', '-v', '-c',\n560                                   'import sys; print(set(sys.modules))'],\n561                                  stdout=subprocess.PIPE,\n562                                  stderr=subprocess.PIPE,\n563                                  encoding='utf-8')\n564         stdout, stderr = popen.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 559,
      "line_range": [
        559,
        560,
        561,
        562,
        563
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "565         self.assertEqual(popen.returncode, 0, (stdout, stderr))\n566         modules = eval(stdout)\n567 \n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 566,
      "line_range": [
        566
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "587     def test_startup_interactivehook(self):\n588         r = subprocess.Popen([sys.executable, '-c',\n589             'import sys; sys.exit(hasattr(sys, \"__interactivehook__\"))']).wait()\n590         self.assertTrue(r, \"'__interactivehook__' not added by site\")\n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 588,
      "line_range": [
        588,
        589
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "593         # issue28192 readline is not automatically enabled in isolated mode\n594         r = subprocess.Popen([sys.executable, '-I', '-c',\n595             'import sys; sys.exit(hasattr(sys, \"__interactivehook__\"))']).wait()\n596         self.assertFalse(r, \"'__interactivehook__' added in isolated mode\")\n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 594,
      "line_range": [
        594,
        595
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "599         # issue28192 readline can be explicitly enabled in isolated mode\n600         r = subprocess.Popen([sys.executable, '-I', '-c',\n601             'import site, sys; site.enablerlcompleter(); sys.exit(hasattr(sys, \"__interactivehook__\"))']).wait()\n602         self.assertTrue(r, \"'__interactivehook__' not added by enablerlcompleter()\")\n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 600,
      "line_range": [
        600,
        601
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "650         env['PATH'] = '{};{}'.format(exe_prefix, os.getenv('PATH'))\n651         output = subprocess.check_output([exe_file, '-c',\n652             'import sys; print(\"\\\\n\".join(sys.path) if sys.flags.no_site else \"\")'\n653         ], env=env, encoding='ansi')\n654         actual_sys_path = output.rstrip().split('\\n')\n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 651,
      "line_range": [
        651,
        652,
        653
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "675         env['PATH'] = '{};{}'.format(exe_prefix, os.getenv('PATH'))\n676         rc = subprocess.call([exe_file, '-c',\n677             'import sys; sys.exit(not sys.flags.no_site and '\n678             '%r in sys.path and %r in sys.path and %r not in sys.path and '\n679             'all(\"\\\\r\" not in p and \"\\\\n\" not in p for p in sys.path))' % (\n680                 os.path.join(sys_prefix, 'fake-path-name'),\n681                 libpath,\n682                 os.path.join(sys_prefix, 'from-env'),\n683             )], env=env)\n684         self.assertTrue(rc, \"sys.path is incorrect\")\n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 676,
      "line_range": [
        676,
        677,
        678,
        679,
        680,
        681,
        682,
        683
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "700         env['PATH'] = '{};{}'.format(exe_prefix, os.getenv('PATH'))\n701         rc = subprocess.call([exe_file, '-c',\n702             'import sys; sys.exit(not sys.flags.no_site and '\n703             '%r in sys.path and %r in sys.path and %r not in sys.path and '\n704             'all(\"\\\\r\" not in p and \"\\\\n\" not in p for p in sys.path))' % (\n705                 os.path.join(sys_prefix, 'fake-path-name'),\n706                 libpath,\n707                 os.path.join(sys_prefix, 'from-env'),\n708             )], env=env)\n709         self.assertTrue(rc, \"sys.path is incorrect\")\n",
      "filename": "cpython\\Lib\\test\\test_site.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 701,
      "line_range": [
        701,
        702,
        703,
        704,
        705,
        706,
        707,
        708
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "8 \n9 from pickle import loads, dumps\n10 from test import support\n",
      "filename": "cpython\\Lib\\test\\test_slice.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with loads module.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "239         for protocol in (0,1,2):\n240             t = loads(dumps(s, protocol))\n241             self.assertEqual(s, t)\n",
      "filename": "cpython\\Lib\\test\\test_slice.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 240,
      "line_range": [
        240
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1082         try:\n1083             hashlib.md5()\n1084         except ValueError:\n",
      "filename": "cpython\\Lib\\test\\test_smtplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 1083,
      "line_range": [
        1083
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "1 import sndhdr\n2 import pickle\n3 import unittest\n",
      "filename": "cpython\\Lib\\test\\test_sndhdr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "32             dump = pickle.dumps(what, proto)\n33             self.assertEqual(pickle.loads(dump), what)\n34 \n",
      "filename": "cpython\\Lib\\test\\test_sndhdr.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 33,
      "line_range": [
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "23 import math\n24 import pickle\n25 import struct\n",
      "filename": "cpython\\Lib\\test\\test_socket.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "698     def bindSock(self, sock):\n699         path = tempfile.mktemp(dir=self.dir_path)\n700         socket_helper.bind_unix_socket(sock, path)\n",
      "filename": "cpython\\Lib\\test\\test_socket.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 699,
      "line_range": [
        699
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "1697         for protocol in range(pickle.HIGHEST_PROTOCOL + 1):\n1698             family = pickle.loads(pickle.dumps(socket.AF_INET, protocol))\n1699             self.assertEqual(family, socket.AF_INET)\n",
      "filename": "cpython\\Lib\\test\\test_socket.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1698,
      "line_range": [
        1698
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1699             self.assertEqual(family, socket.AF_INET)\n1700             type = pickle.loads(pickle.dumps(socket.SOCK_STREAM, protocol))\n1701             self.assertEqual(type, socket.SOCK_STREAM)\n",
      "filename": "cpython\\Lib\\test\\test_socket.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1700,
      "line_range": [
        1700
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2102         nframes = 1\n2103         assert len(self.cf) == 16\n2104         header = struct.pack(self.bcm_cmd_msg_fmt,\n",
      "filename": "cpython\\Lib\\test\\test_socket.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2103,
      "line_range": [
        2103
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5954         def chunks(total, step):\n5955             assert total >= step\n5956             while total > step:\n",
      "filename": "cpython\\Lib\\test\\test_socket.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5955,
      "line_range": [
        5955
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "5961 \n5962         chunk = b\"\".join([random.choice(string.ascii_letters).encode()\n5963                           for i in range(cls.BUFSIZE)])\n",
      "filename": "cpython\\Lib\\test\\test_socket.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 5962,
      "line_range": [
        5962
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "5968             cls.FILEDATA = f.read()\n5969             assert len(cls.FILEDATA) == cls.FILESIZE\n5970 \n",
      "filename": "cpython\\Lib\\test\\test_socket.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 5969,
      "line_range": [
        5969
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "6473         with socket.create_server((\"::1\", 0), family=socket.AF_INET6) as sock:\n6474             assert sock.getsockopt(socket.IPPROTO_IPV6, socket.IPV6_V6ONLY)\n6475 \n",
      "filename": "cpython\\Lib\\test\\test_socket.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 6474,
      "line_range": [
        6474
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "99             dir = None\n100             fn = tempfile.mktemp(prefix='unix_socket.', dir=dir)\n101             self.test_files.append(fn)\n",
      "filename": "cpython\\Lib\\test\\test_socketserver.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 100,
      "line_range": [
        100
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "57             def __lt__(self, other):\n58                 if Complains.maybe_complain and random.random() < 0.001:\n59                     if verbose:\n",
      "filename": "cpython\\Lib\\test\\test_sort.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 58,
      "line_range": [
        58
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "102             s = x[:]\n103             s.sort(key=cmp_to_key(lambda a, b:  int(random.random() * 3) - 1))\n104             check(\"an insane function left some permutation\", x, s)\n",
      "filename": "cpython\\Lib\\test\\test_sort.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 103,
      "line_range": [
        103
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "124 \n125             s = [Stable(random.randrange(10), i) for i in range(n)]\n126             augmented = [(e, e.index) for e in s]\n",
      "filename": "cpython\\Lib\\test\\test_sort.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 125,
      "line_range": [
        125
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "141             def __lt__(self, other):\n142                 if L and random.random() < 0.75:\n143                     L.pop()\n",
      "filename": "cpython\\Lib\\test\\test_sort.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 142,
      "line_range": [
        142
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "145                     L.append(3)\n146                 return random.random() < 0.5\n147 \n",
      "filename": "cpython\\Lib\\test\\test_sort.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 146,
      "line_range": [
        146
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "186     def test_stability(self):\n187         data = [(random.randrange(100), i) for i in range(200)]\n188         copy = data[:]\n",
      "filename": "cpython\\Lib\\test\\test_sort.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 187,
      "line_range": [
        187
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "246     def test_reverse_stability(self):\n247         data = [(random.randrange(100), i) for i in range(200)]\n248         copy1 = data[:]\n",
      "filename": "cpython\\Lib\\test\\test_sort.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 247,
      "line_range": [
        247
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "9 import sys\n10 import subprocess\n11 import tempfile\n",
      "filename": "cpython\\Lib\\test\\test_source_encoding.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "28         d = {}\n29         exec(c, d)\n30         self.assertEqual(d['u'], '\\xf3')\n",
      "filename": "cpython\\Lib\\test\\test_source_encoding.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 29,
      "line_range": [
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "42         d = {}\n43         exec(c, d)\n44         self.assertEqual(d['\\xc6'], '\\xc6')\n",
      "filename": "cpython\\Lib\\test\\test_source_encoding.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 43,
      "line_range": [
        43
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "48         d = {}\n49         exec(c, d)\n50         self.assertEqual(d['a'], d['b'])\n",
      "filename": "cpython\\Lib\\test\\test_source_encoding.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 49,
      "line_range": [
        49
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "68     def test_20731(self):\n69         sub = subprocess.Popen([sys.executable,\n70                         os.path.join(os.path.dirname(__file__),\n71                                      'coding20731.py')],\n72                         stderr=subprocess.PIPE)\n73         err = sub.communicate()[1]\n",
      "filename": "cpython\\Lib\\test\\test_source_encoding.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 69,
      "line_range": [
        69,
        70,
        71,
        72
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "112         d = {}\n113         exec(b'# coding: cp949\\na = \"\\xaa\\xa7\"\\n', d)\n114         self.assertEqual(d['a'], '\\u3047')\n",
      "filename": "cpython\\Lib\\test\\test_source_encoding.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 113,
      "line_range": [
        113
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "212         with captured_stdout() as stdout:\n213             exec(src)\n214         out = stdout.getvalue().encode('latin1')\n",
      "filename": "cpython\\Lib\\test\\test_source_encoding.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 213,
      "line_range": [
        213
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "161     if isinstance(protocol, str):\n162         assert protocol.startswith('PROTOCOL_')\n163         protocol = getattr(ssl, protocol, None)\n",
      "filename": "cpython\\Lib\\test\\test_ssl.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 162,
      "line_range": [
        162
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "618                          ssl.wrap_socket, sock, server_side=True, certfile=\"\")\n619         with ssl.wrap_socket(sock, server_side=True, certfile=CERTFILE) as s:\n620             self.assertRaisesRegex(ValueError, \"can't connect in server-side mode\",\n",
      "filename": "cpython\\Lib\\test\\test_ssl.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "ssl.wrap_socket call with no SSL/TLS protocol version specified, the default SSLv23 could be insecure, possible security issue.",
      "line_number": 619,
      "line_range": [
        619
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b504_ssl_with_no_version.html",
      "test_id": "B504",
      "test_name": "ssl_with_no_version"
    },
    {
      "code": "623             with socket.socket() as sock:\n624                 ssl.wrap_socket(sock, certfile=NONEXISTINGCERT)\n625         self.assertEqual(cm.exception.errno, errno.ENOENT)\n",
      "filename": "cpython\\Lib\\test\\test_ssl.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "ssl.wrap_socket call with no SSL/TLS protocol version specified, the default SSLv23 could be insecure, possible security issue.",
      "line_number": 624,
      "line_range": [
        624
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b504_ssl_with_no_version.html",
      "test_id": "B504",
      "test_name": "ssl_with_no_version"
    },
    {
      "code": "627             with socket.socket() as sock:\n628                 ssl.wrap_socket(sock,\n629                     certfile=CERTFILE, keyfile=NONEXISTINGCERT)\n630         self.assertEqual(cm.exception.errno, errno.ENOENT)\n",
      "filename": "cpython\\Lib\\test\\test_ssl.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "ssl.wrap_socket call with no SSL/TLS protocol version specified, the default SSLv23 could be insecure, possible security issue.",
      "line_number": 628,
      "line_range": [
        628,
        629
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b504_ssl_with_no_version.html",
      "test_id": "B504",
      "test_name": "ssl_with_no_version"
    },
    {
      "code": "632             with socket.socket() as sock:\n633                 ssl.wrap_socket(sock,\n634                     certfile=NONEXISTINGCERT, keyfile=NONEXISTINGCERT)\n635         self.assertEqual(cm.exception.errno, errno.ENOENT)\n",
      "filename": "cpython\\Lib\\test\\test_ssl.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "ssl.wrap_socket call with no SSL/TLS protocol version specified, the default SSLv23 could be insecure, possible security issue.",
      "line_number": 633,
      "line_range": [
        633,
        634
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b504_ssl_with_no_version.html",
      "test_id": "B504",
      "test_name": "ssl_with_no_version"
    },
    {
      "code": "1354         with self.assertRaises(ssl.SSLError):\n1355             ctx.load_cert_chain(CERTFILE_PROTECTED, password=\"badpass\")\n1356         with self.assertRaisesRegex(ValueError, \"cannot be longer\"):\n",
      "filename": "cpython\\Lib\\test\\test_ssl.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'badpass'",
      "line_number": 1355,
      "line_range": [
        1355
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "2701                 asyncore.loop(1)\n2702             except:\n2703                 pass\n",
      "filename": "cpython\\Lib\\test\\test_ssl.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 2702,
      "line_range": [
        2702
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "3433         context = ssl.create_default_context(cafile=SIGNING_CA)\n3434         f = urllib.request.urlopen(url, context=context)\n3435         try:\n",
      "filename": "cpython\\Lib\\test\\test_ssl.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 3434,
      "line_range": [
        3434
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "125 \n126             os.chmod(TESTFN, 0o070)\n127             st_mode, modestr = self.get_mode()\n",
      "filename": "cpython\\Lib\\test\\test_stat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Chmod setting a permissive mask 0o70 on file (TESTFN).",
      "line_number": 126,
      "line_range": [
        126
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "132 \n133             os.chmod(TESTFN, 0o007)\n134             st_mode, modestr = self.get_mode()\n",
      "filename": "cpython\\Lib\\test\\test_stat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0o7 on file (TESTFN).",
      "line_number": 133,
      "line_range": [
        133
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "12 import math\n13 import pickle\n14 import random\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "276         # Create the standard error message for approx_equal failures.\n277         assert first != second\n278         template = (\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 277,
      "line_range": [
        277
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "320         args2 = [2459, 37.2, -12.41, Decimal('2.59'), Fraction(15, 54)]\n321         assert len(args1) == len(args2)\n322         for a, b in zip(args1, args2):\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 321,
      "line_range": [
        321
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "326         a, b = min(a, b), max(a, b)\n327         assert a < b\n328         delta = b - a  # The absolute difference between the values.\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 327,
      "line_range": [
        327
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "732         self.assertEqual(statistics._exact_ratio(1.125), (9, 8))\n733         data = [random.uniform(-100, 100) for _ in range(100)]\n734         for x in data:\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 733,
      "line_range": [
        733
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "804             # First test positive decimals.\n805             assert d > 0\n806             num, den = statistics._exact_ratio(d)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 805,
      "line_range": [
        805
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "905         \"\"\"Check that type T coerces correctly with subclasses of itself.\"\"\"\n906         assert T is not bool\n907         # Coercing a type with itself returns the same type.\n908         self.assertIs(statistics._coerce(T, T), T)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 906,
      "line_range": [
        906,
        907
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1031         # Test that a given error message is used.\n1032         msg = \"badness #%d\" % random.randint(10000, 99999)\n1033         try:\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1032,
      "line_range": [
        1032
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1109         data = self.prepare_data()\n1110         assert len(data) != 1  # Necessary to avoid infinite loop.\n1111         assert data != sorted(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1110,
      "line_range": [
        1110
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1110         assert len(data) != 1  # Necessary to avoid infinite loop.\n1111         assert data != sorted(data)\n1112         saved = data[:]\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1111,
      "line_range": [
        1111
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1112         saved = data[:]\n1113         assert data is not saved\n1114         _ = self.func(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1113,
      "line_range": [
        1113
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1280         # we differ by a very slight amount :-(\n1281         data = [random.uniform(-100, 1000) for _ in range(1000)]\n1282         self.assertApproxEqual(float(self.func(data)[1]), math.fsum(data), rel=2e-16)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1281,
      "line_range": [
        1281
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1285         # Test that the optional start argument works correctly.\n1286         data = [random.uniform(1, 1000) for _ in range(100)]\n1287         t = self.func(data)[1]\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1286,
      "line_range": [
        1286
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1337         self.assertEqual(x > 0, inf > 0)\n1338         assert x == inf\n1339 \n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1338,
      "line_range": [
        1338
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1471         expected = self.func(data) + c\n1472         assert expected != c\n1473         result = self.func([x+c for x in data])\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1472,
      "line_range": [
        1472
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1477         # Mean of [a,b,c...z] should be same as for [a,a,b,b,c,c...z,z].\n1478         data = [random.uniform(-3, 5) for _ in range(1000)]\n1479         expected = self.func(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1478,
      "line_range": [
        1478
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1596         # Harmonic mean of [a,b...z] should be same as for [a,a,b,b...z,z].\n1597         data = [random.uniform(1, 5) for _ in range(1000)]\n1598         expected = self.func(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1597,
      "line_range": [
        1597
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1617         data = [1, 2, 3, 4, 5, 6]\n1618         assert len(data)%2 == 0\n1619         self.assertEqual(self.func(data), 3.5)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1618,
      "line_range": [
        1618
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1623         data = [1, 2, 3, 4, 5, 6, 9]\n1624         assert len(data)%2 == 1\n1625         self.assertEqual(self.func(data), 4)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1624,
      "line_range": [
        1624
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1630         data = [F(1, 7), F(2, 7), F(3, 7), F(4, 7), F(5, 7)]\n1631         assert len(data)%2 == 1\n1632         random.shuffle(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1631,
      "line_range": [
        1631
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1638         data = [F(1, 7), F(2, 7), F(3, 7), F(4, 7), F(5, 7), F(6, 7)]\n1639         assert len(data)%2 == 0\n1640         random.shuffle(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1639,
      "line_range": [
        1639
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1646         data = [D('2.5'), D('3.1'), D('4.2'), D('5.7'), D('5.8')]\n1647         assert len(data)%2 == 1\n1648         random.shuffle(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1647,
      "line_range": [
        1647
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1654         data = [D('1.2'), D('2.5'), D('3.1'), D('4.2'), D('5.7'), D('5.8')]\n1655         assert len(data)%2 == 0\n1656         random.shuffle(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1655,
      "line_range": [
        1655
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1666         data = list(range(15))\n1667         assert len(data)%2 == 1\n1668         while data == sorted(data):\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1667,
      "line_range": [
        1667
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1679         data = [1, 2, 3, 4, 5, 6]\n1680         assert len(data)%2 == 0\n1681         self.assertEqual(self.func(data), 3)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1680,
      "line_range": [
        1680
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1686         data = [F(1, 7), F(2, 7), F(3, 7), F(4, 7), F(5, 7), F(6, 7)]\n1687         assert len(data)%2 == 0\n1688         random.shuffle(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1687,
      "line_range": [
        1687
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1694         data = [D('1.1'), D('2.2'), D('3.3'), D('4.4'), D('5.5'), D('6.6')]\n1695         assert len(data)%2 == 0\n1696         random.shuffle(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1695,
      "line_range": [
        1695
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1706         data = [1, 2, 3, 4, 5, 6]\n1707         assert len(data)%2 == 0\n1708         self.assertEqual(self.func(data), 4)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1707,
      "line_range": [
        1707
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1713         data = [F(1, 7), F(2, 7), F(3, 7), F(4, 7), F(5, 7), F(6, 7)]\n1714         assert len(data)%2 == 0\n1715         random.shuffle(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1714,
      "line_range": [
        1714
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1721         data = [D('1.1'), D('2.2'), D('3.3'), D('4.4'), D('5.5'), D('6.6')]\n1722         assert len(data)%2 == 0\n1723         random.shuffle(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1722,
      "line_range": [
        1722
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1735         data = [12, 13, 14, 14, 14, 15, 15]\n1736         assert len(data)%2 == 1\n1737         self.assertEqual(self.func(data), 14)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1736,
      "line_range": [
        1736
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1739         data = [12, 13, 14, 14, 14, 14, 15]\n1740         assert len(data)%2 == 1\n1741         self.assertEqual(self.func(data), 13.875)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1740,
      "line_range": [
        1740
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1743         data = [5, 10, 10, 15, 20, 20, 20, 20, 25, 25, 30]\n1744         assert len(data)%2 == 1\n1745         self.assertEqual(self.func(data, 5), 19.375)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1744,
      "line_range": [
        1744
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1747         data = [16, 18, 18, 18, 18, 20, 20, 20, 22, 22, 22, 24, 24, 26, 28]\n1748         assert len(data)%2 == 1\n1749         self.assertApproxEqual(self.func(data, 2), 20.66666667, tol=1e-8)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1748,
      "line_range": [
        1748
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1753         data = [5, 10, 10, 15, 20, 20, 20, 25, 25, 30]\n1754         assert len(data)%2 == 0\n1755         self.assertApproxEqual(self.func(data, 5), 19.16666667, tol=1e-8)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1754,
      "line_range": [
        1754
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1757         data = [2, 3, 4, 4, 4, 5]\n1758         assert len(data)%2 == 0\n1759         self.assertApproxEqual(self.func(data), 3.83333333, tol=1e-8)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1758,
      "line_range": [
        1758
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1761         data = [2, 3, 3, 4, 4, 4, 5, 5, 5, 5, 6, 6]\n1762         assert len(data)%2 == 0\n1763         self.assertEqual(self.func(data), 4.5)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1762,
      "line_range": [
        1762
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1765         data = [3, 4, 4, 4, 5, 5, 5, 5, 6, 6]\n1766         assert len(data)%2 == 0\n1767         self.assertEqual(self.func(data), 4.75)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1766,
      "line_range": [
        1766
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1781         data = [F(5, 4), F(9, 4), F(13, 4), F(13, 4), F(17, 4)]\n1782         assert len(data)%2 == 1\n1783         random.shuffle(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1782,
      "line_range": [
        1782
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1789         data = [F(5, 4), F(9, 4), F(13, 4), F(13, 4), F(17, 4), F(17, 4)]\n1790         assert len(data)%2 == 0\n1791         random.shuffle(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1790,
      "line_range": [
        1790
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1797         data = [D('5.5'), D('6.5'), D('6.5'), D('7.5'), D('8.5')]\n1798         assert len(data)%2 == 1\n1799         random.shuffle(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1798,
      "line_range": [
        1798
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1805         data = [D('5.5'), D('5.5'), D('6.5'), D('6.5'), D('7.5'), D('8.5')]\n1806         assert len(data)%2 == 0\n1807         random.shuffle(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1806,
      "line_range": [
        1806
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1810         data = [D('5.5'), D('5.5'), D('6.5'), D('7.5'), D('7.5'), D('8.5')]\n1811         assert len(data)%2 == 0\n1812         random.shuffle(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1811,
      "line_range": [
        1811
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1873         data = [1, 1, 2, 2, 2, 2, 3, 4, 5, 6, 6, 6, 6, 7, 8, 9, 9]\n1874         assert data.count(2) == data.count(6) == 4\n1875         # mode() should return 2, the first encountered mode\n1876         self.assertEqual(self.func(data), 2)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1874,
      "line_range": [
        1874,
        1875
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2003         raw = [1, 3, 3, 4, 5, 7, 9, 10, 11, 16]\n2004         assert all(x==int(x) for x in raw)\n2005         expected = self.func(raw)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2004,
      "line_range": [
        2004
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2017         # sometimes give different results.\n2018         data = [random.uniform(-3, 8) for _ in range(1000)]\n2019         expected = self.func(data)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2018,
      "line_range": [
        2018
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2105         # Test that stdev is, in fact, the square root of variance.\n2106         data = [random.uniform(-17, 24) for _ in range(1000)]\n2107         expected = math.sqrt(statistics.pvariance(data))\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2106,
      "line_range": [
        2106
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2127         # Test that stdev is, in fact, the square root of variance.\n2128         data = [random.uniform(-2, 9) for _ in range(1000)]\n2129         expected = math.sqrt(statistics.variance(data))\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2128,
      "line_range": [
        2128
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2153                 [random.lognormvariate(20.0, 3.0) for i in range(2_000)],\n2154                 [random.triangular(2000, 3000, 2200) for i in range(3_000)],\n2155             ]:\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2154,
      "line_range": [
        2154
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2322         # after the two included extreme points are removed.\n2323         data = [random.randrange(10_000) for i in range(501)]\n2324         actual = quantiles(data, n=32, method='inclusive')\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2323,
      "line_range": [
        2323
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2786         self.assertEqual(nd, nd2)\n2787         nd3 = pickle.loads(pickle.dumps(nd))\n2788         self.assertEqual(nd, nd3)\n",
      "filename": "cpython\\Lib\\test\\test_statistics.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 2787,
      "line_range": [
        2787
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "78         for c in TEMPLATE:\n79             assert c == '\\n' or ' ' <= c <= '~', repr(c)\n80 \n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 79,
      "line_range": [
        79
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "81     def test_eval_str_normal(self):\n82         self.assertEqual(eval(\"\"\" 'x' \"\"\"), 'x')\n83         self.assertEqual(eval(r\"\"\" '\\x01' \"\"\"), chr(1))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 82,
      "line_range": [
        82
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "82         self.assertEqual(eval(\"\"\" 'x' \"\"\"), 'x')\n83         self.assertEqual(eval(r\"\"\" '\\x01' \"\"\"), chr(1))\n84         self.assertEqual(eval(\"\"\" '\\x01' \"\"\"), chr(1))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 83,
      "line_range": [
        83
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "83         self.assertEqual(eval(r\"\"\" '\\x01' \"\"\"), chr(1))\n84         self.assertEqual(eval(\"\"\" '\\x01' \"\"\"), chr(1))\n85         self.assertEqual(eval(r\"\"\" '\\x81' \"\"\"), chr(0x81))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 84,
      "line_range": [
        84
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "84         self.assertEqual(eval(\"\"\" '\\x01' \"\"\"), chr(1))\n85         self.assertEqual(eval(r\"\"\" '\\x81' \"\"\"), chr(0x81))\n86         self.assertEqual(eval(\"\"\" '\\x81' \"\"\"), chr(0x81))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 85,
      "line_range": [
        85
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "85         self.assertEqual(eval(r\"\"\" '\\x81' \"\"\"), chr(0x81))\n86         self.assertEqual(eval(\"\"\" '\\x81' \"\"\"), chr(0x81))\n87         self.assertEqual(eval(r\"\"\" '\\u1881' \"\"\"), chr(0x1881))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 86,
      "line_range": [
        86
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "86         self.assertEqual(eval(\"\"\" '\\x81' \"\"\"), chr(0x81))\n87         self.assertEqual(eval(r\"\"\" '\\u1881' \"\"\"), chr(0x1881))\n88         self.assertEqual(eval(\"\"\" '\\u1881' \"\"\"), chr(0x1881))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 87,
      "line_range": [
        87
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "87         self.assertEqual(eval(r\"\"\" '\\u1881' \"\"\"), chr(0x1881))\n88         self.assertEqual(eval(\"\"\" '\\u1881' \"\"\"), chr(0x1881))\n89         self.assertEqual(eval(r\"\"\" '\\U0001d120' \"\"\"), chr(0x1d120))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 88,
      "line_range": [
        88
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "88         self.assertEqual(eval(\"\"\" '\\u1881' \"\"\"), chr(0x1881))\n89         self.assertEqual(eval(r\"\"\" '\\U0001d120' \"\"\"), chr(0x1d120))\n90         self.assertEqual(eval(\"\"\" '\\U0001d120' \"\"\"), chr(0x1d120))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 89,
      "line_range": [
        89
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "89         self.assertEqual(eval(r\"\"\" '\\U0001d120' \"\"\"), chr(0x1d120))\n90         self.assertEqual(eval(\"\"\" '\\U0001d120' \"\"\"), chr(0x1d120))\n91 \n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 90,
      "line_range": [
        90
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "112             with self.assertWarns(DeprecationWarning):\n113                 self.assertEqual(eval(r\"'\\%c'\" % b), '\\\\' + chr(b))\n114 \n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 113,
      "line_range": [
        113
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "116             warnings.simplefilter('always', category=DeprecationWarning)\n117             eval(\"'''\\n\\\\z'''\")\n118         self.assertEqual(len(w), 1)\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 117,
      "line_range": [
        117
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "124             with self.assertRaises(SyntaxError) as cm:\n125                 eval(\"'''\\n\\\\z'''\")\n126             exc = cm.exception\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 125,
      "line_range": [
        125
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "132     def test_eval_str_raw(self):\n133         self.assertEqual(eval(\"\"\" r'x' \"\"\"), 'x')\n134         self.assertEqual(eval(r\"\"\" r'\\x01' \"\"\"), '\\\\' + 'x01')\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 133,
      "line_range": [
        133
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "133         self.assertEqual(eval(\"\"\" r'x' \"\"\"), 'x')\n134         self.assertEqual(eval(r\"\"\" r'\\x01' \"\"\"), '\\\\' + 'x01')\n135         self.assertEqual(eval(\"\"\" r'\\x01' \"\"\"), chr(1))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 134,
      "line_range": [
        134
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "134         self.assertEqual(eval(r\"\"\" r'\\x01' \"\"\"), '\\\\' + 'x01')\n135         self.assertEqual(eval(\"\"\" r'\\x01' \"\"\"), chr(1))\n136         self.assertEqual(eval(r\"\"\" r'\\x81' \"\"\"), '\\\\' + 'x81')\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 135,
      "line_range": [
        135
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "135         self.assertEqual(eval(\"\"\" r'\\x01' \"\"\"), chr(1))\n136         self.assertEqual(eval(r\"\"\" r'\\x81' \"\"\"), '\\\\' + 'x81')\n137         self.assertEqual(eval(\"\"\" r'\\x81' \"\"\"), chr(0x81))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 136,
      "line_range": [
        136
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "136         self.assertEqual(eval(r\"\"\" r'\\x81' \"\"\"), '\\\\' + 'x81')\n137         self.assertEqual(eval(\"\"\" r'\\x81' \"\"\"), chr(0x81))\n138         self.assertEqual(eval(r\"\"\" r'\\u1881' \"\"\"), '\\\\' + 'u1881')\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 137,
      "line_range": [
        137
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "137         self.assertEqual(eval(\"\"\" r'\\x81' \"\"\"), chr(0x81))\n138         self.assertEqual(eval(r\"\"\" r'\\u1881' \"\"\"), '\\\\' + 'u1881')\n139         self.assertEqual(eval(\"\"\" r'\\u1881' \"\"\"), chr(0x1881))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 138,
      "line_range": [
        138
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "138         self.assertEqual(eval(r\"\"\" r'\\u1881' \"\"\"), '\\\\' + 'u1881')\n139         self.assertEqual(eval(\"\"\" r'\\u1881' \"\"\"), chr(0x1881))\n140         self.assertEqual(eval(r\"\"\" r'\\U0001d120' \"\"\"), '\\\\' + 'U0001d120')\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 139,
      "line_range": [
        139
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "139         self.assertEqual(eval(\"\"\" r'\\u1881' \"\"\"), chr(0x1881))\n140         self.assertEqual(eval(r\"\"\" r'\\U0001d120' \"\"\"), '\\\\' + 'U0001d120')\n141         self.assertEqual(eval(\"\"\" r'\\U0001d120' \"\"\"), chr(0x1d120))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 140,
      "line_range": [
        140
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "140         self.assertEqual(eval(r\"\"\" r'\\U0001d120' \"\"\"), '\\\\' + 'U0001d120')\n141         self.assertEqual(eval(\"\"\" r'\\U0001d120' \"\"\"), chr(0x1d120))\n142 \n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 141,
      "line_range": [
        141
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "143     def test_eval_bytes_normal(self):\n144         self.assertEqual(eval(\"\"\" b'x' \"\"\"), b'x')\n145         self.assertEqual(eval(r\"\"\" b'\\x01' \"\"\"), byte(1))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 144,
      "line_range": [
        144
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "144         self.assertEqual(eval(\"\"\" b'x' \"\"\"), b'x')\n145         self.assertEqual(eval(r\"\"\" b'\\x01' \"\"\"), byte(1))\n146         self.assertEqual(eval(\"\"\" b'\\x01' \"\"\"), byte(1))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 145,
      "line_range": [
        145
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "145         self.assertEqual(eval(r\"\"\" b'\\x01' \"\"\"), byte(1))\n146         self.assertEqual(eval(\"\"\" b'\\x01' \"\"\"), byte(1))\n147         self.assertEqual(eval(r\"\"\" b'\\x81' \"\"\"), byte(0x81))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 146,
      "line_range": [
        146
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "146         self.assertEqual(eval(\"\"\" b'\\x01' \"\"\"), byte(1))\n147         self.assertEqual(eval(r\"\"\" b'\\x81' \"\"\"), byte(0x81))\n148         self.assertRaises(SyntaxError, eval, \"\"\" b'\\x81' \"\"\")\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 147,
      "line_range": [
        147
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "148         self.assertRaises(SyntaxError, eval, \"\"\" b'\\x81' \"\"\")\n149         self.assertEqual(eval(r\"\"\" br'\\u1881' \"\"\"), b'\\\\' + b'u1881')\n150         self.assertRaises(SyntaxError, eval, \"\"\" b'\\u1881' \"\"\")\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 149,
      "line_range": [
        149
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "150         self.assertRaises(SyntaxError, eval, \"\"\" b'\\u1881' \"\"\")\n151         self.assertEqual(eval(r\"\"\" br'\\U0001d120' \"\"\"), b'\\\\' + b'U0001d120')\n152         self.assertRaises(SyntaxError, eval, \"\"\" b'\\U0001d120' \"\"\")\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 151,
      "line_range": [
        151
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "162             with self.assertWarns(DeprecationWarning):\n163                 self.assertEqual(eval(r\"b'\\%c'\" % b), b'\\\\' + bytes([b]))\n164 \n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 163,
      "line_range": [
        163
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "166             warnings.simplefilter('always', category=DeprecationWarning)\n167             eval(\"b'''\\n\\\\z'''\")\n168         self.assertEqual(len(w), 1)\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 167,
      "line_range": [
        167
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "174             with self.assertRaises(SyntaxError) as cm:\n175                 eval(\"b'''\\n\\\\z'''\")\n176             exc = cm.exception\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 175,
      "line_range": [
        175
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "181     def test_eval_bytes_raw(self):\n182         self.assertEqual(eval(\"\"\" br'x' \"\"\"), b'x')\n183         self.assertEqual(eval(\"\"\" rb'x' \"\"\"), b'x')\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 182,
      "line_range": [
        182
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "182         self.assertEqual(eval(\"\"\" br'x' \"\"\"), b'x')\n183         self.assertEqual(eval(\"\"\" rb'x' \"\"\"), b'x')\n184         self.assertEqual(eval(r\"\"\" br'\\x01' \"\"\"), b'\\\\' + b'x01')\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 183,
      "line_range": [
        183
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "183         self.assertEqual(eval(\"\"\" rb'x' \"\"\"), b'x')\n184         self.assertEqual(eval(r\"\"\" br'\\x01' \"\"\"), b'\\\\' + b'x01')\n185         self.assertEqual(eval(r\"\"\" rb'\\x01' \"\"\"), b'\\\\' + b'x01')\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 184,
      "line_range": [
        184
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "184         self.assertEqual(eval(r\"\"\" br'\\x01' \"\"\"), b'\\\\' + b'x01')\n185         self.assertEqual(eval(r\"\"\" rb'\\x01' \"\"\"), b'\\\\' + b'x01')\n186         self.assertEqual(eval(\"\"\" br'\\x01' \"\"\"), byte(1))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 185,
      "line_range": [
        185
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "185         self.assertEqual(eval(r\"\"\" rb'\\x01' \"\"\"), b'\\\\' + b'x01')\n186         self.assertEqual(eval(\"\"\" br'\\x01' \"\"\"), byte(1))\n187         self.assertEqual(eval(\"\"\" rb'\\x01' \"\"\"), byte(1))\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 186,
      "line_range": [
        186
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "186         self.assertEqual(eval(\"\"\" br'\\x01' \"\"\"), byte(1))\n187         self.assertEqual(eval(\"\"\" rb'\\x01' \"\"\"), byte(1))\n188         self.assertEqual(eval(r\"\"\" br'\\x81' \"\"\"), b\"\\\\\" + b\"x81\")\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 187,
      "line_range": [
        187
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "187         self.assertEqual(eval(\"\"\" rb'\\x01' \"\"\"), byte(1))\n188         self.assertEqual(eval(r\"\"\" br'\\x81' \"\"\"), b\"\\\\\" + b\"x81\")\n189         self.assertEqual(eval(r\"\"\" rb'\\x81' \"\"\"), b\"\\\\\" + b\"x81\")\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 188,
      "line_range": [
        188
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "188         self.assertEqual(eval(r\"\"\" br'\\x81' \"\"\"), b\"\\\\\" + b\"x81\")\n189         self.assertEqual(eval(r\"\"\" rb'\\x81' \"\"\"), b\"\\\\\" + b\"x81\")\n190         self.assertRaises(SyntaxError, eval, \"\"\" br'\\x81' \"\"\")\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 189,
      "line_range": [
        189
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "191         self.assertRaises(SyntaxError, eval, \"\"\" rb'\\x81' \"\"\")\n192         self.assertEqual(eval(r\"\"\" br'\\u1881' \"\"\"), b\"\\\\\" + b\"u1881\")\n193         self.assertEqual(eval(r\"\"\" rb'\\u1881' \"\"\"), b\"\\\\\" + b\"u1881\")\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 192,
      "line_range": [
        192
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "192         self.assertEqual(eval(r\"\"\" br'\\u1881' \"\"\"), b\"\\\\\" + b\"u1881\")\n193         self.assertEqual(eval(r\"\"\" rb'\\u1881' \"\"\"), b\"\\\\\" + b\"u1881\")\n194         self.assertRaises(SyntaxError, eval, \"\"\" br'\\u1881' \"\"\")\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 193,
      "line_range": [
        193
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "195         self.assertRaises(SyntaxError, eval, \"\"\" rb'\\u1881' \"\"\")\n196         self.assertEqual(eval(r\"\"\" br'\\U0001d120' \"\"\"), b\"\\\\\" + b\"U0001d120\")\n197         self.assertEqual(eval(r\"\"\" rb'\\U0001d120' \"\"\"), b\"\\\\\" + b\"U0001d120\")\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 196,
      "line_range": [
        196
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "196         self.assertEqual(eval(r\"\"\" br'\\U0001d120' \"\"\"), b\"\\\\\" + b\"U0001d120\")\n197         self.assertEqual(eval(r\"\"\" rb'\\U0001d120' \"\"\"), b\"\\\\\" + b\"U0001d120\")\n198         self.assertRaises(SyntaxError, eval, \"\"\" br'\\U0001d120' \"\"\")\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 197,
      "line_range": [
        197
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "207     def test_eval_str_u(self):\n208         self.assertEqual(eval(\"\"\" u'x' \"\"\"), 'x')\n209         self.assertEqual(eval(\"\"\" U'\\u00e4' \"\"\"), '\u00e4')\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 208,
      "line_range": [
        208
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "208         self.assertEqual(eval(\"\"\" u'x' \"\"\"), 'x')\n209         self.assertEqual(eval(\"\"\" U'\\u00e4' \"\"\"), '\u00e4')\n210         self.assertEqual(eval(\"\"\" u'\\N{LATIN SMALL LETTER A WITH DIAERESIS}' \"\"\"), '\u00e4')\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 209,
      "line_range": [
        209
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "209         self.assertEqual(eval(\"\"\" U'\\u00e4' \"\"\"), '\u00e4')\n210         self.assertEqual(eval(\"\"\" u'\\N{LATIN SMALL LETTER A WITH DIAERESIS}' \"\"\"), '\u00e4')\n211         self.assertRaises(SyntaxError, eval, \"\"\" ur'' \"\"\")\n",
      "filename": "cpython\\Lib\\test\\test_string_literals.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 210,
      "line_range": [
        210
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "63     # double check that (q, e) has the right form\n64     assert q.bit_length() <= mant_dig and e >= min_exp - mant_dig\n65     assert q.bit_length() == mant_dig or e == min_exp - mant_dig\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 64,
      "line_range": [
        64
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "64     assert q.bit_length() <= mant_dig and e >= min_exp - mant_dig\n65     assert q.bit_length() == mant_dig or e == min_exp - mant_dig\n66 \n67     # check for overflow and underflow\n68     if e + q.bit_length() > max_exp:\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 65,
      "line_range": [
        65,
        66,
        67
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "118                 # with small number of significant digits.\n119                 n, e = random.randrange(lower, upper, 2), k\n120 \n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 119,
      "line_range": [
        119
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "123                     n, e = n // 5, e + 1\n124                 assert n % 10 in (1, 3, 7, 9)\n125 \n126                 # Try numbers of the form n * 2**p2 * 10**e, p2 >= 0,\n127                 # until n * 2**p2 has more than 20 significant digits.\n128                 digits, exponent = n, e\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 124,
      "line_range": [
        124,
        125,
        126,
        127
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "152             # bit pattern for a random finite positive (or +0.0) float\n153             bits = random.randrange(2047*2**52)\n154 \n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 153,
      "line_range": [
        153
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "186             for j in range(1000):\n187                 digits = n + random.randrange(-3*u, 3*u)\n188                 exponent = e\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 187,
      "line_range": [
        187
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "201             for j in range(TEST_SIZE):\n202                 digits = base + random.randrange(-1000, 1000)\n203                 s = '{}e{}'.format(digits, exponent)\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 202,
      "line_range": [
        202
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "209             for i in range(10 * TEST_SIZE):\n210                 digits = random.randrange(dig10)\n211                 exponent = random.randrange(-400, 400)\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 210,
      "line_range": [
        210
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "210                 digits = random.randrange(dig10)\n211                 exponent = random.randrange(-400, 400)\n212                 s = '{}e{}'.format(digits, exponent)\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 211,
      "line_range": [
        211
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "223             for j in range(TEST_SIZE):\n224                 s = random.choice(signs)\n225                 intpart_len = random.randrange(5)\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 224,
      "line_range": [
        224
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "224                 s = random.choice(signs)\n225                 intpart_len = random.randrange(5)\n226                 s += ''.join(random.choice(digits) for _ in range(intpart_len))\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 225,
      "line_range": [
        225
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "225                 intpart_len = random.randrange(5)\n226                 s += ''.join(random.choice(digits) for _ in range(intpart_len))\n227                 if random.choice([True, False]):\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 226,
      "line_range": [
        226
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "226                 s += ''.join(random.choice(digits) for _ in range(intpart_len))\n227                 if random.choice([True, False]):\n228                     s += '.'\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 227,
      "line_range": [
        227
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "228                     s += '.'\n229                     fracpart_len = random.randrange(5)\n230                     s += ''.join(random.choice(digits)\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 229,
      "line_range": [
        229
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "229                     fracpart_len = random.randrange(5)\n230                     s += ''.join(random.choice(digits)\n231                                  for _ in range(fracpart_len))\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 230,
      "line_range": [
        230
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "233                     fracpart_len = 0\n234                 if random.choice([True, False]):\n235                     s += random.choice(['e', 'E'])\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 234,
      "line_range": [
        234
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "234                 if random.choice([True, False]):\n235                     s += random.choice(['e', 'E'])\n236                     s += random.choice(signs)\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 235,
      "line_range": [
        235
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "235                     s += random.choice(['e', 'E'])\n236                     s += random.choice(signs)\n237                     exponent_len = random.randrange(1, 4)\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 236,
      "line_range": [
        236
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "236                     s += random.choice(signs)\n237                     exponent_len = random.randrange(1, 4)\n238                     s += ''.join(random.choice(digits)\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 237,
      "line_range": [
        237
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "237                     exponent_len = random.randrange(1, 4)\n238                     s += ''.join(random.choice(digits)\n239                                  for _ in range(exponent_len))\n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 238,
      "line_range": [
        238
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "248                     else:\n249                         assert False, \"expected ValueError\"\n250 \n",
      "filename": "cpython\\Lib\\test\\test_strtod.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 249,
      "line_range": [
        249
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "245                     for j in range(self.bytesize):\n246                         val = (val << 8) | randrange(256)\n247                     values.append(val)\n",
      "filename": "cpython\\Lib\\test\\test_struct.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 246,
      "line_range": [
        246
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "6 from test.support import warnings_helper\n7 import subprocess\n8 import sys\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "73     if (os.access(shell_true, os.X_OK) and\n74         subprocess.run([shell_true]).returncode == 0):\n75         global ZERO_RETURN_CMD\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 74,
      "line_range": [
        74
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "112     def test_io_buffered_by_default(self):\n113         p = subprocess.Popen(ZERO_RETURN_CMD,\n114                              stdin=subprocess.PIPE, stdout=subprocess.PIPE,\n115                              stderr=subprocess.PIPE)\n116         try:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 113,
      "line_range": [
        113,
        114,
        115
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "126     def test_io_unbuffered_works(self):\n127         p = subprocess.Popen(ZERO_RETURN_CMD,\n128                              stdin=subprocess.PIPE, stdout=subprocess.PIPE,\n129                              stderr=subprocess.PIPE, bufsize=0)\n130         try:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 127,
      "line_range": [
        127,
        128,
        129
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "141         # call() function with sequence argument\n142         rc = subprocess.call([sys.executable, \"-c\",\n143                               \"import sys; sys.exit(47)\"])\n144         self.assertEqual(rc, 47)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 142,
      "line_range": [
        142,
        143
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "156         # check_call() function with zero return code\n157         rc = subprocess.check_call(ZERO_RETURN_CMD)\n158         self.assertEqual(rc, 0)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 157,
      "line_range": [
        157
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "162         with self.assertRaises(subprocess.CalledProcessError) as c:\n163             subprocess.check_call([sys.executable, \"-c\",\n164                                    \"import sys; sys.exit(47)\"])\n165         self.assertEqual(c.exception.returncode, 47)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 163,
      "line_range": [
        163,
        164
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "168         # check_output() function with zero return code\n169         output = subprocess.check_output(\n170                 [sys.executable, \"-c\", \"print('BDFL')\"])\n171         self.assertIn(b'BDFL', output)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 169,
      "line_range": [
        169,
        170
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "175         with self.assertRaises(subprocess.CalledProcessError) as c:\n176             subprocess.check_output(\n177                     [sys.executable, \"-c\", \"import sys; sys.exit(5)\"])\n178         self.assertEqual(c.exception.returncode, 5)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 176,
      "line_range": [
        176,
        177
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "181         # check_output() function stderr redirected to stdout\n182         output = subprocess.check_output(\n183                 [sys.executable, \"-c\", \"import sys; sys.stderr.write('BDFL')\"],\n184                 stderr=subprocess.STDOUT)\n185         self.assertIn(b'BDFL', output)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 182,
      "line_range": [
        182,
        183,
        184
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "192         tf.seek(0)\n193         output = subprocess.check_output(\n194                 [sys.executable, \"-c\",\n195                  \"import sys; sys.stdout.write(sys.stdin.read().upper())\"],\n196                 stdin=tf)\n197         self.assertIn(b'PEAR', output)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 193,
      "line_range": [
        193,
        194,
        195,
        196
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "200         # check_output() can be called with input set to a string\n201         output = subprocess.check_output(\n202                 [sys.executable, \"-c\",\n203                  \"import sys; sys.stdout.write(sys.stdin.read().upper())\"],\n204                 input=b'pear')\n205         self.assertIn(b'PEAR', output)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 201,
      "line_range": [
        201,
        202,
        203,
        204
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "209         with self.assertRaises(ValueError) as c:\n210             output = subprocess.check_output(\n211                     [sys.executable, \"-c\", \"print('will not be run')\"],\n212                     stdout=sys.stdout)\n213             self.fail(\"Expected ValueError when stdout arg supplied.\")\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 210,
      "line_range": [
        210,
        211,
        212
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "222         with self.assertRaises(ValueError) as c:\n223             output = subprocess.check_output(\n224                     [sys.executable, \"-c\", \"print('will not be run')\"],\n225                     stdin=tf, input=b'hare')\n226             self.fail(\"Expected ValueError when stdin and input args supplied.\")\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 223,
      "line_range": [
        223,
        224,
        225
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "232         with self.assertRaises(subprocess.TimeoutExpired) as c:\n233             output = subprocess.check_output(\n234                     [sys.executable, \"-c\",\n235                      \"import sys, time\\n\"\n236                      \"sys.stdout.write('BDFL')\\n\"\n237                      \"sys.stdout.flush()\\n\"\n238                      \"time.sleep(3600)\"],\n239                     # Some heavily loaded buildbots (sparc Debian 3.x) require\n240                     # this much time to start and print.\n241                     timeout=3)\n242             self.fail(\"Expected TimeoutExpired.\")\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 233,
      "line_range": [
        233,
        234,
        235,
        236,
        237,
        238,
        239,
        240,
        241
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "248         newenv[\"FRUIT\"] = \"banana\"\n249         rc = subprocess.call([sys.executable, \"-c\",\n250                               'import sys, os;'\n251                               'sys.exit(os.getenv(\"FRUIT\")==\"banana\")'],\n252                              env=newenv)\n253         self.assertEqual(rc, 1)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 249,
      "line_range": [
        249,
        250,
        251,
        252
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "266         # .stdin is None when not redirected\n267         p = subprocess.Popen([sys.executable, \"-c\", 'print(\"banana\")'],\n268                          stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n269         self.addCleanup(p.stdout.close)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 267,
      "line_range": [
        267,
        268
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "288                 'p.wait(); assert p.stdout is None;')\n289         p = subprocess.Popen([sys.executable, \"-c\", code],\n290                              stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n291         self.addCleanup(p.stdout.close)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 289,
      "line_range": [
        289,
        290
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "298         # .stderr is None when not redirected\n299         p = subprocess.Popen([sys.executable, \"-c\", 'print(\"banana\")'],\n300                          stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n301         self.addCleanup(p.stdout.close)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 299,
      "line_range": [
        299,
        300
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "309         args = pre_args + [\"import sys; sys.exit(47)\"]\n310         p = subprocess.Popen(args, **kwargs)\n311         p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 310,
      "line_range": [
        310
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "350         # when shell=True.\n351         self._assert_python([], executable=sys.executable, shell=True)\n352 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with shell=True parameter identified, possible security issue.",
      "line_number": 351,
      "line_range": [
        351
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b604_any_other_function_with_shell_equals_true.html",
      "test_id": "B604",
      "test_name": "any_other_function_with_shell_equals_true"
    },
    {
      "code": "355         self._assert_python([], executable=os.fsencode(sys.executable),\n356                             shell=True)\n357 \n358     @unittest.skipIf(mswindows, \"executable argument replaces shell\")\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with shell=True parameter identified, possible security issue.",
      "line_number": 356,
      "line_range": [
        355,
        356
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b604_any_other_function_with_shell_equals_true.html",
      "test_id": "B604",
      "test_name": "any_other_function_with_shell_equals_true"
    },
    {
      "code": "360         self._assert_python([], executable=FakePath(sys.executable),\n361                             shell=True)\n362 \n363     # For use in the test_cwd* tests below.\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with shell=True parameter identified, possible security issue.",
      "line_number": 361,
      "line_range": [
        360,
        361
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b604_any_other_function_with_shell_equals_true.html",
      "test_id": "B604",
      "test_name": "any_other_function_with_shell_equals_true"
    },
    {
      "code": "381         # matches *expected_cwd*.\n382         p = subprocess.Popen([python_arg, \"-c\",\n383                               \"import os, sys; \"\n384                               \"buf = sys.stdout.buffer; \"\n385                               \"buf.write(os.getcwd().encode()); \"\n386                               \"buf.flush(); \"\n387                               \"sys.exit(47)\"],\n388                               stdout=subprocess.PIPE,\n389                               **kwargs)\n390         self.addCleanup(p.stdout.close)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 382,
      "line_range": [
        382,
        383,
        384,
        385,
        386,
        387,
        388,
        389
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "481         # stdin redirection\n482         p = subprocess.Popen([sys.executable, \"-c\",\n483                          'import sys; sys.exit(sys.stdin.read() == \"pear\")'],\n484                         stdin=subprocess.PIPE)\n485         p.stdin.write(b\"pear\")\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 482,
      "line_range": [
        482,
        483,
        484
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "496         os.lseek(d, 0, 0)\n497         p = subprocess.Popen([sys.executable, \"-c\",\n498                          'import sys; sys.exit(sys.stdin.read() == \"pear\")'],\n499                          stdin=d)\n500         p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 497,
      "line_range": [
        497,
        498,
        499
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "508         tf.seek(0)\n509         p = subprocess.Popen([sys.executable, \"-c\",\n510                          'import sys; sys.exit(sys.stdin.read() == \"pear\")'],\n511                          stdin=tf)\n512         p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 509,
      "line_range": [
        509,
        510,
        511
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "516         # stdout redirection\n517         p = subprocess.Popen([sys.executable, \"-c\",\n518                           'import sys; sys.stdout.write(\"orange\")'],\n519                          stdout=subprocess.PIPE)\n520         with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 517,
      "line_range": [
        517,
        518,
        519
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "527         d = tf.fileno()\n528         p = subprocess.Popen([sys.executable, \"-c\",\n529                           'import sys; sys.stdout.write(\"orange\")'],\n530                          stdout=d)\n531         p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 528,
      "line_range": [
        528,
        529,
        530
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "538         self.addCleanup(tf.close)\n539         p = subprocess.Popen([sys.executable, \"-c\",\n540                           'import sys; sys.stdout.write(\"orange\")'],\n541                          stdout=tf)\n542         p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 539,
      "line_range": [
        539,
        540,
        541
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "547         # stderr redirection\n548         p = subprocess.Popen([sys.executable, \"-c\",\n549                           'import sys; sys.stderr.write(\"strawberry\")'],\n550                          stderr=subprocess.PIPE)\n551         with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 548,
      "line_range": [
        548,
        549,
        550
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "558         d = tf.fileno()\n559         p = subprocess.Popen([sys.executable, \"-c\",\n560                           'import sys; sys.stderr.write(\"strawberry\")'],\n561                          stderr=d)\n562         p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 559,
      "line_range": [
        559,
        560,
        561
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "569         self.addCleanup(tf.close)\n570         p = subprocess.Popen([sys.executable, \"-c\",\n571                           'import sys; sys.stderr.write(\"strawberry\")'],\n572                          stderr=tf)\n573         p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 570,
      "line_range": [
        570,
        571,
        572
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "582         # - the parent should get grandchild's stderr in child's stdout\n583         p = subprocess.Popen([sys.executable, \"-c\",\n584                               'import sys, subprocess;'\n585                               'rc = subprocess.call([sys.executable, \"-c\",'\n586                               '    \"import sys;\"'\n587                               '    \"sys.stderr.write(\\'42\\')\"],'\n588                               '    stderr=subprocess.STDOUT);'\n589                               'sys.exit(rc)'],\n590                              stdout=subprocess.PIPE,\n591                              stderr=subprocess.PIPE)\n592         stdout, stderr = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 583,
      "line_range": [
        583,
        584,
        585,
        586,
        587,
        588,
        589,
        590,
        591
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "599         # capture stdout and stderr to the same pipe\n600         p = subprocess.Popen([sys.executable, \"-c\",\n601                               'import sys;'\n602                               'sys.stdout.write(\"apple\");'\n603                               'sys.stdout.flush();'\n604                               'sys.stderr.write(\"orange\")'],\n605                              stdout=subprocess.PIPE,\n606                              stderr=subprocess.STDOUT)\n607         with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 600,
      "line_range": [
        600,
        601,
        602,
        603,
        604,
        605,
        606
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "613         self.addCleanup(tf.close)\n614         p = subprocess.Popen([sys.executable, \"-c\",\n615                               'import sys;'\n616                               'sys.stdout.write(\"apple\");'\n617                               'sys.stdout.flush();'\n618                               'sys.stderr.write(\"orange\")'],\n619                              stdout=tf,\n620                              stderr=tf)\n621         p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 614,
      "line_range": [
        614,
        615,
        616,
        617,
        618,
        619,
        620
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "635                 'assert rc == 18')\n636         p = subprocess.Popen([sys.executable, \"-c\", code],\n637                              stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n638         self.addCleanup(p.stdout.close)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 636,
      "line_range": [
        636,
        637
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "644     def test_stdout_devnull(self):\n645         p = subprocess.Popen([sys.executable, \"-c\",\n646                               'for i in range(10240):'\n647                               'print(\"x\" * 1024)'],\n648                               stdout=subprocess.DEVNULL)\n649         p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 645,
      "line_range": [
        645,
        646,
        647,
        648
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "652     def test_stderr_devnull(self):\n653         p = subprocess.Popen([sys.executable, \"-c\",\n654                               'import sys\\n'\n655                               'for i in range(10240):'\n656                               'sys.stderr.write(\"x\" * 1024)'],\n657                               stderr=subprocess.DEVNULL)\n658         p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 653,
      "line_range": [
        653,
        654,
        655,
        656,
        657
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "661     def test_stdin_devnull(self):\n662         p = subprocess.Popen([sys.executable, \"-c\",\n663                               'import sys;'\n664                               'sys.stdin.read(1)'],\n665                               stdin=subprocess.DEVNULL)\n666         p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 662,
      "line_range": [
        662,
        663,
        664,
        665
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "682                 'default pipesize too small to perform test.')\n683         p = subprocess.Popen(\n684             [sys.executable, \"-c\",\n685              'import sys; sys.stdin.read(); sys.stdout.write(\"out\"); '\n686              'sys.stderr.write(\"error!\")'],\n687             stdin=subprocess.PIPE, stdout=subprocess.PIPE,\n688             stderr=subprocess.PIPE, pipesize=pipesize)\n689         try:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 683,
      "line_range": [
        683,
        684,
        685,
        686,
        687,
        688
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "705     def test_pipesize_default(self):\n706         p = subprocess.Popen(\n707             [sys.executable, \"-c\",\n708              'import sys; sys.stdin.read(); sys.stdout.write(\"out\"); '\n709              'sys.stderr.write(\"error!\")'],\n710             stdin=subprocess.PIPE, stdout=subprocess.PIPE,\n711             stderr=subprocess.PIPE, pipesize=-1)\n712         try:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 706,
      "line_range": [
        706,
        707,
        708,
        709,
        710,
        711
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "732         newenv[\"FRUIT\"] = \"orange\"\n733         with subprocess.Popen([sys.executable, \"-c\",\n734                                'import sys,os;'\n735                                'sys.stdout.write(os.getenv(\"FRUIT\"))'],\n736                               stdout=subprocess.PIPE,\n737                               env=newenv) as p:\n738             stdout, stderr = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 733,
      "line_range": [
        733,
        734,
        735,
        736,
        737
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "759 \n760         with subprocess.Popen([sys.executable, \"-c\",\n761                                'import os; print(list(os.environ.keys()))'],\n762                               stdout=subprocess.PIPE, env={}) as p:\n763             stdout, stderr = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 760,
      "line_range": [
        760,
        761,
        762
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "763             stdout, stderr = p.communicate()\n764             child_env_names = eval(stdout.strip())\n765             self.assertIsInstance(child_env_names, list)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 764,
      "line_range": [
        764
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "773         with self.assertRaises(ValueError):\n774             subprocess.Popen([cmd, \"-c\", \"pass\"])\n775 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 774,
      "line_range": [
        774
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "777         with self.assertRaises(ValueError):\n778             subprocess.Popen([sys.executable, \"-c\", \"pass#\\0\"])\n779 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 778,
      "line_range": [
        778
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "784         with self.assertRaises(ValueError):\n785             subprocess.Popen(ZERO_RETURN_CMD, env=newenv)\n786 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 785,
      "line_range": [
        785
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "790         with self.assertRaises(ValueError):\n791             subprocess.Popen(ZERO_RETURN_CMD, env=newenv)\n792 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 791,
      "line_range": [
        791
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "796         with self.assertRaises(ValueError):\n797             subprocess.Popen(ZERO_RETURN_CMD, env=newenv)\n798 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 797,
      "line_range": [
        797
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "801         newenv[\"FRUIT\"] = \"orange=lemon\"\n802         with subprocess.Popen([sys.executable, \"-c\",\n803                                'import sys, os;'\n804                                'sys.stdout.write(os.getenv(\"FRUIT\"))'],\n805                               stdout=subprocess.PIPE,\n806                               env=newenv) as p:\n807             stdout, stderr = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 802,
      "line_range": [
        802,
        803,
        804,
        805,
        806
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "810     def test_communicate_stdin(self):\n811         p = subprocess.Popen([sys.executable, \"-c\",\n812                               'import sys;'\n813                               'sys.exit(sys.stdin.read() == \"pear\")'],\n814                              stdin=subprocess.PIPE)\n815         p.communicate(b\"pear\")\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 811,
      "line_range": [
        811,
        812,
        813,
        814
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "818     def test_communicate_stdout(self):\n819         p = subprocess.Popen([sys.executable, \"-c\",\n820                               'import sys; sys.stdout.write(\"pineapple\")'],\n821                              stdout=subprocess.PIPE)\n822         (stdout, stderr) = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 819,
      "line_range": [
        819,
        820,
        821
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "826     def test_communicate_stderr(self):\n827         p = subprocess.Popen([sys.executable, \"-c\",\n828                               'import sys; sys.stderr.write(\"pineapple\")'],\n829                              stderr=subprocess.PIPE)\n830         (stdout, stderr) = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 827,
      "line_range": [
        827,
        828,
        829
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "834     def test_communicate(self):\n835         p = subprocess.Popen([sys.executable, \"-c\",\n836                               'import sys,os;'\n837                               'sys.stderr.write(\"pineapple\");'\n838                               'sys.stdout.write(sys.stdin.read())'],\n839                              stdin=subprocess.PIPE,\n840                              stdout=subprocess.PIPE,\n841                              stderr=subprocess.PIPE)\n842         self.addCleanup(p.stdout.close)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 835,
      "line_range": [
        835,
        836,
        837,
        838,
        839,
        840,
        841
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "849     def test_communicate_timeout(self):\n850         p = subprocess.Popen([sys.executable, \"-c\",\n851                               'import sys,os,time;'\n852                               'sys.stderr.write(\"pineapple\\\\n\");'\n853                               'time.sleep(1);'\n854                               'sys.stderr.write(\"pear\\\\n\");'\n855                               'sys.stdout.write(sys.stdin.read())'],\n856                              universal_newlines=True,\n857                              stdin=subprocess.PIPE,\n858                              stdout=subprocess.PIPE,\n859                              stderr=subprocess.PIPE)\n860         self.assertRaises(subprocess.TimeoutExpired, p.communicate, \"banana\",\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 850,
      "line_range": [
        850,
        851,
        852,
        853,
        854,
        855,
        856,
        857,
        858,
        859
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "869         # Test an expiring timeout while the child is outputting lots of data.\n870         p = subprocess.Popen([sys.executable, \"-c\",\n871                               'import sys,os,time;'\n872                               'sys.stdout.write(\"a\" * (64 * 1024));'\n873                               'time.sleep(0.2);'\n874                               'sys.stdout.write(\"a\" * (64 * 1024));'\n875                               'time.sleep(0.2);'\n876                               'sys.stdout.write(\"a\" * (64 * 1024));'\n877                               'time.sleep(0.2);'\n878                               'sys.stdout.write(\"a\" * (64 * 1024));'],\n879                              stdout=subprocess.PIPE)\n880         self.assertRaises(subprocess.TimeoutExpired, p.communicate, timeout=0.4)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 870,
      "line_range": [
        870,
        871,
        872,
        873,
        874,
        875,
        876,
        877,
        878,
        879
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "897                         continue\n898                     p = subprocess.Popen(ZERO_RETURN_CMD, **options)\n899                     p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 898,
      "line_range": [
        898
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "908         # communicate() should return None if no redirection is active\n909         p = subprocess.Popen([sys.executable, \"-c\",\n910                               \"import sys; sys.exit(47)\"])\n911         (stdout, stderr) = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 909,
      "line_range": [
        909,
        910
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "921         os.close(y)\n922         p = subprocess.Popen([sys.executable, \"-c\",\n923                               'import sys,os;'\n924                               'sys.stdout.write(sys.stdin.read(47));'\n925                               'sys.stderr.write(\"x\" * %d);'\n926                               'sys.stdout.write(sys.stdin.read())' %\n927                               support.PIPE_MAX_SIZE],\n928                              stdin=subprocess.PIPE,\n929                              stdout=subprocess.PIPE,\n930                              stderr=subprocess.PIPE)\n931         self.addCleanup(p.stdout.close)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 922,
      "line_range": [
        922,
        923,
        924,
        925,
        926,
        927,
        928,
        929,
        930
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "939         # stdin.write before communicate()\n940         p = subprocess.Popen([sys.executable, \"-c\",\n941                               'import sys,os;'\n942                               'sys.stdout.write(sys.stdin.read())'],\n943                              stdin=subprocess.PIPE,\n944                              stdout=subprocess.PIPE,\n945                              stderr=subprocess.PIPE)\n946         self.addCleanup(p.stdout.close)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 940,
      "line_range": [
        940,
        941,
        942,
        943,
        944,
        945
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "975         for extra_kwarg in ('universal_newlines', 'text'):\n976             p = subprocess.Popen(args, **{'stdin': subprocess.PIPE,\n977                                           'stdout': subprocess.PIPE,\n978                                           extra_kwarg: True})\n979             with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 976,
      "line_range": [
        976,
        977,
        978
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "994         # universal newlines through communicate()\n995         p = subprocess.Popen([sys.executable, \"-c\",\n996                               'import sys,os;' + SETBINARY +\n997                               'buf = sys.stdout.buffer;'\n998                               'buf.write(b\"line2\\\\n\");'\n999                               'buf.flush();'\n1000                               'buf.write(b\"line4\\\\n\");'\n1001                               'buf.flush();'\n1002                               'buf.write(b\"line5\\\\r\\\\n\");'\n1003                               'buf.flush();'\n1004                               'buf.write(b\"line6\\\\r\");'\n1005                               'buf.flush();'\n1006                               'buf.write(b\"\\\\nline7\");'\n1007                               'buf.flush();'\n1008                               'buf.write(b\"\\\\nline8\");'],\n1009                              stderr=subprocess.PIPE,\n1010                              stdout=subprocess.PIPE,\n1011                              universal_newlines=1)\n1012         self.addCleanup(p.stdout.close)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 995,
      "line_range": [
        995,
        996,
        997,
        998,
        999,
        1000,
        1001,
        1002,
        1003,
        1004,
        1005,
        1006,
        1007,
        1008,
        1009,
        1010,
        1011
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1019         # universal newlines through communicate(), with only stdin\n1020         p = subprocess.Popen([sys.executable, \"-c\",\n1021                               'import sys,os;' + SETBINARY + textwrap.dedent('''\n1022                                s = sys.stdin.readline()\n1023                                assert s == \"line1\\\\n\", repr(s)\n1024                                s = sys.stdin.read()\n1025                                assert s == \"line3\\\\n\", repr(s)\n1026                               ''')],\n1027                              stdin=subprocess.PIPE,\n1028                              universal_newlines=1)\n1029         (stdout, stderr) = p.communicate(\"line1\\nline3\\n\")\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1020,
      "line_range": [
        1020,
        1021,
        1022,
        1023,
        1024,
        1025,
        1026,
        1027,
        1028
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1036         # code path is tested when the number of pipes is zero or one.\n1037         p = subprocess.Popen(ZERO_RETURN_CMD,\n1038                              stdin=subprocess.PIPE,\n1039                              stdout=subprocess.PIPE,\n1040                              universal_newlines=True)\n1041         p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1037,
      "line_range": [
        1037,
        1038,
        1039,
        1040
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1045         # universal newlines through communicate(), with stdin, stdout, stderr\n1046         p = subprocess.Popen([sys.executable, \"-c\",\n1047                               'import sys,os;' + SETBINARY + textwrap.dedent('''\n1048                                s = sys.stdin.buffer.readline()\n1049                                sys.stdout.buffer.write(s)\n1050                                sys.stdout.buffer.write(b\"line2\\\\r\")\n1051                                sys.stderr.buffer.write(b\"eline2\\\\n\")\n1052                                s = sys.stdin.buffer.read()\n1053                                sys.stdout.buffer.write(s)\n1054                                sys.stdout.buffer.write(b\"line4\\\\n\")\n1055                                sys.stdout.buffer.write(b\"line5\\\\r\\\\n\")\n1056                                sys.stderr.buffer.write(b\"eline6\\\\r\")\n1057                                sys.stderr.buffer.write(b\"eline7\\\\r\\\\nz\")\n1058                               ''')],\n1059                              stdin=subprocess.PIPE,\n1060                              stderr=subprocess.PIPE,\n1061                              stdout=subprocess.PIPE,\n1062                              universal_newlines=True)\n1063         self.addCleanup(p.stdout.close)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1046,
      "line_range": [
        1046,
        1047,
        1048,
        1049,
        1050,
        1051,
        1052,
        1053,
        1054,
        1055,
        1056,
        1057,
        1058,
        1059,
        1060,
        1061,
        1062
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1086             # zero or one.\n1087             popen = subprocess.Popen(args,\n1088                                      stdin=subprocess.PIPE,\n1089                                      stdout=subprocess.PIPE,\n1090                                      encoding=encoding)\n1091             stdout, stderr = popen.communicate(input='')\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1087,
      "line_range": [
        1087,
        1088,
        1089,
        1090
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1106             # zero or one.\n1107             popen = subprocess.Popen(args,\n1108                                      stdin=subprocess.PIPE,\n1109                                      stdout=subprocess.PIPE,\n1110                                      encoding='utf-8',\n1111                                      errors=errors)\n1112             stdout, stderr = popen.communicate(input='')\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1107,
      "line_range": [
        1107,
        1108,
        1109,
        1110,
        1111
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1140             for i in range(15):\n1141                 p = subprocess.Popen([sys.executable, \"-c\",\n1142                                       \"import sys;\"\n1143                                       \"sys.stdout.write(sys.stdin.read())\"],\n1144                                      stdin=subprocess.PIPE,\n1145                                      stdout=subprocess.PIPE,\n1146                                      stderr=subprocess.PIPE)\n1147                 data = p.communicate(b\"lime\")[0]\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1141,
      "line_range": [
        1141,
        1142,
        1143,
        1144,
        1145,
        1146
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1172     def test_poll(self):\n1173         p = subprocess.Popen([sys.executable, \"-c\",\n1174                               \"import os; os.read(0, 1)\"],\n1175                              stdin=subprocess.PIPE)\n1176         self.addCleanup(p.stdin.close)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1173,
      "line_range": [
        1173,
        1174,
        1175
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1183     def test_wait(self):\n1184         p = subprocess.Popen(ZERO_RETURN_CMD)\n1185         self.assertEqual(p.wait(), 0)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1184,
      "line_range": [
        1184
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1189     def test_wait_timeout(self):\n1190         p = subprocess.Popen([sys.executable,\n1191                               \"-c\", \"import time; time.sleep(0.3)\"])\n1192         with self.assertRaises(subprocess.TimeoutExpired) as c:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1190,
      "line_range": [
        1190,
        1191
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1200         with self.assertRaises(TypeError):\n1201             subprocess.Popen(ZERO_RETURN_CMD, \"orange\")\n1202 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1201,
      "line_range": [
        1201
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1204         # bufsize=None should be the same as bufsize=0.\n1205         p = subprocess.Popen(ZERO_RETURN_CMD, None)\n1206         self.assertEqual(p.wait(), 0)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1205,
      "line_range": [
        1205
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1207         # Again with keyword arg\n1208         p = subprocess.Popen(ZERO_RETURN_CMD, bufsize=None)\n1209         self.assertEqual(p.wait(), 0)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1208,
      "line_range": [
        1208
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1212         # subprocess may deadlock with bufsize=1, see issue #21332\n1213         with subprocess.Popen([sys.executable, \"-c\", \"import sys;\"\n1214                                \"sys.stdout.write(sys.stdin.readline());\"\n1215                                \"sys.stdout.flush()\"],\n1216                               stdin=subprocess.PIPE,\n1217                               stdout=subprocess.PIPE,\n1218                               stderr=subprocess.DEVNULL,\n1219                               bufsize=1,\n1220                               universal_newlines=universal_newlines) as p:\n1221             p.stdin.write(line) # expect that it flushes the line in text mode\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1213,
      "line_range": [
        1213,
        1214,
        1215,
        1216,
        1217,
        1218,
        1219,
        1220
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1253             with self.assertRaises(NONEXISTING_ERRORS):\n1254                 subprocess.Popen(NONEXISTING_CMD,\n1255                                  stdout=subprocess.PIPE,\n1256                                  stderr=subprocess.PIPE)\n1257 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1254,
      "line_range": [
        1254,
        1255,
        1256
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1290         cmd = [sys.executable, \"-c\", code]\n1291         proc = subprocess.Popen(cmd,\n1292                                 stderr=subprocess.PIPE,\n1293                                 universal_newlines=True)\n1294         with proc:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1291,
      "line_range": [
        1291,
        1292,
        1293
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1309             with self.assertRaises(EnvironmentError):\n1310                 subprocess.Popen(NONEXISTING_CMD,\n1311                                  stdin=subprocess.PIPE,\n1312                                  stdout=subprocess.PIPE,\n1313                                  stderr=subprocess.PIPE)\n1314         finally:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1310,
      "line_range": [
        1310,
        1311,
        1312,
        1313
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1329         \"\"\"Issue21291: Popen.wait() needs to be threadsafe for returncode.\"\"\"\n1330         proc = subprocess.Popen([sys.executable, '-c',\n1331                                  'import time; time.sleep(12)'])\n1332         self.assertEqual(proc.returncode, None)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1330,
      "line_range": [
        1330,
        1331
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1387             'assert retcode == 0'))\n1388         output = subprocess.check_output([sys.executable, '-c', code])\n1389         self.assertTrue(output.startswith(b'Hello World!'), ascii(output))\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1388,
      "line_range": [
        1388
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1397         try:\n1398             subprocess.Popen ([\"*\"], stdin=ifhandle, stdout=ofhandle,\n1399               stderr=efhandle)\n1400         except OSError:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 1398,
      "line_range": [
        1398,
        1399
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "1397         try:\n1398             subprocess.Popen ([\"*\"], stdin=ifhandle, stdout=ofhandle,\n1399               stderr=efhandle)\n1400         except OSError:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1398,
      "line_range": [
        1398,
        1399
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1412         # Issue 10963: communicate() should hide EPIPE\n1413         p = subprocess.Popen(ZERO_RETURN_CMD,\n1414                              stdin=subprocess.PIPE,\n1415                              stdout=subprocess.PIPE,\n1416                              stderr=subprocess.PIPE)\n1417         self.addCleanup(p.stdout.close)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1413,
      "line_range": [
        1413,
        1414,
        1415,
        1416
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1428 \n1429         with subprocess.Popen(\n1430                 cmd, stdin=subprocess.PIPE, universal_newlines=True) as proc:\n1431             self.assertIsNone(proc.returncode)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1429,
      "line_range": [
        1429,
        1430
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1447         # Issue 10963: communicate() should hide EPIPE\n1448         p = subprocess.Popen(ZERO_RETURN_CMD,\n1449                              stdin=subprocess.PIPE)\n1450         self.addCleanup(p.stdin.close)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1448,
      "line_range": [
        1448,
        1449
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1471             kw = {stream: subprocess.PIPE}\n1472             with subprocess.Popen(args, **kw) as process:\n1473                 # communicate() will be interrupted by SIGUSR1\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1472,
      "line_range": [
        1472
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1499         with self.assertRaises(FileNotFoundError) as c:\n1500             subprocess.call(['/opt/nonexistent_binary', 'with', 'some', 'args'])\n1501         self.assertEqual(c.exception.filename, '/opt/nonexistent_binary')\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1500,
      "line_range": [
        1500
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1505         with self.assertRaises(FileNotFoundError) as c:\n1506             subprocess.Popen(['exit', '0'], cwd='/some/nonexistent/directory')\n1507         self.assertEqual(c.exception.filename, '/some/nonexistent/directory')\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 1506,
      "line_range": [
        1506
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "1505         with self.assertRaises(FileNotFoundError) as c:\n1506             subprocess.Popen(['exit', '0'], cwd='/some/nonexistent/directory')\n1507         self.assertEqual(c.exception.filename, '/some/nonexistent/directory')\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1506,
      "line_range": [
        1506
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1516         argv = [sys.executable, \"-c\", code]\n1517         return subprocess.run(argv, **kwargs)\n1518 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1517,
      "line_range": [
        1517
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1532         # check_returncode shouldn't raise when returncode is zero\n1533         cp = subprocess.run(ZERO_RETURN_CMD, check=True)\n1534         self.assertEqual(cp.returncode, 0)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1533,
      "line_range": [
        1533
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1615         path = FakePath(path)\n1616         res = subprocess.run(path, stdout=subprocess.DEVNULL)\n1617         self.assertEqual(res.returncode, 0)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1616,
      "line_range": [
        1616
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1618         with self.assertRaises(TypeError):\n1619             subprocess.run(path, stdout=subprocess.DEVNULL, shell=True)\n1620 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 1619,
      "line_range": [
        1619
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "1624         args = [path, '-c', b'import sys; sys.exit(57)']\n1625         res = subprocess.run(args)\n1626         self.assertEqual(res.returncode, 57)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1625,
      "line_range": [
        1625
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1631         args = [path, '-c', 'import sys; sys.exit(57)']\n1632         res = subprocess.run(args)\n1633         self.assertEqual(res.returncode, 57)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1632,
      "line_range": [
        1632
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1675         try:\n1676             subprocess.run('sleep 3', shell=True, timeout=0.1,\n1677                            capture_output=True)  # New session unspecified.\n1678         except subprocess.TimeoutExpired as exc:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 1676,
      "line_range": [
        1676,
        1677
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "1675         try:\n1676             subprocess.run('sleep 3', shell=True, timeout=0.1,\n1677                            capture_output=True)  # New session unspecified.\n1678         except subprocess.TimeoutExpired as exc:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 1676,
      "line_range": [
        1676,
        1677
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "1723         try:\n1724             p = subprocess.Popen([sys.executable, \"-c\", \"\"],\n1725                                  cwd=self._nonexistent_dir)\n1726         except OSError as e:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1724,
      "line_range": [
        1724,
        1725
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1738         try:\n1739             p = subprocess.Popen([sys.executable, \"-c\", \"\"],\n1740                                  executable=self._nonexistent_dir)\n1741         except OSError as e:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1739,
      "line_range": [
        1739,
        1740
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1753         try:\n1754             p = subprocess.Popen([self._nonexistent_dir, \"-c\", \"\"])\n1755         except OSError as e:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1754,
      "line_range": [
        1754
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1817         # Blindly assume that cat exists on systems with /proc/self/status...\n1818         default_proc_status = subprocess.check_output(\n1819                 ['cat', '/proc/self/status'],\n1820                 restore_signals=False)\n1821         for line in default_proc_status.splitlines():\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 1818,
      "line_range": [
        1818,
        1819,
        1820
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "1817         # Blindly assume that cat exists on systems with /proc/self/status...\n1818         default_proc_status = subprocess.check_output(\n1819                 ['cat', '/proc/self/status'],\n1820                 restore_signals=False)\n1821         for line in default_proc_status.splitlines():\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1818,
      "line_range": [
        1818,
        1819,
        1820
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1826             self.skipTest(\"SigIgn not found in /proc/self/status.\")\n1827         restored_proc_status = subprocess.check_output(\n1828                 ['cat', '/proc/self/status'],\n1829                 restore_signals=True)\n1830         for line in restored_proc_status.splitlines():\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 1827,
      "line_range": [
        1827,
        1828,
        1829
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "1826             self.skipTest(\"SigIgn not found in /proc/self/status.\")\n1827         restored_proc_status = subprocess.check_output(\n1828                 ['cat', '/proc/self/status'],\n1829                 restore_signals=True)\n1830         for line in restored_proc_status.splitlines():\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1827,
      "line_range": [
        1827,
        1828,
        1829
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1842         try:\n1843             output = subprocess.check_output(\n1844                     [sys.executable, \"-c\", \"import os; print(os.getsid(0))\"],\n1845                     start_new_session=True)\n1846         except OSError as e:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1843,
      "line_range": [
        1843,
        1844,
        1845
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1876                     try:\n1877                         output = subprocess.check_output(\n1878                                 [sys.executable, \"-c\",\n1879                                  \"import os; print(os.getuid())\"],\n1880                                 user=user,\n1881                                 close_fds=close_fds)\n1882                     except PermissionError:  # (EACCES, EPERM)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1877,
      "line_range": [
        1877,
        1878,
        1879,
        1880,
        1881
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1895         with self.assertRaises(ValueError):\n1896             subprocess.check_call(ZERO_RETURN_CMD, user=-1)\n1897 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1896,
      "line_range": [
        1896
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1898         with self.assertRaises(OverflowError):\n1899             subprocess.check_call(ZERO_RETURN_CMD,\n1900                                   cwd=os.curdir, env=os.environ, user=2**64)\n1901 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1899,
      "line_range": [
        1899,
        1900
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1903             with self.assertRaises(ValueError):\n1904                 subprocess.check_call(ZERO_RETURN_CMD, user=name_uid)\n1905 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1904,
      "line_range": [
        1904
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1908         with self.assertRaises(ValueError):\n1909             subprocess.check_call(ZERO_RETURN_CMD, user=65535)\n1910 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1909,
      "line_range": [
        1909
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1924                     try:\n1925                         output = subprocess.check_output(\n1926                                 [sys.executable, \"-c\",\n1927                                  \"import os; print(os.getgid())\"],\n1928                                 group=group,\n1929                                 close_fds=close_fds)\n1930                     except PermissionError:  # (EACCES, EPERM)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1925,
      "line_range": [
        1925,
        1926,
        1927,
        1928,
        1929
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1942         with self.assertRaises(ValueError):\n1943             subprocess.check_call(ZERO_RETURN_CMD, group=-1)\n1944 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1943,
      "line_range": [
        1943
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1945         with self.assertRaises(OverflowError):\n1946             subprocess.check_call(ZERO_RETURN_CMD,\n1947                                   cwd=os.curdir, env=os.environ, group=2**64)\n1948 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1946,
      "line_range": [
        1946,
        1947
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1950             with self.assertRaises(ValueError):\n1951                 subprocess.check_call(ZERO_RETURN_CMD, group=name_group)\n1952 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1951,
      "line_range": [
        1951
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1955         with self.assertRaises(ValueError):\n1956             subprocess.check_call(ZERO_RETURN_CMD, group=65535)\n1957 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1956,
      "line_range": [
        1956
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1968         try:\n1969             output = subprocess.check_output(\n1970                     [sys.executable, \"-c\",\n1971                      \"import os, sys, json; json.dump(os.getgroups(), sys.stdout)\"],\n1972                     extra_groups=group_list)\n1973         except OSError as ex:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1969,
      "line_range": [
        1969,
        1970,
        1971,
        1972
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1994         with self.assertRaises(ValueError):\n1995             subprocess.check_call(ZERO_RETURN_CMD, extra_groups=[-1])\n1996 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1995,
      "line_range": [
        1995
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1997         with self.assertRaises(ValueError):\n1998             subprocess.check_call(ZERO_RETURN_CMD,\n1999                                   cwd=os.curdir, env=os.environ,\n2000                                   extra_groups=[2**64])\n2001 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1998,
      "line_range": [
        1998,
        1999,
        2000
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2003             with self.assertRaises(ValueError):\n2004                 subprocess.check_call(ZERO_RETURN_CMD,\n2005                                       extra_groups=[name_group])\n2006 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2004,
      "line_range": [
        2004,
        2005
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2009         with self.assertRaises(ValueError):\n2010             subprocess.check_call(ZERO_RETURN_CMD, extra_groups=[])\n2011 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2010,
      "line_range": [
        2010
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2020             # for us to test the child's touched file for.\n2021             subprocess.check_call(\n2022                     [sys.executable, \"-c\", f\"open({name!r}, 'w').close()\"],\n2023                     umask=0o053)\n2024             # Ignore execute permissions entirely in our test,\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2021,
      "line_range": [
        2021,
        2022,
        2023
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2036         with support.SuppressCrashReport():\n2037             p = subprocess.Popen([sys.executable, \"-c\",\n2038                                   'import os; os.abort()'])\n2039             p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2037,
      "line_range": [
        2037,
        2038
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2065         # of a preexec_fn.  This is merely a test.\n2066         p = subprocess.Popen([sys.executable, \"-c\",\n2067                               'import sys,os;'\n2068                               'sys.stdout.write(os.getenv(\"FRUIT\"))'],\n2069                              stdout=subprocess.PIPE,\n2070                              preexec_fn=lambda: os.putenv(\"FRUIT\", \"apple\"))\n2071         with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2066,
      "line_range": [
        2066,
        2067,
        2068,
        2069,
        2070
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2077         try:\n2078             p = subprocess.Popen([sys.executable, \"-c\", \"\"],\n2079                                  preexec_fn=raise_it)\n2080         except subprocess.SubprocessError as e:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2078,
      "line_range": [
        2078,
        2079
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2139             self.assertFalse(gc.isenabled())\n2140             subprocess.call([sys.executable, '-c', ''],\n2141                             preexec_fn=lambda: None)\n2142             self.assertFalse(gc.isenabled(),\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2140,
      "line_range": [
        2140,
        2141
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2146             self.assertTrue(gc.isenabled())\n2147             subprocess.call([sys.executable, '-c', ''],\n2148                             preexec_fn=lambda: None)\n2149             self.assertTrue(gc.isenabled(), \"Popen left gc disabled.\")\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2147,
      "line_range": [
        2147,
        2148
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2179         try:\n2180             subprocess.call([sys.executable, '-c', ''],\n2181                             preexec_fn=lambda: None)\n2182         except BlockingIOError:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2180,
      "line_range": [
        2180,
        2181
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2196         os.chmod(fname, 0o700)\n2197         p = subprocess.Popen(fname)\n2198         p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2197,
      "line_range": [
        2197
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2216         newenv[\"FRUIT\"] = \"apple\"\n2217         p = subprocess.Popen([\"echo $FRUIT\"], shell=1,\n2218                              stdout=subprocess.PIPE,\n2219                              env=newenv)\n2220         with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 2217,
      "line_range": [
        2217,
        2218,
        2219
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "2216         newenv[\"FRUIT\"] = \"apple\"\n2217         p = subprocess.Popen([\"echo $FRUIT\"], shell=1,\n2218                              stdout=subprocess.PIPE,\n2219                              env=newenv)\n2220         with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 2217,
      "line_range": [
        2217,
        2218,
        2219
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "2226         newenv[\"FRUIT\"] = \"apple\"\n2227         p = subprocess.Popen(\"echo $FRUIT\", shell=1,\n2228                              stdout=subprocess.PIPE,\n2229                              env=newenv)\n2230         with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 2227,
      "line_range": [
        2227,
        2228,
        2229
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "2226         newenv[\"FRUIT\"] = \"apple\"\n2227         p = subprocess.Popen(\"echo $FRUIT\", shell=1,\n2228                              stdout=subprocess.PIPE,\n2229                              env=newenv)\n2230         with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 2227,
      "line_range": [
        2227,
        2228,
        2229
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "2241         os.chmod(fname, 0o700)\n2242         rc = subprocess.call(fname)\n2243         os.remove(fname)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2242,
      "line_range": [
        2242
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2260         for sh in shells:\n2261             p = subprocess.Popen(\"echo $0\", executable=sh, shell=True,\n2262                                  stdout=subprocess.PIPE)\n2263             with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 2261,
      "line_range": [
        2261,
        2262
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "2260         for sh in shells:\n2261             p = subprocess.Popen(\"echo $0\", executable=sh, shell=True,\n2262                                  stdout=subprocess.PIPE)\n2263             with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 2261,
      "line_range": [
        2261,
        2262
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "2272         try:\n2273             p = subprocess.Popen([sys.executable, \"-c\", \"\"\"if 1:\n2274                                  import sys, time\n2275                                  sys.stdout.write('x\\\\n')\n2276                                  sys.stdout.flush()\n2277                                  time.sleep(30)\n2278                                  \"\"\"],\n2279                                  close_fds=True,\n2280                                  stdin=subprocess.PIPE,\n2281                                  stdout=subprocess.PIPE,\n2282                                  stderr=subprocess.PIPE)\n2283         finally:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2273,
      "line_range": [
        2273,
        2274,
        2275,
        2276,
        2277,
        2278,
        2279,
        2280,
        2281,
        2282
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2295         # It should fix failures on some platforms.\n2296         p = subprocess.Popen([sys.executable, \"-c\", \"\"\"if 1:\n2297                              import sys, time\n2298                              sys.stdout.write('x\\\\n')\n2299                              sys.stdout.flush()\n2300                              \"\"\"],\n2301                              close_fds=True,\n2302                              stdin=subprocess.PIPE,\n2303                              stdout=subprocess.PIPE,\n2304                              stderr=subprocess.PIPE)\n2305         # Wait for the interpreter to be completely initialized before\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2296,
      "line_range": [
        2296,
        2297,
        2298,
        2299,
        2300,
        2301,
        2302,
        2303,
        2304
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2368                 os.close(fd)\n2369             out, err = subprocess.Popen([sys.executable, \"-c\",\n2370                               'import sys;'\n2371                               'sys.stdout.write(\"apple\");'\n2372                               'sys.stdout.flush();'\n2373                               'sys.stderr.write(\"orange\")'],\n2374                        stdin=stdin,\n2375                        stdout=subprocess.PIPE,\n2376                        stderr=subprocess.PIPE).communicate()\n2377             self.assertEqual(out, b'apple')\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2369,
      "line_range": [
        2369,
        2370,
        2371,
        2372,
        2373,
        2374,
        2375,
        2376
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2415             # failed.  Extremely unlikely: everyone supports CLOEXEC.\n2416             subprocess.Popen([\n2417                     sys.executable, \"-c\",\n2418                     \"print('AssertionError:0:CLOEXEC failure.')\"]).wait()\n2419         finally:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2416,
      "line_range": [
        2416,
        2417,
        2418
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2448                 # has to rearrange them in the child\n2449                 p = subprocess.Popen([sys.executable, \"-c\",\n2450                     'import sys; got = sys.stdin.read();'\n2451                     'sys.stdout.write(\"got %s\"%got); sys.stderr.write(\"err\")'],\n2452                     stdin=temp_fds[1],\n2453                     stdout=temp_fds[2],\n2454                     stderr=temp_fds[0])\n2455                 p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2449,
      "line_range": [
        2449,
        2450,
        2451,
        2452,
        2453,
        2454
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2492                 # has to rearrange them in the child\n2493                 p = subprocess.Popen([sys.executable, \"-c\",\n2494                     'import sys; got = sys.stdin.read();'\n2495                     'sys.stdout.write(\"got %s\"%got); sys.stderr.write(\"err\")'],\n2496                     stdin=stdin_no,\n2497                     stdout=stdout_no,\n2498                     stderr=stderr_no)\n2499                 p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2493,
      "line_range": [
        2493,
        2494,
        2495,
        2496,
        2497,
        2498
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2551 \n2552             rc = subprocess.call([sys.executable, '-c', code, str(skipped_fd)],\n2553                                  **kwargs)\n2554             self.assertEqual(rc, 0)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2552,
      "line_range": [
        2552,
        2553
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2580         try:\n2581             subprocess.call(\n2582                 ZERO_RETURN_CMD,\n2583                 preexec_fn=prepare)\n2584         except ValueError as err:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2581,
      "line_range": [
        2581,
        2582,
        2583
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2606             decoded_value = value\n2607             stdout = subprocess.check_output(\n2608                 [sys.executable, \"-c\", script],\n2609                 env=env)\n2610             stdout = stdout.rstrip(b'\\n\\r')\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2607,
      "line_range": [
        2607,
        2608,
        2609
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2617             env[key] = encoded_value\n2618             stdout = subprocess.check_output(\n2619                 [sys.executable, \"-c\", script],\n2620                 env=env)\n2621             stdout = stdout.rstrip(b'\\n\\r')\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2618,
      "line_range": [
        2618,
        2619,
        2620
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2630         # absolute bytes path\n2631         exitcode = subprocess.call([abs_program]+args)\n2632         self.assertEqual(exitcode, 0)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2631,
      "line_range": [
        2631
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2635         cmd = b\"'%s' %s\" % (abs_program, \" \".join(args).encode(\"utf-8\"))\n2636         exitcode = subprocess.call(cmd, shell=True)\n2637         self.assertEqual(exitcode, 0)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 2636,
      "line_range": [
        2636
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "2641         env[\"PATH\"] = path\n2642         exitcode = subprocess.call([program]+args, env=env)\n2643         self.assertEqual(exitcode, 0)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2642,
      "line_range": [
        2642
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2647         envb[b\"PATH\"] = os.fsencode(path)\n2648         exitcode = subprocess.call([program]+args, env=envb)\n2649         self.assertEqual(exitcode, 0)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2648,
      "line_range": [
        2648
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2654 \n2655         p1 = subprocess.Popen([sys.executable, sleeper],\n2656                               stdin=subprocess.PIPE, stdout=subprocess.PIPE,\n2657                               stderr=subprocess.PIPE, close_fds=False)\n2658 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2655,
      "line_range": [
        2655,
        2656,
        2657
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2660 \n2661         p2 = subprocess.Popen([sys.executable, fd_status],\n2662                               stdout=subprocess.PIPE, close_fds=False)\n2663 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2661,
      "line_range": [
        2661,
        2662
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2680 \n2681         p1 = subprocess.Popen([sys.executable, qcat],\n2682                               stdin=subprocess.PIPE, stdout=subprocess.PIPE,\n2683                               close_fds=False)\n2684 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2681,
      "line_range": [
        2681,
        2682,
        2683
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2684 \n2685         p2 = subprocess.Popen([sys.executable, qgrep, subdata],\n2686                               stdin=p1.stdout, stdout=subprocess.PIPE,\n2687                               close_fds=False)\n2688 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2685,
      "line_range": [
        2685,
        2686,
        2687
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2731 \n2732         p = subprocess.Popen([sys.executable, fd_status],\n2733                              stdout=subprocess.PIPE, close_fds=False)\n2734         output, ignored = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2732,
      "line_range": [
        2732,
        2733
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2739 \n2740         p = subprocess.Popen([sys.executable, fd_status],\n2741                              stdout=subprocess.PIPE, close_fds=True)\n2742         output, ignored = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2740,
      "line_range": [
        2740,
        2741
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2751         fds_to_keep = set(open_fds.pop() for _ in range(8))\n2752         p = subprocess.Popen([sys.executable, fd_status],\n2753                              stdout=subprocess.PIPE, close_fds=True,\n2754                              pass_fds=fds_to_keep)\n2755         output, ignored = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2752,
      "line_range": [
        2752,
        2753,
        2754
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2780         #      any of the fds above the lowered rlimit are still open.\n2781         p = subprocess.Popen([sys.executable, '-c', textwrap.dedent(\n2782         '''\n2783         import os, resource, subprocess, sys, textwrap\n2784         open_fds = set()\n2785         # Add a bunch more fds to pass down.\n2786         for _ in range(40):\n2787             fd = os.open(os.devnull, os.O_RDONLY)\n2788             open_fds.add(fd)\n2789 \n2790         # Leave a two pairs of low ones available for use by the\n2791         # internal child error pipe and the stdout pipe.\n2792         # We also leave 10 more open as some Python buildbots run into\n2793         # \"too many open files\" errors during the test if we do not.\n2794         for fd in sorted(open_fds)[:14]:\n2795             os.close(fd)\n2796             open_fds.remove(fd)\n2797 \n2798         for fd in open_fds:\n2799             #self.addCleanup(os.close, fd)\n2800             os.set_inheritable(fd, True)\n2801 \n2802         max_fd_open = max(open_fds)\n2803 \n2804         # Communicate the open_fds to the parent unittest.TestCase process.\n2805         print(','.join(map(str, sorted(open_fds))))\n2806         sys.stdout.flush()\n2807 \n2808         rlim_cur, rlim_max = resource.getrlimit(resource.RLIMIT_NOFILE)\n2809         try:\n2810             # 29 is lower than the highest fds we are leaving open.\n2811             resource.setrlimit(resource.RLIMIT_NOFILE, (29, rlim_max))\n2812             # Launch a new Python interpreter with our low fd rlim_cur that\n2813             # inherits open fds above that limit.  It then uses subprocess\n2814             # with close_fds=True to get a report of open fds in the child.\n2815             # An explicit list of fds to check is passed to fd_status.py as\n2816             # letting fd_status rely on its default logic would miss the\n2817             # fds above rlim_cur as it normally only checks up to that limit.\n2818             subprocess.Popen(\n2819                 [sys.executable, '-c',\n2820                  textwrap.dedent(\"\"\"\n2821                      import subprocess, sys\n2822                      subprocess.Popen([sys.executable, %r] +\n2823                                       [str(x) for x in range({max_fd})],\n2824                                       close_fds=True).wait()\n2825                      \"\"\".format(max_fd=max_fd_open+1))],\n2826                 close_fds=False).wait()\n2827         finally:\n2828             resource.setrlimit(resource.RLIMIT_NOFILE, (rlim_cur, rlim_max))\n2829         ''' % fd_status)], stdout=subprocess.PIPE)\n2830 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2781,
      "line_range": [
        2781,
        2782,
        2783,
        2784,
        2785,
        2786,
        2787,
        2788,
        2789,
        2790,
        2791,
        2792,
        2793,
        2794,
        2795,
        2796,
        2797,
        2798,
        2799,
        2800,
        2801,
        2802,
        2803,
        2804,
        2805,
        2806,
        2807,
        2808,
        2809,
        2810,
        2811,
        2812,
        2813,
        2814,
        2815,
        2816,
        2817,
        2818,
        2819,
        2820,
        2821,
        2822,
        2823,
        2824,
        2825,
        2826,
        2827,
        2828,
        2829
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2860         for fd in open_fds:\n2861             p = subprocess.Popen([sys.executable, fd_status],\n2862                                  stdout=subprocess.PIPE, close_fds=True,\n2863                                  pass_fds=(fd, ))\n2864             output, ignored = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2861,
      "line_range": [
        2861,
        2862,
        2863
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2874             with self.assertWarns(RuntimeWarning) as context:\n2875                 self.assertFalse(subprocess.call(\n2876                         ZERO_RETURN_CMD,\n2877                         close_fds=False, pass_fds=(fd, )))\n2878             self.assertIn('overriding close_fds', str(context.warning))\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2875,
      "line_range": [
        2875,
        2876,
        2877
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2891 \n2892         p = subprocess.Popen(args,\n2893                              stdout=subprocess.PIPE, close_fds=True,\n2894                              pass_fds=pass_fds)\n2895         output, ignored = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2892,
      "line_range": [
        2892,
        2893,
        2894
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2923 \n2924         with subprocess.Popen([sys.executable, fd_status],\n2925                               stdin=pass_fds[0],\n2926                               stdout=pass_fds[1],\n2927                               stderr=pass_fds[2],\n2928                               close_fds=True,\n2929                               pass_fds=pass_fds):\n2930             output = os.read(stdout_r, 1024)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2924,
      "line_range": [
        2924,
        2925,
        2926,
        2927,
        2928,
        2929
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2937         with io.open(os.devnull, \"r+\") as inout:\n2938             p = subprocess.Popen(ZERO_RETURN_CMD,\n2939                                  stdout=inout, stdin=inout)\n2940             p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2938,
      "line_range": [
        2938,
        2939
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2943         with io.open(os.devnull, \"r+\") as inout:\n2944             p = subprocess.Popen(ZERO_RETURN_CMD,\n2945                                  stdout=inout, stderr=inout)\n2946             p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2944,
      "line_range": [
        2944,
        2945
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2949         with io.open(os.devnull, \"r+\") as inout:\n2950             p = subprocess.Popen(ZERO_RETURN_CMD,\n2951                                  stderr=inout, stdin=inout)\n2952             p.wait()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2950,
      "line_range": [
        2950,
        2951
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2957                                            subdir=\"subprocessdata\")\n2958         p = subprocess.Popen([sys.executable, sigchild_ignore],\n2959                              stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n2960         stdout, stderr = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2958,
      "line_range": [
        2958,
        2959
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2968         select = import_helper.import_module(\"select\")\n2969         p = subprocess.Popen([sys.executable, \"-c\",\n2970                               'import sys;'\n2971                               'sys.stdout.write(\"apple\")'],\n2972                              stdout=subprocess.PIPE,\n2973                              bufsize=0)\n2974         f = p.stdout\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2969,
      "line_range": [
        2969,
        2970,
        2971,
        2972,
        2973
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2986         # spawn a Popen, and delete its reference before it exits\n2987         p = subprocess.Popen([sys.executable, \"-c\",\n2988                               'import sys, time;'\n2989                               'time.sleep(0.2)'],\n2990                              stdout=subprocess.PIPE,\n2991                              stderr=subprocess.PIPE)\n2992         self.addCleanup(p.stdout.close)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2987,
      "line_range": [
        2987,
        2988,
        2989,
        2990,
        2991
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3011         # spawn a Popen, delete its reference and kill it\n3012         p = subprocess.Popen([sys.executable, \"-c\",\n3013                               'import time;'\n3014                               'time.sleep(3)'],\n3015                              stdout=subprocess.PIPE,\n3016                              stderr=subprocess.PIPE)\n3017         self.addCleanup(p.stdout.close)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3012,
      "line_range": [
        3012,
        3013,
        3014,
        3015,
        3016
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3035         with self.assertRaises(OSError):\n3036             with subprocess.Popen(NONEXISTING_CMD,\n3037                                   stdout=subprocess.PIPE,\n3038                                   stderr=subprocess.PIPE) as proc:\n3039                 pass\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3036,
      "line_range": [
        3036,
        3037,
        3038
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3055 \n3056         p = subprocess.Popen([sys.executable, fd_status],\n3057                              stdout=subprocess.PIPE, close_fds=True,\n3058                              preexec_fn=lambda: os.dup2(1, fd))\n3059         output, ignored = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3056,
      "line_range": [
        3056,
        3057,
        3058
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3149         # that just calls _stdin_write() internally due to our mock.\n3150         proc = subprocess.Popen(ZERO_RETURN_CMD)\n3151         with proc, mock.patch.object(proc, 'stdin') as mock_proc_stdin:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3150,
      "line_range": [
        3150
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3158         # that just calls _stdin_write() internally due to our mock.\n3159         proc = subprocess.Popen(ZERO_RETURN_CMD)\n3160         with proc, mock.patch.object(proc, 'stdin') as mock_proc_stdin:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3159,
      "line_range": [
        3159
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3168         # python -h exits faster than python -c pass (but spams stdout).\n3169         proc = subprocess.Popen([sys.executable, '-h'],\n3170                                 stdin=subprocess.PIPE,\n3171                                 stdout=subprocess.PIPE)\n3172         with proc, mock.patch.object(proc, 'stdin') as mock_proc_stdin, \\\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3169,
      "line_range": [
        3169,
        3170,
        3171
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3183         # python -h exits faster than python -c pass (but spams stdout).\n3184         proc = subprocess.Popen([sys.executable, '-h'],\n3185                                 stdin=subprocess.PIPE,\n3186                                 stdout=subprocess.PIPE)\n3187         with proc, mock.patch.object(proc, 'stdin') as mock_proc_stdin:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3184,
      "line_range": [
        3184,
        3185,
        3186
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3198         args = ZERO_RETURN_CMD\n3199         proc = subprocess.Popen(args)\n3200 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3199,
      "line_range": [
        3199
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3212         # the risk of sending the signal to the wrong process.\n3213         proc = subprocess.Popen(ZERO_RETURN_CMD)\n3214 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3213,
      "line_range": [
        3213
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3232     def test_communicate_repeated_call_after_stdout_close(self):\n3233         proc = subprocess.Popen([sys.executable, '-c',\n3234                                  'import os, time; os.close(1), time.sleep(2)'],\n3235                                 stdout=subprocess.PIPE)\n3236         while True:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3233,
      "line_range": [
        3233,
        3234,
        3235
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3258         # ignored\n3259         subprocess.call(ZERO_RETURN_CMD,\n3260                         startupinfo=startupinfo)\n3261 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3259,
      "line_range": [
        3259,
        3260
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3274         # ignored\n3275         subprocess.call(ZERO_RETURN_CMD,\n3276                         startupinfo=startupinfo)\n3277 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3275,
      "line_range": [
        3275,
        3276
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3288             with open(os.devnull, 'w') as null:\n3289                 proc = subprocess.Popen(cmd,\n3290                                         stdout=null,\n3291                                         stderr=subprocess.STDOUT,\n3292                                         startupinfo=startupinfo)\n3293                 with proc:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3289,
      "line_range": [
        3289,
        3290,
        3291,
        3292
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3308         sys.stderr.write(\"    a DOS box should flash briefly ...\\n\")\n3309         subprocess.call(sys.executable +\n3310                         ' -c \"import time; time.sleep(0.25)\"',\n3311                         creationflags=CREATE_NEW_CONSOLE)\n3312 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3309,
      "line_range": [
        3309,
        3310,
        3311
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3326         with self.assertRaises(TypeError):\n3327             subprocess.Popen(ZERO_RETURN_CMD, env=BadEnv())\n3328 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3327,
      "line_range": [
        3327
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3330         # close file descriptors\n3331         rc = subprocess.call([sys.executable, \"-c\",\n3332                               \"import sys; sys.exit(47)\"],\n3333                               close_fds=True)\n3334         self.assertEqual(rc, 47)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3331,
      "line_range": [
        3331,
        3332,
        3333
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3347 \n3348         p = subprocess.Popen([sys.executable, \"-c\",\n3349                               \"import msvcrt; print(msvcrt.open_osfhandle({}, 0))\".format(handles[0])],\n3350                              stdout=subprocess.PIPE, close_fds=False)\n3351         stdout, stderr = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3348,
      "line_range": [
        3348,
        3349,
        3350
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3354 \n3355         p = subprocess.Popen([sys.executable, \"-c\",\n3356                               \"import msvcrt; print(msvcrt.open_osfhandle({}, 0))\".format(handles[0])],\n3357                              stdout=subprocess.PIPE, stderr=subprocess.PIPE, close_fds=True)\n3358         stdout, stderr = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3355,
      "line_range": [
        3355,
        3356,
        3357
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3365         startupinfo.lpAttributeList = {\"handle_list\": handle_list}\n3366         p = subprocess.Popen([sys.executable, \"-c\",\n3367                               \"import msvcrt; print(msvcrt.open_osfhandle({}, 0))\".format(handles[0])],\n3368                              stdout=subprocess.PIPE, stderr=subprocess.PIPE,\n3369                              startupinfo=startupinfo, close_fds=True)\n3370         stdout, stderr = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3366,
      "line_range": [
        3366,
        3367,
        3368,
        3369
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3378             startupinfo.lpAttributeList = {\"handle_list\": handles[:]}\n3379             p = subprocess.Popen([sys.executable, \"-c\",\n3380                                   \"import msvcrt; print(msvcrt.open_osfhandle({}, 0))\".format(handles[0])],\n3381                                  stdout=subprocess.PIPE, stderr=subprocess.PIPE,\n3382                                  startupinfo=startupinfo, close_fds=False)\n3383             stdout, stderr = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3379,
      "line_range": [
        3379,
        3380,
        3381,
        3382
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3388         startupinfo.lpAttributeList = {}\n3389         subprocess.call(ZERO_RETURN_CMD,\n3390                         startupinfo=startupinfo)\n3391 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3389,
      "line_range": [
        3389,
        3390
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3394         startupinfo.lpAttributeList = {\"handle_list\": []}\n3395         subprocess.call(ZERO_RETURN_CMD,\n3396                         startupinfo=startupinfo)\n3397 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3395,
      "line_range": [
        3395,
        3396
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3401         newenv[\"FRUIT\"] = \"physalis\"\n3402         p = subprocess.Popen([\"set\"], shell=1,\n3403                              stdout=subprocess.PIPE,\n3404                              env=newenv)\n3405         with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 3402,
      "line_range": [
        3402,
        3403,
        3404
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "3401         newenv[\"FRUIT\"] = \"physalis\"\n3402         p = subprocess.Popen([\"set\"], shell=1,\n3403                              stdout=subprocess.PIPE,\n3404                              env=newenv)\n3405         with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 3402,
      "line_range": [
        3402,
        3403,
        3404
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "3411         newenv[\"FRUIT\"] = \"physalis\"\n3412         p = subprocess.Popen(\"set\", shell=1,\n3413                              stdout=subprocess.PIPE,\n3414                              env=newenv)\n3415         with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 3412,
      "line_range": [
        3412,
        3413,
        3414
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "3411         newenv[\"FRUIT\"] = \"physalis\"\n3412         p = subprocess.Popen(\"set\", shell=1,\n3413                              stdout=subprocess.PIPE,\n3414                              env=newenv)\n3415         with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 3412,
      "line_range": [
        3412,
        3413,
        3414
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "3422             newenv[\"FRUIT\"] = \"physalis\"\n3423             p = subprocess.Popen(\"set\", shell=1,\n3424                                  stdout=subprocess.PIPE,\n3425                                  env=newenv,\n3426                                  encoding=enc)\n3427             with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 3423,
      "line_range": [
        3423,
        3424,
        3425,
        3426
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "3422             newenv[\"FRUIT\"] = \"physalis\"\n3423             p = subprocess.Popen(\"set\", shell=1,\n3424                                  stdout=subprocess.PIPE,\n3425                                  env=newenv,\n3426                                  encoding=enc)\n3427             with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 3423,
      "line_range": [
        3423,
        3424,
        3425,
        3426
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "3431         # call() function with string argument on Windows\n3432         rc = subprocess.call(sys.executable +\n3433                              ' -c \"import sys; sys.exit(47)\"')\n3434         self.assertEqual(rc, 47)\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3432,
      "line_range": [
        3432,
        3433
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3437         # Some win32 buildbot raises EOFError if stdin is inherited\n3438         p = subprocess.Popen([sys.executable, \"-c\", \"\"\"if 1:\n3439                              import sys, time\n3440                              sys.stdout.write('x\\\\n')\n3441                              sys.stdout.flush()\n3442                              time.sleep(30)\n3443                              \"\"\"],\n3444                              stdin=subprocess.PIPE,\n3445                              stdout=subprocess.PIPE,\n3446                              stderr=subprocess.PIPE)\n3447         with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3438,
      "line_range": [
        3438,
        3439,
        3440,
        3441,
        3442,
        3443,
        3444,
        3445,
        3446
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3457     def _kill_dead_process(self, method, *args):\n3458         p = subprocess.Popen([sys.executable, \"-c\", \"\"\"if 1:\n3459                              import sys, time\n3460                              sys.stdout.write('x\\\\n')\n3461                              sys.stdout.flush()\n3462                              sys.exit(42)\n3463                              \"\"\"],\n3464                              stdin=subprocess.PIPE,\n3465                              stdout=subprocess.PIPE,\n3466                              stderr=subprocess.PIPE)\n3467         with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3458,
      "line_range": [
        3458,
        3459,
        3460,
        3461,
        3462,
        3463,
        3464,
        3465,
        3466
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3559         def popen_via_context_manager(*args, **kwargs):\n3560             with subprocess.Popen(*args, **kwargs) as unused_process:\n3561                 raise KeyboardInterrupt  # Test how __exit__ handles ^C.\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3560,
      "line_range": [
        3560
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3628         kwargs['stdout'] = subprocess.PIPE\n3629         p = subprocess.Popen(*args, **kwargs)\n3630         with p:\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3629,
      "line_range": [
        3629
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3638         self.with_spaces('\"%s\" \"%s\" \"%s\"' % (sys.executable, self.fname,\n3639                                              \"ab cd\"), shell=1)\n3640 \n3641     def test_shell_sequence_with_spaces(self):\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with shell=True parameter identified, possible security issue.",
      "line_number": 3639,
      "line_range": [
        3638,
        3639
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b604_any_other_function_with_shell_equals_true.html",
      "test_id": "B604",
      "test_name": "any_other_function_with_shell_equals_true"
    },
    {
      "code": "3642         # call() function with sequence argument with spaces on Windows\n3643         self.with_spaces([sys.executable, self.fname, \"ab cd\"], shell=1)\n3644 \n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with shell=True parameter identified, possible security issue.",
      "line_number": 3643,
      "line_range": [
        3643
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b604_any_other_function_with_shell_equals_true.html",
      "test_id": "B604",
      "test_name": "any_other_function_with_shell_equals_true"
    },
    {
      "code": "3657     def test_pipe(self):\n3658         with subprocess.Popen([sys.executable, \"-c\",\n3659                                \"import sys;\"\n3660                                \"sys.stdout.write('stdout');\"\n3661                                \"sys.stderr.write('stderr');\"],\n3662                               stdout=subprocess.PIPE,\n3663                               stderr=subprocess.PIPE) as proc:\n3664             self.assertEqual(proc.stdout.read(), b\"stdout\")\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3658,
      "line_range": [
        3658,
        3659,
        3660,
        3661,
        3662,
        3663
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3670     def test_returncode(self):\n3671         with subprocess.Popen([sys.executable, \"-c\",\n3672                                \"import sys; sys.exit(100)\"]) as proc:\n3673             pass\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3671,
      "line_range": [
        3671,
        3672
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3677     def test_communicate_stdin(self):\n3678         with subprocess.Popen([sys.executable, \"-c\",\n3679                               \"import sys;\"\n3680                               \"sys.exit(sys.stdin.read() == 'context')\"],\n3681                              stdin=subprocess.PIPE) as proc:\n3682             proc.communicate(b\"context\")\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3678,
      "line_range": [
        3678,
        3679,
        3680,
        3681
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3686         with self.assertRaises(NONEXISTING_ERRORS):\n3687             with subprocess.Popen(NONEXISTING_CMD,\n3688                                   stdout=subprocess.PIPE,\n3689                                   stderr=subprocess.PIPE) as proc:\n3690                 pass\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3687,
      "line_range": [
        3687,
        3688,
        3689
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3693         \"\"\"Broken pipe error should not prevent wait() (Issue 21619)\"\"\"\n3694         proc = subprocess.Popen(ZERO_RETURN_CMD,\n3695                                 stdin=subprocess.PIPE,\n3696                                 bufsize=support.PIPE_MAX_SIZE*2)\n3697         proc = proc.__enter__()\n",
      "filename": "cpython\\Lib\\test\\test_subprocess.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3694,
      "line_range": [
        3694,
        3695,
        3696
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "101         with self.assertRaises(NameError) as e:\n102             exec(\"\"\"class X:\n103                 __class__\n104                 def f():\n105                     __class__\"\"\", globals(), {})\n106         self.assertIs(type(e.exception), NameError) # Not UnboundLocalError\n",
      "filename": "cpython\\Lib\\test\\test_super.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 102,
      "line_range": [
        102,
        103,
        104,
        105
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "7 import stat\n8 import subprocess\n9 import sys\n",
      "filename": "cpython\\Lib\\test\\test_support.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "319             # call test code that consumes from sys.stdin\n320             captured = input()\n321         self.assertEqual(captured, \"hello\")\n",
      "filename": "cpython\\Lib\\test\\test_support.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 320,
      "line_range": [
        320
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "467                if not key.startswith('PYTHON')}\n468         proc = subprocess.run(cmd,\n469                               stdout=subprocess.PIPE,\n470                               stderr=subprocess.DEVNULL,\n471                               universal_newlines=True,\n472                               env=env)\n473         if expected is None:\n",
      "filename": "cpython\\Lib\\test\\test_support.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 468,
      "line_range": [
        468,
        469,
        470,
        471,
        472
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "7 import struct\n8 import subprocess\n9 import sys\n",
      "filename": "cpython\\Lib\\test\\test_sys.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "291             for i in (50, 1000):\n292                 sub = subprocess.Popen([sys.executable, '-c', code % i],\n293                     stderr=subprocess.PIPE)\n294                 err = sub.communicate()[1]\n",
      "filename": "cpython\\Lib\\test\\test_sys.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 292,
      "line_range": [
        292,
        293
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "599         env[\"PYTHONIOENCODING\"] = \"cp424\"\n600         p = subprocess.Popen([sys.executable, \"-c\", 'print(chr(0xa2))'],\n601                              stdout = subprocess.PIPE, env=env)\n602         out = p.communicate()[0].strip()\n",
      "filename": "cpython\\Lib\\test\\test_sys.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 600,
      "line_range": [
        600,
        601
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "606         env[\"PYTHONIOENCODING\"] = \"ascii:replace\"\n607         p = subprocess.Popen([sys.executable, \"-c\", 'print(chr(0xa2))'],\n608                              stdout = subprocess.PIPE, env=env)\n609         out = p.communicate()[0].strip()\n",
      "filename": "cpython\\Lib\\test\\test_sys.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 607,
      "line_range": [
        607,
        608
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "612         env[\"PYTHONIOENCODING\"] = \"ascii\"\n613         p = subprocess.Popen([sys.executable, \"-c\", 'print(chr(0xa2))'],\n614                              stdout=subprocess.PIPE, stderr=subprocess.PIPE,\n615                              env=env)\n616         out, err = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_sys.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 613,
      "line_range": [
        613,
        614,
        615
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "621         env[\"PYTHONIOENCODING\"] = \"ascii:\"\n622         p = subprocess.Popen([sys.executable, \"-c\", 'print(chr(0xa2))'],\n623                              stdout=subprocess.PIPE, stderr=subprocess.PIPE,\n624                              env=env)\n625         out, err = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_sys.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 622,
      "line_range": [
        622,
        623,
        624
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "630         env[\"PYTHONIOENCODING\"] = \":surrogateescape\"\n631         p = subprocess.Popen([sys.executable, \"-c\", 'print(chr(0xdcbd))'],\n632                              stdout=subprocess.PIPE, env=env)\n633         out = p.communicate()[0].strip()\n",
      "filename": "cpython\\Lib\\test\\test_sys.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 631,
      "line_range": [
        631,
        632
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "643         env[\"PYTHONIOENCODING\"] = \"\"\n644         p = subprocess.Popen([sys.executable, \"-c\",\n645                                 'print(%a)' % os_helper.FS_NONASCII],\n646                                 stdout=subprocess.PIPE, env=env)\n647         out = p.communicate()[0].strip()\n",
      "filename": "cpython\\Lib\\test\\test_sys.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 644,
      "line_range": [
        644,
        645,
        646
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "662         python_dir = os.path.dirname(os.path.realpath(sys.executable))\n663         p = subprocess.Popen(\n664             [\"nonexistent\", \"-c\",\n665              'import sys; print(sys.executable.encode(\"ascii\", \"backslashreplace\"))'],\n666             executable=sys.executable, stdout=subprocess.PIPE, cwd=python_dir)\n667         stdout = p.communicate()[0]\n",
      "filename": "cpython\\Lib\\test\\test_sys.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 663,
      "line_range": [
        663,
        664,
        665,
        666
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "662         python_dir = os.path.dirname(os.path.realpath(sys.executable))\n663         p = subprocess.Popen(\n664             [\"nonexistent\", \"-c\",\n665              'import sys; print(sys.executable.encode(\"ascii\", \"backslashreplace\"))'],\n666             executable=sys.executable, stdout=subprocess.PIPE, cwd=python_dir)\n667         stdout = p.communicate()[0]\n",
      "filename": "cpython\\Lib\\test\\test_sys.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 663,
      "line_range": [
        663,
        664,
        665,
        666
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "706             env.pop('PYTHONIOENCODING', None)\n707         p = subprocess.Popen(args,\n708                               stdout=subprocess.PIPE,\n709                               stderr=subprocess.STDOUT,\n710                               env=env,\n711                               universal_newlines=True)\n712         stdout, stderr = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_sys.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 707,
      "line_range": [
        707,
        708,
        709,
        710,
        711
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "903         def check(tracebacklimit, expected):\n904             p = subprocess.Popen([sys.executable, '-c', code % tracebacklimit],\n905                                  stderr=subprocess.PIPE)\n906             out = p.communicate()[1]\n",
      "filename": "cpython\\Lib\\test\\test_sys.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 904,
      "line_range": [
        904,
        905
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "945         args = [sys.executable, '-I', '-X', 'utf8', '-c', code, 'arg']\n946         proc = subprocess.run(args, check=True, capture_output=True, text=True)\n947         expected = [\n",
      "filename": "cpython\\Lib\\test\\test_sys.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 946,
      "line_range": [
        946
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "121             try: 1/0\n122             except: pass\n123         f_ident = ident(f)\n",
      "filename": "cpython\\Lib\\test\\test_sys_setprofile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 122,
      "line_range": [
        122
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "130             try: 1/0\n131             except: pass\n132         f_ident = ident(f)\n",
      "filename": "cpython\\Lib\\test\\test_sys_setprofile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 131,
      "line_range": [
        131
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "155                 try: f(p)\n156                 except: pass\n157         f_ident = ident(f)\n",
      "filename": "cpython\\Lib\\test\\test_sys_setprofile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 156,
      "line_range": [
        156
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "302             try: 1/0\n303             except: pass\n304         f_ident = ident(f)\n",
      "filename": "cpython\\Lib\\test\\test_sys_setprofile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 303,
      "line_range": [
        303
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "390     try: f(p)\n391     except: pass\n392 \n",
      "filename": "cpython\\Lib\\test\\test_sys_setprofile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 391,
      "line_range": [
        391
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "163         raises()\n164     except Exception:\n165         pass\n",
      "filename": "cpython\\Lib\\test\\test_sys_settrace.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 164,
      "line_range": [
        164
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "367         sys.settrace(None)\n368         assert sys.gettrace() is None\n369 \n",
      "filename": "cpython\\Lib\\test\\test_sys_settrace.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 368,
      "line_range": [
        368
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "375         try:\n376             assert sys.gettrace() is fn\n377         finally:\n",
      "filename": "cpython\\Lib\\test\\test_sys_settrace.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 376,
      "line_range": [
        376
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "467         namespace = {}\n468         exec(\"def f():\\n\" + \"\\n\" * 256 + \"    pass\", namespace)\n469         self.run_and_compare(\n",
      "filename": "cpython\\Lib\\test\\test_sys_settrace.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 468,
      "line_range": [
        468
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "492                     y = \"Something\"\n493             except Exception:\n494                 pass\n",
      "filename": "cpython\\Lib\\test\\test_sys_settrace.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 493,
      "line_range": [
        493
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "599             run(tracer.trace)\n600         except Exception:\n601             pass\n",
      "filename": "cpython\\Lib\\test\\test_sys_settrace.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 600,
      "line_range": [
        600
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1518         d = {}\n1519         exec(\"\"\"def f(output):        # line 0\n1520             x = 0                     # line 1\n1521             y = 1                     # line 2\n1522             '''                       # line 3\n1523             %s                        # lines 4-1004\n1524             '''                       # line 1005\n1525             x += 1                    # line 1006\n1526             output.append(x)          # line 1007\n1527             return\"\"\" % ('\\n' * 1000,), d)\n1528         f = d['f']\n",
      "filename": "cpython\\Lib\\test\\test_sys_settrace.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 1519,
      "line_range": [
        1519,
        1520,
        1521,
        1522,
        1523,
        1524,
        1525,
        1526,
        1527
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1545         namespace = {\"output\": []}\n1546         exec(code, namespace)\n1547         sys.settrace(None)\n",
      "filename": "cpython\\Lib\\test\\test_sys_settrace.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 1546,
      "line_range": [
        1546
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "3 import os\n4 import subprocess\n5 import shutil\n",
      "filename": "cpython\\Lib\\test\\test_sysconfig.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "287 \n288         p = subprocess.Popen([\n289                 sys.executable, '-c',\n290                 'import sysconfig; print(sysconfig.get_platform())',\n291             ],\n292             stdout=subprocess.PIPE,\n293             stderr=subprocess.DEVNULL,\n294             env=env)\n295         test_platform = p.communicate()[0].strip()\n",
      "filename": "cpython\\Lib\\test\\test_sysconfig.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 288,
      "line_range": [
        288,
        289,
        290,
        291,
        292,
        293,
        294
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "306 \n307         p = subprocess.Popen([\n308                 sys.executable, '-c',\n309                 'import sysconfig; print(sysconfig.get_platform())',\n310             ],\n311             stdout=subprocess.PIPE,\n312             stderr=subprocess.DEVNULL,\n313             env=env)\n314         test_platform = p.communicate()[0].strip()\n",
      "filename": "cpython\\Lib\\test\\test_sysconfig.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 307,
      "line_range": [
        307,
        308,
        309,
        310,
        311,
        312,
        313
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "389         # generate 512 pseudorandom bytes\n390         data = Random(0).randbytes(512)\n391         for char in (b'\\0', b'a'):\n",
      "filename": "cpython\\Lib\\test\\test_tarfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 390,
      "line_range": [
        390
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1479         payload = pathlib.Path(tmpname).read_text(encoding='latin-1')\n1480         assert os.path.dirname(tmpname) not in payload\n1481 \n",
      "filename": "cpython\\Lib\\test\\test_tarfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1480,
      "line_range": [
        1480
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2510                 raise Exception\n2511         except:\n2512             pass\n",
      "filename": "cpython\\Lib\\test\\test_tarfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 2511,
      "line_range": [
        2511
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "2531                     raise Exception\n2532             except:\n2533                 pass\n",
      "filename": "cpython\\Lib\\test\\test_tarfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 2532,
      "line_range": [
        2532
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "2 import re\n3 import subprocess\n4 import sys\n",
      "filename": "cpython\\Lib\\test\\test_tcl.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "223             os.remove(filename)\n224         except Exception as e:\n225             pass\n",
      "filename": "cpython\\Lib\\test\\test_tcl.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 224,
      "line_range": [
        224
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "248             env.unset(\"TCL_LIBRARY\")\n249             stdout = subprocess.check_output(\n250                     [unc_name, '-c', 'import tkinter; print(tkinter)'])\n251 \n",
      "filename": "cpython\\Lib\\test\\test_tcl.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 249,
      "line_range": [
        249,
        250
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2 import selectors\n3 import telnetlib\n4 import threading\n",
      "filename": "cpython\\Lib\\test\\test_telnetlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "A telnet-related module is being imported.  Telnet is considered insecure. Use SSH or some other encrypted protocol.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b401-import-telnetlib",
      "test_id": "B401",
      "test_name": "blacklist"
    },
    {
      "code": "41         # connects\n42         telnet = telnetlib.Telnet(HOST, self.port)\n43         telnet.sock.close()\n",
      "filename": "cpython\\Lib\\test\\test_telnetlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Telnet-related functions are being called. Telnet is considered insecure. Use SSH or some other encrypted protocol.",
      "line_number": 42,
      "line_range": [
        42
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b312-telnetlib",
      "test_id": "B312",
      "test_name": "blacklist"
    },
    {
      "code": "45     def testContextManager(self):\n46         with telnetlib.Telnet(HOST, self.port) as tn:\n47             self.assertIsNotNone(tn.get_socket())\n",
      "filename": "cpython\\Lib\\test\\test_telnetlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Telnet-related functions are being called. Telnet is considered insecure. Use SSH or some other encrypted protocol.",
      "line_number": 46,
      "line_range": [
        46
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b312-telnetlib",
      "test_id": "B312",
      "test_name": "blacklist"
    },
    {
      "code": "53         try:\n54             telnet = telnetlib.Telnet(HOST, self.port)\n55         finally:\n",
      "filename": "cpython\\Lib\\test\\test_telnetlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Telnet-related functions are being called. Telnet is considered insecure. Use SSH or some other encrypted protocol.",
      "line_number": 54,
      "line_range": [
        54
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b312-telnetlib",
      "test_id": "B312",
      "test_name": "blacklist"
    },
    {
      "code": "64         try:\n65             telnet = telnetlib.Telnet(HOST, self.port, timeout=None)\n66         finally:\n",
      "filename": "cpython\\Lib\\test\\test_telnetlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Telnet-related functions are being called. Telnet is considered insecure. Use SSH or some other encrypted protocol.",
      "line_number": 65,
      "line_range": [
        65
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b312-telnetlib",
      "test_id": "B312",
      "test_name": "blacklist"
    },
    {
      "code": "71     def testTimeoutValue(self):\n72         telnet = telnetlib.Telnet(HOST, self.port, timeout=30)\n73         self.assertEqual(telnet.sock.gettimeout(), 30)\n",
      "filename": "cpython\\Lib\\test\\test_telnetlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Telnet-related functions are being called. Telnet is considered insecure. Use SSH or some other encrypted protocol.",
      "line_number": 72,
      "line_range": [
        72
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b312-telnetlib",
      "test_id": "B312",
      "test_name": "blacklist"
    },
    {
      "code": "76     def testTimeoutOpen(self):\n77         telnet = telnetlib.Telnet()\n78         telnet.open(HOST, self.port, timeout=30)\n",
      "filename": "cpython\\Lib\\test\\test_telnetlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Telnet-related functions are being called. Telnet is considered insecure. Use SSH or some other encrypted protocol.",
      "line_number": 77,
      "line_range": [
        77
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b312-telnetlib",
      "test_id": "B312",
      "test_name": "blacklist"
    },
    {
      "code": "83         # Test telnet getter methods\n84         telnet = telnetlib.Telnet(HOST, self.port, timeout=30)\n85         t_sock = telnet.sock\n",
      "filename": "cpython\\Lib\\test\\test_telnetlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Telnet-related functions are being called. Telnet is considered insecure. Use SSH or some other encrypted protocol.",
      "line_number": 84,
      "line_range": [
        84
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b312-telnetlib",
      "test_id": "B312",
      "test_name": "blacklist"
    },
    {
      "code": "114         with support.captured_stdout() as out:\n115             telnetlib.Telnet.msg(self, msg, *args)\n116         self._messages += out.getvalue()\n",
      "filename": "cpython\\Lib\\test\\test_telnetlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Telnet-related functions are being called. Telnet is considered insecure. Use SSH or some other encrypted protocol.",
      "line_number": 115,
      "line_range": [
        115
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b312-telnetlib",
      "test_id": "B312",
      "test_name": "blacklist"
    },
    {
      "code": "166     for x in reads:\n167         assert type(x) is bytes, x\n168     with test_socket(reads):\n",
      "filename": "cpython\\Lib\\test\\test_telnetlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 167,
      "line_range": [
        167
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "480 \n481         retval = os.spawnl(os.P_WAIT, sys.executable, decorated, tester, v, fd)\n482         self.assertFalse(retval < 0,\n",
      "filename": "cpython\\Lib\\test\\test_tempfile.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 481,
      "line_range": [
        481
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "798         def __init__(self, dir, pre, suf):\n799             self.name = tempfile.mktemp(dir=dir, prefix=pre, suffix=suf)\n800             # Create the file.  This will raise an exception if it's\n",
      "filename": "cpython\\Lib\\test\\test_tempfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 799,
      "line_range": [
        799
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "51         with self.random_mutex:\n52             delay = random.random() / 10000.0\n53         verbose_print(\"task %s will run for %sus\" % (ident, round(delay*1e6)))\n",
      "filename": "cpython\\Lib\\test\\test_thread.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 52,
      "line_range": [
        52
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "201                 with self.random_mutex:\n202                     delay = random.random() / 10000.0\n203             verbose_print(\"task %s will run for %sus\" %\n",
      "filename": "cpython\\Lib\\test\\test_thread.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 202,
      "line_range": [
        202
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "18 import os\n19 import subprocess\n20 import signal\n",
      "filename": "cpython\\Lib\\test\\test_threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 19,
      "line_range": [
        19
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "54     def run(self):\n55         delay = random.random() / 10000.0\n56         if verbose:\n",
      "filename": "cpython\\Lib\\test\\test_threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 55,
      "line_range": [
        55
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1129         expected_output = \"end of main thread\\n\"\n1130         p = subprocess.Popen([sys.executable, \"-c\", script],\n1131                              stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n1132         stdout, stderr = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1130,
      "line_range": [
        1130,
        1131
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "723 \n724         import pickle\n725 \n726         # Load a short time structure using pickle.\n727         st = b\"ctime\\nstruct_time\\np0\\n((I2007\\nI8\\nI11\\nI1\\nI24\\nI49\\nI5\\nI223\\nI1\\ntp1\\n(dp2\\ntp3\\nRp4\\n.\"\n",
      "filename": "cpython\\Lib\\test\\test_time.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 724,
      "line_range": [
        724,
        725,
        726
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "727         st = b\"ctime\\nstruct_time\\np0\\n((I2007\\nI8\\nI11\\nI1\\nI24\\nI49\\nI5\\nI223\\nI1\\ntp1\\n(dp2\\ntp3\\nRp4\\n.\"\n728         lt = pickle.loads(st)\n729         self.assertIs(lt.tm_gmtoff, None)\n",
      "filename": "cpython\\Lib\\test\\test_time.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 728,
      "line_range": [
        728
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "986         # rest of the output should be platform-independent.\n987         self.assertRegex(repr(eval(s)), '-3.2171603427[0-9]*e-0+7')\n988 \n",
      "filename": "cpython\\Lib\\test\\test_tokenize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 987,
      "line_range": [
        987
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "990         # platforms.\n991         self.assertEqual(eval(decistmt(s)),\n992                          Decimal('-3.217160342717258261933904529E-7'))\n",
      "filename": "cpython\\Lib\\test\\test_tokenize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 991,
      "line_range": [
        991
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1 import os\n2 import subprocess\n3 import sys\n",
      "filename": "cpython\\Lib\\test\\test_tools\\test_pathfix.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "34         encoding = sys.getfilesystemencoding()\n35         proc = subprocess.run(\n36             [sys.executable, self.script,\n37              *pathfix_flags, '-n', pathfix_arg],\n38             env={**os.environ, 'PYTHONIOENCODING': encoding},\n39             capture_output=True)\n40 \n",
      "filename": "cpython\\Lib\\test\\test_tools\\test_pathfix.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 35,
      "line_range": [
        35,
        36,
        37,
        38,
        39
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "5 import unittest\n6 import subprocess\n7 import textwrap\n",
      "filename": "cpython\\Lib\\test\\test_tools\\test_pindent.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "24     def pindent(self, source, *args):\n25         with subprocess.Popen(\n26                 (sys.executable, self.script) + args,\n27                 stdin=subprocess.PIPE, stdout=subprocess.PIPE,\n28                 universal_newlines=True) as proc:\n29             out, err = proc.communicate(source)\n",
      "filename": "cpython\\Lib\\test\\test_tools\\test_pindent.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 25,
      "line_range": [
        25,
        26,
        27,
        28
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "112         # - respect file encoding (Issue3975)\n113         import sys, subprocess\n114 \n115         # The spawned subprocess has its stdout redirected to a PIPE, and its\n116         # encoding may be different from the current interpreter, on Windows\n117         # at least.\n118         process = subprocess.Popen([sys.executable, \"-c\",\n",
      "filename": "cpython\\Lib\\test\\test_traceback.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 113,
      "line_range": [
        113,
        114,
        115,
        116,
        117
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "117         # at least.\n118         process = subprocess.Popen([sys.executable, \"-c\",\n119                                     \"import sys; print(sys.stdout.encoding)\"],\n120                                    stdout=subprocess.PIPE,\n121                                    stderr=subprocess.STDOUT)\n122         stdout, stderr = process.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_traceback.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 118,
      "line_range": [
        118,
        119,
        120,
        121
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "133 \n134                 process = subprocess.Popen([sys.executable, TESTFN],\n135                     stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n136                 stdout, stderr = process.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_traceback.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 134,
      "line_range": [
        134,
        135
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "665         def e():\n666             exec(\"x = 5 | 4 |\")\n667         msg = self.get_report(e).splitlines()\n",
      "filename": "cpython\\Lib\\test\\test_traceback.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 666,
      "line_range": [
        666
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "4 import gc\n5 import pickle\n6 \n7 # For tuple hashes, we normally only run a test to ensure that we get\n8 # the same results across platforms in a handful of cases.  If that's\n9 # so, there's no real point to running more.  Set RUN_ALL_HASH_TESTS to\n10 # run more anyway.  That's usually of real interest only when analyzing,\n11 # or changing, the hash algorithm.  In which case it's usually also\n12 # most useful to set JUST_SHOW_HASH_RESULTS, to see all the results\n13 # instead of wrestling with test \"failures\".  See the bottom of the\n14 # file for extensive notes on what we're testing here and why.\n15 RUN_ALL_HASH_TESTS = False\n",
      "filename": "cpython\\Lib\\test\\test_tuple.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 5,
      "line_range": [
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "250         T += product(B, repeat=4)\n251         assert len(T) == 345130\n252         tryone(\"new tuple test\", T,\n",
      "filename": "cpython\\Lib\\test\\test_tuple.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 251,
      "line_range": [
        251
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "352             d = pickle.dumps(itorg, proto)\n353             it = pickle.loads(d)\n354             self.assertEqual(type(itorg), type(it))\n",
      "filename": "cpython\\Lib\\test\\test_tuple.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 353,
      "line_range": [
        353
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "356 \n357             it = pickle.loads(d)\n358             next(it)\n",
      "filename": "cpython\\Lib\\test\\test_tuple.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 357,
      "line_range": [
        357
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "366             d = pickle.dumps(itorg, proto)\n367             it = pickle.loads(d)\n368             self.assertEqual(type(itorg), type(it))\n",
      "filename": "cpython\\Lib\\test\\test_tuple.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 367,
      "line_range": [
        367
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "370 \n371             it = pickle.loads(d)\n372             next(it)\n",
      "filename": "cpython\\Lib\\test\\test_tuple.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 371,
      "line_range": [
        371
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1 import pickle\n2 import unittest\n3 from test import support\n",
      "filename": "cpython\\Lib\\test\\test_turtle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "174                 pickled = pickle.dumps(vec, protocol=proto)\n175                 unpickled = pickle.loads(pickled)\n176                 self.assertEqual(unpickled, vec)\n",
      "filename": "cpython\\Lib\\test\\test_turtle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 175,
      "line_range": [
        175
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "339                     else:\n340                         assert 0 <= ord(c) - ord('a') < len(t.args.posonlyargs + t.args.args)\n341                         if index < len(t.args.posonlyargs):\n",
      "filename": "cpython\\Lib\\test\\test_type_comments.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 340,
      "line_range": [
        340
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "346                     self.assertEqual(arg.type_comment, arg.arg.upper())\n347                 assert not todo\n348         tree = self.classic_parse(longargs)\n",
      "filename": "cpython\\Lib\\test\\test_type_comments.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 347,
      "line_range": [
        347
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "6 import inspect\n7 import pickle\n8 import locale\n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "218             # just make sure we have the unified type for integers\n219             assert type(i) == int\n220             assert type(format_spec) == str\n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 219,
      "line_range": [
        219
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "219             assert type(i) == int\n220             assert type(format_spec) == str\n221             self.assertEqual(i.__format__(format_spec), result)\n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 220,
      "line_range": [
        220
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "664         TV = typing.TypeVar('T')\n665         assert TV | str == typing.Union[TV, str]\n666         assert str | TV == typing.Union[str, TV]\n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 665,
      "line_range": [
        665
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "665         assert TV | str == typing.Union[TV, str]\n666         assert str | TV == typing.Union[str, TV]\n667 \n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 666,
      "line_range": [
        666
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "673         def forward_before(x: ForwardBefore[int]) -> None: ...\n674         assert typing.get_args(typing.get_type_hints(forward_after, localns=locals())['x']) == (int, Forward)\n675         assert typing.get_args(typing.get_type_hints(forward_before, localns=locals())['x']) == (int, Forward)\n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 674,
      "line_range": [
        674
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "674         assert typing.get_args(typing.get_type_hints(forward_after, localns=locals())['x']) == (int, Forward)\n675         assert typing.get_args(typing.get_type_hints(forward_before, localns=locals())['x']) == (int, Forward)\n676 \n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 675,
      "line_range": [
        675
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "680                 ...\n681         assert Proto | str == typing.Union[Proto, str]\n682 \n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 681,
      "line_range": [
        681
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "683     def test_or_type_operator_with_Alias(self):\n684         assert list | str == typing.Union[list, str]\n685         assert typing.List | str == typing.Union[typing.List, str]\n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 684,
      "line_range": [
        684
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "684         assert list | str == typing.Union[list, str]\n685         assert typing.List | str == typing.Union[typing.List, str]\n686 \n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 685,
      "line_range": [
        685
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "688         NT=namedtuple('A', ['B', 'C', 'D'])\n689         assert NT | str == typing.Union[NT,str]\n690 \n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 689,
      "line_range": [
        689
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "695             label: str\n696         assert Point2D | str == typing.Union[Point2D, str]\n697 \n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 696,
      "line_range": [
        696
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "699         UserId = typing.NewType('UserId', int)\n700         assert UserId | str == typing.Union[UserId, str]\n701 \n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 700,
      "line_range": [
        700
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "702     def test_or_type_operator_with_IO(self):\n703         assert typing.IO | str == typing.Union[typing.IO, str]\n704 \n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 703,
      "line_range": [
        703
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "705     def test_or_type_operator_with_SpecialForm(self):\n706         assert typing.Any | str == typing.Union[typing.Any, str]\n707         assert typing.NoReturn | str == typing.Union[typing.NoReturn, str]\n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 706,
      "line_range": [
        706
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "706         assert typing.Any | str == typing.Union[typing.Any, str]\n707         assert typing.NoReturn | str == typing.Union[typing.NoReturn, str]\n708         assert typing.Optional[int] | str == typing.Union[typing.Optional[int], str]\n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 707,
      "line_range": [
        707
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "707         assert typing.NoReturn | str == typing.Union[typing.NoReturn, str]\n708         assert typing.Optional[int] | str == typing.Union[typing.Optional[int], str]\n709         assert typing.Optional[int] | str == typing.Union[int, str, None]\n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 708,
      "line_range": [
        708
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "708         assert typing.Optional[int] | str == typing.Union[typing.Optional[int], str]\n709         assert typing.Optional[int] | str == typing.Union[int, str, None]\n710         assert typing.Union[int, bool] | str == typing.Union[int, bool, str]\n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 709,
      "line_range": [
        709
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "709         assert typing.Optional[int] | str == typing.Union[int, str, None]\n710         assert typing.Union[int, bool] | str == typing.Union[int, bool, str]\n711 \n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 710,
      "line_range": [
        710
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "712     def test_or_type_repr(self):\n713         assert repr(int | None) == \"int | None\"\n714         assert repr(int | typing.GenericAlias(list, int)) == \"int | list[int]\"\n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 713,
      "line_range": [
        713
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "713         assert repr(int | None) == \"int | None\"\n714         assert repr(int | typing.GenericAlias(list, int)) == \"int | list[int]\"\n715 \n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 714,
      "line_range": [
        714
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1473                 raise TypeError(pname) from e\n1474             ns_roundtrip = pickle.loads(ns_pickled)\n1475 \n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1474,
      "line_range": [
        1474
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1695                     if self._i == 0:\n1696                         assert v is None\n1697                         return self._fut\n",
      "filename": "cpython\\Lib\\test\\test_types.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1696,
      "line_range": [
        1696
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2 import collections\n3 import pickle\n4 import re\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "230                 )\n231         exec(code, {})\n232 \n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 231,
      "line_range": [
        231
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "366         # (Only relevant for Python 2.)\n367         from xml.etree.ElementTree import Element\n368 \n369         Union[Element, str]  # Shouldn't crash\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using Element to parse untrusted XML data is known to be vulnerable to XML attacks. Replace Element with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 367,
      "line_range": [
        367,
        368
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b405-import-xml-etree",
      "test_id": "B405",
      "test_name": "blacklist"
    },
    {
      "code": "1300             z = pickle.dumps(c, proto)\n1301             x = pickle.loads(z)\n1302             self.assertEqual(x.foo, 42)\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1301,
      "line_range": [
        1301
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1306             s = pickle.dumps(P)\n1307             D = pickle.loads(s)\n1308 \n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1307,
      "line_range": [
        1307
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1871             z = pickle.dumps(c, proto)\n1872             x = pickle.loads(z)\n1873             self.assertEqual(x.foo, 42)\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1872,
      "line_range": [
        1872
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1881                 z = pickle.dumps(s, proto)\n1882                 x = pickle.loads(z)\n1883                 self.assertEqual(s, x)\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1882,
      "line_range": [
        1882
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1888                 z = pickle.dumps(s, proto)\n1889                 x = pickle.loads(z)\n1890                 self.assertEqual(s, x)\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1889,
      "line_range": [
        1889
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1914             self.assertIs(deepcopy(X), X)\n1915             self.assertIs(pickle.loads(pickle.dumps(X)), X)\n1916         # Check that local type variables are copyable.\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1915,
      "line_range": [
        1915
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "2648         ns = {}\n2649         exec(code, ns)\n2650         hints = get_type_hints(ns['C'].foo)\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 2649,
      "line_range": [
        2649
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "2721 try:\n2722     exec(ASYNCIO_TESTS)\n2723 except ImportError:\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 2722,
      "line_range": [
        2722
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "2795 except StopIteration as e:\n2796     assert e.args[0] == 42\n2797 \n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2796,
      "line_range": [
        2796
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3067         ns = {}\n3068         exec(\n3069             \"async def foo() -> typing.Awaitable[int]:\\n\"\n3070             \"    return await AwaitableWrapper(42)\\n\",\n3071             globals(), ns)\n3072         foo = ns['foo']\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 3068,
      "line_range": [
        3068,
        3069,
        3070,
        3071
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "3080         ns = {}\n3081         exec(\n3082             \"async def foo():\\n\"\n3083             \"    return\\n\",\n3084             globals(), ns)\n3085         foo = ns['foo']\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 3081,
      "line_range": [
        3081,
        3082,
        3083,
        3084
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "3358         ns = {}\n3359         exec(\"async def f():\\n\"\n3360              \"    yield 42\\n\", globals(), ns)\n3361         g = ns['f']()\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 3359,
      "line_range": [
        3359,
        3360
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "3392         self.assertEqual(len(MMC()), 0)\n3393         assert callable(MMC.update)\n3394         self.assertIsInstance(MMC(), typing.Mapping)\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3393,
      "line_range": [
        3393
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3448         ns = {}\n3449         exec('async def g(): yield 0', globals(), ns)\n3450         g = ns['g']\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 3449,
      "line_range": [
        3449
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "3584 \n3585         assert isinstance(foo(KeyboardInterrupt), KeyboardInterrupt)\n3586         assert foo(None) is None\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3585,
      "line_range": [
        3585
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3585         assert isinstance(foo(KeyboardInterrupt), KeyboardInterrupt)\n3586         assert foo(None) is None\n3587 \n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3586,
      "line_range": [
        3586
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3737                     z = pickle.dumps(jane, proto)\n3738                     jane2 = pickle.loads(z)\n3739                     self.assertEqual(jane2, jane)\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 3738,
      "line_range": [
        3738
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "3842             z = pickle.dumps(jane, proto)\n3843             jane2 = pickle.loads(z)\n3844             self.assertEqual(jane2, jane)\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 3843,
      "line_range": [
        3843
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "3846             ZZ = pickle.dumps(EmpD, proto)\n3847             EmpDnew = pickle.loads(ZZ)\n3848             self.assertEqual(EmpDnew({'name': 'jane', 'id': 37}), jane)\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 3847,
      "line_range": [
        3847
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "3869 \n3870         assert Point2Dor3D.__required_keys__ == frozenset(['x', 'y'])\n3871         assert Point2Dor3D.__optional_keys__ == frozenset(['z'])\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3870,
      "line_range": [
        3870
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3870         assert Point2Dor3D.__required_keys__ == frozenset(['x', 'y'])\n3871         assert Point2Dor3D.__optional_keys__ == frozenset(['z'])\n3872 \n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3871,
      "line_range": [
        3871
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3883 \n3884         assert BaseAnimal.__required_keys__ == frozenset(['name'])\n3885         assert BaseAnimal.__optional_keys__ == frozenset([])\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3884,
      "line_range": [
        3884
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3884         assert BaseAnimal.__required_keys__ == frozenset(['name'])\n3885         assert BaseAnimal.__optional_keys__ == frozenset([])\n3886         assert gth(BaseAnimal) == {'name': str}\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3885,
      "line_range": [
        3885
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3885         assert BaseAnimal.__optional_keys__ == frozenset([])\n3886         assert gth(BaseAnimal) == {'name': str}\n3887 \n3888         assert Animal.__required_keys__ == frozenset(['name'])\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3886,
      "line_range": [
        3886,
        3887
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3887 \n3888         assert Animal.__required_keys__ == frozenset(['name'])\n3889         assert Animal.__optional_keys__ == frozenset(['tail', 'voice'])\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3888,
      "line_range": [
        3888
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3888         assert Animal.__required_keys__ == frozenset(['name'])\n3889         assert Animal.__optional_keys__ == frozenset(['tail', 'voice'])\n3890         assert gth(Animal) == {\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3889,
      "line_range": [
        3889
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3889         assert Animal.__optional_keys__ == frozenset(['tail', 'voice'])\n3890         assert gth(Animal) == {\n3891             'name': str,\n3892             'tail': bool,\n3893             'voice': str,\n3894         }\n3895 \n3896         assert Cat.__required_keys__ == frozenset(['name', 'fur_color'])\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3890,
      "line_range": [
        3890,
        3891,
        3892,
        3893,
        3894,
        3895
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3895 \n3896         assert Cat.__required_keys__ == frozenset(['name', 'fur_color'])\n3897         assert Cat.__optional_keys__ == frozenset(['tail', 'voice'])\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3896,
      "line_range": [
        3896
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3896         assert Cat.__required_keys__ == frozenset(['name', 'fur_color'])\n3897         assert Cat.__optional_keys__ == frozenset(['tail', 'voice'])\n3898         assert gth(Cat) == {\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3897,
      "line_range": [
        3897
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3897         assert Cat.__optional_keys__ == frozenset(['tail', 'voice'])\n3898         assert gth(Cat) == {\n3899             'fur_color': str,\n3900             'name': str,\n3901             'tail': bool,\n3902             'voice': str,\n3903         }\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3898,
      "line_range": [
        3898,
        3899,
        3900,
        3901,
        3902
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3905     def test_is_typeddict(self):\n3906         assert is_typeddict(Point2D) is True\n3907         assert is_typeddict(Union[str, int]) is False\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3906,
      "line_range": [
        3906
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3906         assert is_typeddict(Point2D) is True\n3907         assert is_typeddict(Union[str, int]) is False\n3908         # classes, not instances\n3909         assert is_typeddict(Point2D()) is False\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3907,
      "line_range": [
        3907,
        3908
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3908         # classes, not instances\n3909         assert is_typeddict(Point2D()) is False\n3910 \n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3909,
      "line_range": [
        3909
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4126                     pickled = pickle.dumps(x, prot)\n4127                     restored = pickle.loads(pickled)\n4128                     self.assertEqual(x, restored)\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 4127,
      "line_range": [
        4127
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "4140             z = pickle.dumps(G, proto)\n4141             x = pickle.loads(z)\n4142             self.assertEqual(x.foo, 42)\n",
      "filename": "cpython\\Lib\\test\\test_typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 4141,
      "line_range": [
        4141
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "30         nines = \"9\" * 32\n31         self.assertTrue(eval(\"+\" + nines) == 10**32-1)\n32         self.assertTrue(eval(\"-\" + nines) == -(10**32-1))\n",
      "filename": "cpython\\Lib\\test\\test_unary.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 31,
      "line_range": [
        31
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "31         self.assertTrue(eval(\"+\" + nines) == 10**32-1)\n32         self.assertTrue(eval(\"-\" + nines) == -(10**32-1))\n33         self.assertTrue(eval(\"~\" + nines) == ~(10**32-1))\n",
      "filename": "cpython\\Lib\\test\\test_unary.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 32,
      "line_range": [
        32
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "32         self.assertTrue(eval(\"-\" + nines) == -(10**32-1))\n33         self.assertTrue(eval(\"~\" + nines) == ~(10**32-1))\n34 \n",
      "filename": "cpython\\Lib\\test\\test_unary.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 33,
      "line_range": [
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "38         self.assertTrue(os.access(os.path.abspath(filename), os.R_OK))\n39         os.chmod(filename, 0o777)\n40         os.utime(filename, None)\n",
      "filename": "cpython\\Lib\\test\\test_unicode_file.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0o777 on file (filename).",
      "line_number": 39,
      "line_range": [
        39
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "23     def test_method_checksum(self):\n24         h = hashlib.sha1()\n25         for i in range(sys.maxunicode + 1):\n",
      "filename": "cpython\\Lib\\test\\test_unicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "77         data = []\n78         h = hashlib.sha1()\n79 \n",
      "filename": "cpython\\Lib\\test\\test_unicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 78,
      "line_range": [
        78
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "56             os.unlink(os_helper.TESTFN)\n57         except:\n58             pass\n",
      "filename": "cpython\\Lib\\test\\test_univnewlines.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 57,
      "line_range": [
        57
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "41     if proxies is not None:\n42         opener = urllib.request.FancyURLopener(proxies=proxies)\n43     elif not _urlopener:\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 42,
      "line_range": [
        42
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "57             DeprecationWarning)):\n58         return urllib.request.FancyURLopener()\n59 \n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 58,
      "line_range": [
        58
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "361         try:\n362             fp = urllib.request.urlopen(url)\n363             self.assertEqual(fp.geturl(), url)\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 362,
      "line_range": [
        362
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "391                     InvalidURL, f\"contain control.*{escaped_char_repr}\"):\n392                     urllib.request.urlopen(f\"http:{schemeless_url}\")\n393                 with self.assertRaisesRegex(\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 392,
      "line_range": [
        392
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "394                     InvalidURL, f\"contain control.*{escaped_char_repr}\"):\n395                     urllib.request.urlopen(f\"https:{schemeless_url}\")\n396                 # This code path quotes the URL so there is no injection.\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 395,
      "line_range": [
        395
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "416                 InvalidURL, r\"contain control.*\\\\r.*(found at least . .)\"):\n417                 urllib.request.urlopen(f\"http:{schemeless_url}\")\n418             with self.assertRaisesRegex(InvalidURL, r\"contain control.*\\\\n\"):\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 417,
      "line_range": [
        417
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "418             with self.assertRaisesRegex(InvalidURL, r\"contain control.*\\\\n\"):\n419                 urllib.request.urlopen(f\"https:{schemeless_url}\")\n420             # This code path quotes the URL so there is no injection.\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 419,
      "line_range": [
        419
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "597         with warnings_helper.check_warnings(('',DeprecationWarning)):\n598             urllib.request.URLopener()\n599 \n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 598,
      "line_range": [
        598
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "604             with self.assertRaises(ValueError):\n605                 urllib.request.urlopen(\n606                     \"https://localhost\", cafile=\"/nonexistent/path\", context=context\n607                 )\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 605,
      "line_range": [
        605,
        606
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "638 \n639         self.text_url_resp = urllib.request.urlopen(self.text_url)\n640         self.text_url_base64_resp = urllib.request.urlopen(\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 639,
      "line_range": [
        639
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "639         self.text_url_resp = urllib.request.urlopen(self.text_url)\n640         self.text_url_base64_resp = urllib.request.urlopen(\n641             self.text_url_base64)\n642         self.image_url_resp = urllib.request.urlopen(self.image_url)\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 640,
      "line_range": [
        640,
        641
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "641             self.text_url_base64)\n642         self.image_url_resp = urllib.request.urlopen(self.image_url)\n643 \n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 642,
      "line_range": [
        642
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "657             str(len(self.image)))\n658         self.assertEqual(urllib.request.urlopen(\"data:,\").info().get_params(),\n659             [('text/plain', ''), ('charset', 'US-ASCII')])\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 658,
      "line_range": [
        658
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "711             try: FILE.close()\n712             except: pass\n713 \n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 712,
      "line_range": [
        712
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "717             try: os.remove(each)\n718             except: pass\n719 \n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 718,
      "line_range": [
        718
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "740             try: newFile.close()\n741             except: pass\n742         return newFilePath\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 741,
      "line_range": [
        741
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "749         # a headers value is returned.\n750         result = urllib.request.urlretrieve(\"file:%s\" % os_helper.TESTFN)\n751         self.assertEqual(result[0], os_helper.TESTFN)\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 750,
      "line_range": [
        750
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "759         self.registerFileForCleanUp(second_temp)\n760         result = urllib.request.urlretrieve(self.constructLocalFileUrl(\n761             os_helper.TESTFN), second_temp)\n762         self.assertEqual(second_temp, result[0])\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 760,
      "line_range": [
        760,
        761
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "770             try: FILE.close()\n771             except: pass\n772         self.assertEqual(self.text, text)\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 771,
      "line_range": [
        771
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "783         self.registerFileForCleanUp(second_temp)\n784         urllib.request.urlretrieve(\n785             self.constructLocalFileUrl(os_helper.TESTFN),\n786             second_temp, hooktester)\n787 \n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 784,
      "line_range": [
        784,
        785,
        786
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "793         srcFileName = self.createNewTempFile()\n794         urllib.request.urlretrieve(self.constructLocalFileUrl(srcFileName),\n795             os_helper.TESTFN, hooktester)\n796         self.assertEqual(len(report), 1)\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 794,
      "line_range": [
        794,
        795
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "806         srcFileName = self.createNewTempFile(b\"x\" * 5)\n807         urllib.request.urlretrieve(self.constructLocalFileUrl(srcFileName),\n808             os_helper.TESTFN, hooktester)\n809         self.assertEqual(len(report), 2)\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 807,
      "line_range": [
        807,
        808
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "820         srcFileName = self.createNewTempFile(b\"x\" * 8193)\n821         urllib.request.urlretrieve(self.constructLocalFileUrl(srcFileName),\n822             os_helper.TESTFN, hooktester)\n823         self.assertEqual(len(report), 3)\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 821,
      "line_range": [
        821,
        822
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "850             try:\n851                 urllib.request.urlretrieve(support.TEST_HTTP_URL,\n852                                            reporthook=_reporthook)\n853             finally:\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 851,
      "line_range": [
        851,
        852
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "869             try:\n870                 urllib.request.urlretrieve(support.TEST_HTTP_URL)\n871             finally:\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 870,
      "line_range": [
        870
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "1577             fileurl = \"file:\" + urllib.request.pathname2url(tmpfile)\n1578             filename, _ = urllib.request.URLopener().retrieve(fileurl)\n1579             # Some buildbots have TEMP folder that uses a lowercase drive letter.\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 1578,
      "line_range": [
        1578
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "1586         self.addCleanup(self.unfakehttp)\n1587         filename, _ = urllib.request.URLopener().retrieve(url)\n1588         self.assertEqual(os.path.splitext(filename)[1], \".txt\")\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 1587,
      "line_range": [
        1587
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "1597             self.assertRaises(OSError, urllib.request.urlopen, url)\n1598             self.assertRaises(OSError, urllib.request.URLopener().open, url)\n1599             self.assertRaises(OSError, urllib.request.URLopener().retrieve, url)\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 1598,
      "line_range": [
        1598
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "1598             self.assertRaises(OSError, urllib.request.URLopener().open, url)\n1599             self.assertRaises(OSError, urllib.request.URLopener().retrieve, url)\n1600             self.assertRaises(OSError, DummyURLopener().open, url)\n",
      "filename": "cpython\\Lib\\test\\test_urllib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 1599,
      "line_range": [
        1599
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "13 import tempfile\n14 import subprocess\n15 \n16 import urllib.request\n",
      "filename": "cpython\\Lib\\test\\test_urllib2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 14,
      "line_range": [
        14,
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "38             context = {}\n39             exec('from urllib.%s import *' % module, context)\n40             del context['__builtins__']\n",
      "filename": "cpython\\Lib\\test\\test_urllib2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 39,
      "line_range": [
        39
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "65 \n66         with urllib.request.urlopen(file_url) as f:\n67             f.read()\n",
      "filename": "cpython\\Lib\\test\\test_urllib2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 66,
      "line_range": [
        66
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "412             raise urllib.error.URLError(\"blah\")\n413         assert False\n414 \n",
      "filename": "cpython\\Lib\\test\\test_urllib2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 413,
      "line_range": [
        413
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "641         o.open(req)\n642         assert len(o.calls) == 2\n643         calls = [(handlers[0], \"http_open\", (req,)),\n",
      "filename": "cpython\\Lib\\test\\test_urllib2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 642,
      "line_range": [
        642
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "724 \n725         import ftplib\n726         data = \"rheum rhaponicum\"\n",
      "filename": "cpython\\Lib\\test\\test_urllib2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "A FTP-related module is being imported.  FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 725,
      "line_range": [
        725
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b402-import-ftplib",
      "test_id": "B402",
      "test_name": "blacklist"
    },
    {
      "code": "981         for headers in {}, {\"Content-Length\": 30}:\n982             with subprocess.Popen(cmd, stdout=subprocess.PIPE) as proc:\n983                 req = Request(\"http://example.com/\", proc.stdout, headers)\n",
      "filename": "cpython\\Lib\\test\\test_urllib2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 982,
      "line_range": [
        982
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1308         http.client.HTTPConnection.request = request\n1309         fp = urllib.request.urlopen(\"http://python.org/path\")\n1310         self.assertEqual(fp.geturl(), \"http://python.org/path?query\")\n",
      "filename": "cpython\\Lib\\test\\test_urllib2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 1309,
      "line_range": [
        1309
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "95     def set_users(self, users):\n96         assert isinstance(users, dict)\n97         self._users = users\n",
      "filename": "cpython\\Lib\\test\\test_urllib2_localnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 96,
      "line_range": [
        96
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "103         self._request_num += 1\n104         nonce = hashlib.md5(str(self._request_num).encode(\"ascii\")).hexdigest()\n105         self._nonces.append(nonce)\n",
      "filename": "cpython\\Lib\\test\\test_urllib2_localnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 104,
      "line_range": [
        104
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "131         HA1_str = \"%(username)s:%(realm)s:%(password)s\" % final_dict\n132         HA1 = hashlib.md5(HA1_str.encode(\"ascii\")).hexdigest()\n133         HA2_str = \"%(method)s:%(uri)s\" % final_dict\n",
      "filename": "cpython\\Lib\\test\\test_urllib2_localnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 132,
      "line_range": [
        132
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "133         HA2_str = \"%(method)s:%(uri)s\" % final_dict\n134         HA2 = hashlib.md5(HA2_str.encode(\"ascii\")).hexdigest()\n135         final_dict[\"HA1\"] = HA1\n",
      "filename": "cpython\\Lib\\test\\test_urllib2_localnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 134,
      "line_range": [
        134
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "138                        \"%(cnonce)s:%(qop)s:%(HA2)s\" % final_dict\n139         response = hashlib.md5(response_str.encode(\"ascii\")).hexdigest()\n140 \n",
      "filename": "cpython\\Lib\\test\\test_urllib2_localnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 139,
      "line_range": [
        139
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "308         try:\n309             self.assertTrue(urllib.request.urlopen(self.server_url))\n310         except urllib.error.HTTPError:\n",
      "filename": "cpython\\Lib\\test\\test_urllib2_localnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 309,
      "line_range": [
        309
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "465         l = []\n466         f = urllib.request.urlopen(url, data, **kwargs)\n467         try:\n",
      "filename": "cpython\\Lib\\test\\test_urllib2_localnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 466,
      "line_range": [
        466
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "612                                      headers={\"Range\": \"bytes=20-39\"})\n613         with urllib.request.urlopen(req):\n614             pass\n",
      "filename": "cpython\\Lib\\test\\test_urllib2_localnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 613,
      "line_range": [
        613
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "618         handler = self.start_server()\n619         with urllib.request.urlopen(\"http://localhost:%s\" % handler.port) as open_url:\n620             for attr in (\"read\", \"close\", \"info\", \"geturl\"):\n",
      "filename": "cpython\\Lib\\test\\test_urllib2_localnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 619,
      "line_range": [
        619
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "626         handler = self.start_server()\n627         open_url = urllib.request.urlopen(\n628             \"http://localhost:%s\" % handler.port)\n629         with open_url:\n",
      "filename": "cpython\\Lib\\test\\test_urllib2_localnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 627,
      "line_range": [
        627,
        628
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "638         handler = self.start_server()\n639         open_url = urllib.request.urlopen(\"http://localhost:%s\" % handler.port)\n640         with open_url:\n",
      "filename": "cpython\\Lib\\test\\test_urllib2_localnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 639,
      "line_range": [
        639
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "646         handler = self.start_server([(200, [], expected_response)])\n647         data = urllib.request.urlopen(\"http://localhost:%s\" % handler.port)\n648         for line in data:\n",
      "filename": "cpython\\Lib\\test\\test_urllib2_localnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 647,
      "line_range": [
        647
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "654         handler = self.start_server([(200, [], expected_response)])\n655         data = urllib.request.urlopen(\"http://localhost:%s\" % handler.port)\n656         for index, line in enumerate(data):\n",
      "filename": "cpython\\Lib\\test\\test_urllib2_localnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 655,
      "line_range": [
        655
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "199             req = urllib.request.Request(urlwith_frag)\n200             res = urllib.request.urlopen(req)\n201             self.assertEqual(res.geturl(),\n",
      "filename": "cpython\\Lib\\test\\test_urllib2net.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 200,
      "line_range": [
        200
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "207             req = urllib.request.Request(redirect_url_with_frag)\n208             res = urllib.request.urlopen(req)\n209             self.assertEqual(res.geturl(),\n",
      "filename": "cpython\\Lib\\test\\test_urllib2net.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 208,
      "line_range": [
        208
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "233             try:\n234                 with urllib.request.urlopen(URL) as res:\n235                     pass\n",
      "filename": "cpython\\Lib\\test\\test_urllib2net.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 234,
      "line_range": [
        234
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "241 \n242             req = urllib.request.urlopen(URL)\n243             res = req.read()\n",
      "filename": "cpython\\Lib\\test\\test_urllib2net.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 242,
      "line_range": [
        242
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "32         with socket_helper.transient_internet(domain):\n33             f = urllib.request.urlopen(support.TEST_HTTP_URL)\n34             f.read()\n",
      "filename": "cpython\\Lib\\test\\test_urllibnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 33,
      "line_range": [
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "61         with socket_helper.transient_internet(resource):\n62             r = urllib.request.urlopen(*args, **kwargs)\n63             try:\n",
      "filename": "cpython\\Lib\\test\\test_urllibnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 62,
      "line_range": [
        62
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "104             with self.assertWarns(DeprecationWarning):\n105                 open_url = urllib.request.FancyURLopener().open(URL)\n106             try:\n",
      "filename": "cpython\\Lib\\test\\test_urllibnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 105,
      "line_range": [
        105
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "147         with self.assertRaises(OSError, msg=failure_explanation):\n148             urllib.request.urlopen(\"http://{}/\".format(bogus_domain))\n149 \n",
      "filename": "cpython\\Lib\\test\\test_urllibnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 148,
      "line_range": [
        148
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "161         with socket_helper.transient_internet(resource):\n162             file_location, info = urllib.request.urlretrieve(*args, **kwargs)\n163             try:\n",
      "filename": "cpython\\Lib\\test\\test_urllibnet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 162,
      "line_range": [
        162
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "897         # we cannot rely on ordering here\n898         assert set(result.split('&')) == {'a=1', 'a=2', 'b=3', 'b=4', 'b=5'}\n899 \n900         class Trivial:\n",
      "filename": "cpython\\Lib\\test\\test_urlparse.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 898,
      "line_range": [
        898,
        899
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "37         ns = {}\n38         exec(code, ns)\n39         self.assertEqual('\u00c7', ns['u'])\n",
      "filename": "cpython\\Lib\\test\\test_utf8source.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 38,
      "line_range": [
        38
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "8 import os\n9 import pickle\n10 import sys\n",
      "filename": "cpython\\Lib\\test\\test_uuid.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "335                     with self.subTest(protocol=proto):\n336                         check(pickle.loads(pickle.dumps(u, proto)), u)\n337 \n",
      "filename": "cpython\\Lib\\test\\test_uuid.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 336,
      "line_range": [
        336
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "450                 # SafeUUID.unknown.\n451                 check(pickle.loads(pickled), u)\n452             for pickled in pickled_uuids_safe:\n",
      "filename": "cpython\\Lib\\test\\test_uuid.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 451,
      "line_range": [
        451
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "452             for pickled in pickled_uuids_safe:\n453                 check(pickle.loads(pickled), u_safe)\n454             for pickled in pickled_uuids_unsafe:\n",
      "filename": "cpython\\Lib\\test\\test_uuid.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 453,
      "line_range": [
        453
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "454             for pickled in pickled_uuids_unsafe:\n455                 check(pickle.loads(pickled), u_unsafe)\n456 \n",
      "filename": "cpython\\Lib\\test\\test_uuid.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 455,
      "line_range": [
        455
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "13 import struct\n14 import subprocess\n15 import sys\n",
      "filename": "cpython\\Lib\\test\\test_venv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "36 def check_output(cmd, encoding=None):\n37     p = subprocess.Popen(cmd,\n38         stdout=subprocess.PIPE,\n39         stderr=subprocess.PIPE,\n40         encoding=encoding)\n41     out, err = p.communicate()\n",
      "filename": "cpython\\Lib\\test\\test_venv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 37,
      "line_range": [
        37,
        38,
        39,
        40
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "4 import os\n5 import subprocess\n6 import sys\n",
      "filename": "cpython\\Lib\\test\\test_wait3.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "40         args = [sys.executable, '-c', 'import sys; sys.stdin.read()']\n41         proc = subprocess.Popen(args, stdin=subprocess.PIPE)\n42         try:\n",
      "filename": "cpython\\Lib\\test\\test_wait3.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "464             self.module.simplefilter(\"always\", category=UserWarning)\n465             exec(codeobj)\n466         self.assertEqual(w[0].filename, filename)\n",
      "filename": "cpython\\Lib\\test\\test_warnings\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 465,
      "line_range": [
        465
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "764         expected_line = '  ' + linecache.getline(path, line).strip() + '\\n'\n765         assert expected_line\n766         self.assertEqual(second_line, expected_line)\n",
      "filename": "cpython\\Lib\\test\\test_warnings\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 765,
      "line_range": [
        765
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1851             while lst:\n1852                 i = random.randint(0, len(lst) - 1)\n1853                 gc_ctr += 1\n",
      "filename": "cpython\\Lib\\test\\test_weakref.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1852,
      "line_range": [
        1852
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2079 \n2080         assert f1.atexit == True\n2081         f2.atexit = False\n",
      "filename": "cpython\\Lib\\test\\test_weakref.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2080,
      "line_range": [
        2080
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2081         f2.atexit = False\n2082         assert f3.atexit == True\n2083         assert f4.atexit == True\n",
      "filename": "cpython\\Lib\\test\\test_weakref.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2082,
      "line_range": [
        2082
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2082         assert f3.atexit == True\n2083         assert f4.atexit == True\n2084 \n",
      "filename": "cpython\\Lib\\test\\test_weakref.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2083,
      "line_range": [
        2083
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "438     def test_repr(self):\n439         assert repr(self.s) == repr(self.s.data)\n440 \n",
      "filename": "cpython\\Lib\\test\\test_weakset.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 439,
      "line_range": [
        439
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4 import sys\n5 import subprocess\n6 from unittest import mock\n",
      "filename": "cpython\\Lib\\test\\test_webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "134             )\n135             actual = input()\n136         finally:\n",
      "filename": "cpython\\Lib\\test\\test_winconsoleio.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 135,
      "line_range": [
        135
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "3 import copy\n4 import pickle\n5 import unittest\n",
      "filename": "cpython\\Lib\\test\\test_xml_dom_minicompat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "91             pickled = pickle.dumps(node_list, proto)\n92             unpickled = pickle.loads(pickled)\n93             self.assertIsNot(unpickled, node_list)\n",
      "filename": "cpython\\Lib\\test\\test_xml_dom_minicompat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 92,
      "line_range": [
        92
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "99             pickled = pickle.dumps(node_list, proto)\n100             unpickled = pickle.loads(pickled)\n101             self.assertIsNot(unpickled, node_list)\n",
      "filename": "cpython\\Lib\\test\\test_xml_dom_minicompat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 100,
      "line_range": [
        100
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "15 import os\n16 import pickle\n17 import sys\n",
      "filename": "cpython\\Lib\\test\\test_xml_etree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 16,
      "line_range": [
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "124 \n125         from xml.etree import ElementTree\n126         from xml.etree import ElementInclude\n",
      "filename": "cpython\\Lib\\test\\test_xml_etree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 125,
      "line_range": [
        125
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b405-import-xml-etree",
      "test_id": "B405",
      "test_name": "blacklist"
    },
    {
      "code": "161             sys.modules[name] = loader\n162             result = pickle.loads(temp)\n163         except pickle.PicklingError as pe:\n",
      "filename": "cpython\\Lib\\test\\test_xml_etree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 162,
      "line_range": [
        162
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "9 import struct\n10 import subprocess\n11 import sys\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "50         cls.line_gen = [bytes(\"Zipfile test line %d. random float: %f\\n\" %\n51                               (i, random()), \"ascii\")\n52                         for i in range(FIXEDTEST_SIZE)]\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 51,
      "line_range": [
        51
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "170                 while True:\n171                     read_data = zipopen1.read(randint(1, 1024))\n172                     if not read_data:\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 171,
      "line_range": [
        171
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2194         self.assertRaises(TypeError, self.zip.read, \"test.txt\", \"python\")\n2195         self.assertRaises(TypeError, self.zip.open, \"test.txt\", pwd=\"python\")\n2196         self.assertRaises(TypeError, self.zip.extract, \"test.txt\", pwd=\"python\")\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'python'",
      "line_number": 2195,
      "line_range": [
        2195
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "2195         self.assertRaises(TypeError, self.zip.open, \"test.txt\", pwd=\"python\")\n2196         self.assertRaises(TypeError, self.zip.extract, \"test.txt\", pwd=\"python\")\n2197 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'python'",
      "line_number": 2196,
      "line_range": [
        2196
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "2238     def setUpClass(cls):\n2239         datacount = randint(16, 64)*1024 + randint(1, 1024)\n2240         cls.data = b''.join(struct.pack('<f', random()*randint(-1000, 1000))\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2239,
      "line_range": [
        2239
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2238     def setUpClass(cls):\n2239         datacount = randint(16, 64)*1024 + randint(1, 1024)\n2240         cls.data = b''.join(struct.pack('<f', random()*randint(-1000, 1000))\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2239,
      "line_range": [
        2239
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2239         datacount = randint(16, 64)*1024 + randint(1, 1024)\n2240         cls.data = b''.join(struct.pack('<f', random()*randint(-1000, 1000))\n2241                             for i in range(datacount))\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2240,
      "line_range": [
        2240
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2239         datacount = randint(16, 64)*1024 + randint(1, 1024)\n2240         cls.data = b''.join(struct.pack('<f', random()*randint(-1000, 1000))\n2241                             for i in range(datacount))\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2240,
      "line_range": [
        2240
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2312                 while True:\n2313                     read_data = zipopen1.read(randint(1, 1024))\n2314                     if not read_data:\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 2313,
      "line_range": [
        2313
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "2761     def test_execute_zip2(self):\n2762         output = subprocess.check_output([self.exe_zip, sys.executable])\n2763         self.assertIn(b'number in executable: 5', output)\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2762,
      "line_range": [
        2762
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2768     def test_execute_zip64(self):\n2769         output = subprocess.check_output([self.exe_zip64, sys.executable])\n2770         self.assertIn(b'number in executable: 5', output)\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2769,
      "line_range": [
        2769
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2876         root = zipfile.Path(alpharep)\n2877         assert root.is_dir()\n2878         a, b, g = root.iterdir()\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2877,
      "line_range": [
        2877
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2878         a, b, g = root.iterdir()\n2879         assert a.is_file()\n2880         assert b.is_dir()\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2879,
      "line_range": [
        2879
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2879         assert a.is_file()\n2880         assert b.is_dir()\n2881         assert g.is_dir()\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2880,
      "line_range": [
        2880
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2880         assert b.is_dir()\n2881         assert g.is_dir()\n2882         c, f, d = b.iterdir()\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2881,
      "line_range": [
        2881
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2882         c, f, d = b.iterdir()\n2883         assert c.is_file() and f.is_file()\n2884         (e,) = d.iterdir()\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2883,
      "line_range": [
        2883
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2884         (e,) = d.iterdir()\n2885         assert e.is_file()\n2886         (h,) = g.iterdir()\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2885,
      "line_range": [
        2885
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2887         (i,) = h.iterdir()\n2888         assert i.is_file()\n2889 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2888,
      "line_range": [
        2888
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2892         root = zipfile.Path(alpharep)\n2893         assert not root.joinpath('missing.txt').is_file()\n2894 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2893,
      "line_range": [
        2893
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2904         root = zipfile.Path(alpharep)\n2905         assert (root / 'b').is_dir()\n2906         assert (root / 'b/').is_dir()\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2905,
      "line_range": [
        2905
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2905         assert (root / 'b').is_dir()\n2906         assert (root / 'b/').is_dir()\n2907         assert (root / 'g').is_dir()\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2906,
      "line_range": [
        2906
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2906         assert (root / 'b/').is_dir()\n2907         assert (root / 'g').is_dir()\n2908         assert (root / 'g/').is_dir()\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2907,
      "line_range": [
        2907
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2907         assert (root / 'g').is_dir()\n2908         assert (root / 'g/').is_dir()\n2909 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2908,
      "line_range": [
        2908
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2915             data = strm.read()\n2916         assert data == \"content of a\"\n2917 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2916,
      "line_range": [
        2916
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2956         a, b, g = root.iterdir()\n2957         assert a.read_text() == \"content of a\"\n2958         assert a.read_bytes() == b\"content of a\"\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2957,
      "line_range": [
        2957
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2957         assert a.read_text() == \"content of a\"\n2958         assert a.read_bytes() == b\"content of a\"\n2959 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2958,
      "line_range": [
        2958
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2963         a = root.joinpath(\"a.txt\")\n2964         assert a.is_file()\n2965         e = root.joinpath(\"b\").joinpath(\"d\").joinpath(\"e.txt\")\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2964,
      "line_range": [
        2964
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2965         e = root.joinpath(\"b\").joinpath(\"d\").joinpath(\"e.txt\")\n2966         assert e.read_text() == \"content of e\"\n2967 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2966,
      "line_range": [
        2966
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2971         a = root / \"a.txt\"\n2972         assert a.is_file()\n2973         e = root / \"b\" / \"d\" / \"e.txt\"\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2972,
      "line_range": [
        2972
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2973         e = root / \"b\" / \"d\" / \"e.txt\"\n2974         assert e.read_text() == \"content of e\"\n2975 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2974,
      "line_range": [
        2974
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2986         )\n2987         eval(code)\n2988 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 2987,
      "line_range": [
        2987
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3005         root = zipfile.Path(alpharep)\n3006         assert (root / 'a').parent.at == ''\n3007         assert (root / 'a' / 'b').parent.at == 'a/'\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3006,
      "line_range": [
        3006
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3006         assert (root / 'a').parent.at == ''\n3007         assert (root / 'a' / 'b').parent.at == 'a/'\n3008 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3007,
      "line_range": [
        3007
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3011         root = zipfile.Path(alpharep)\n3012         assert (root / 'b').parent.at == ''\n3013         assert (root / 'b/').parent.at == ''\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3012,
      "line_range": [
        3012
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3012         assert (root / 'b').parent.at == ''\n3013         assert (root / 'b/').parent.at == ''\n3014 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3013,
      "line_range": [
        3013
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3017         root = zipfile.Path(alpharep)\n3018         assert (root / 'missing dir/').parent.at == ''\n3019 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3018,
      "line_range": [
        3018
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3029         alpharep.writestr('bar/baz.txt', 'baz')\n3030         assert any(child.name == 'foo.txt' for child in root.iterdir())\n3031         assert (root / 'foo.txt').read_text() == 'foo'\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3030,
      "line_range": [
        3030
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3030         assert any(child.name == 'foo.txt' for child in root.iterdir())\n3031         assert (root / 'foo.txt').read_text() == 'foo'\n3032         (baz,) = (root / 'bar').iterdir()\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3031,
      "line_range": [
        3031
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3032         (baz,) = (root / 'bar').iterdir()\n3033         assert baz.read_text() == 'baz'\n3034 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3033,
      "line_range": [
        3033
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3054         # Check the file iterated all items\n3055         assert entries.count == self.HUGE_ZIPFILE_NUM_ENTRIES\n3056 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3055,
      "line_range": [
        3055
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3074         root = Subclass(alpharep)\n3075         assert isinstance(root / 'b', Subclass)\n3076 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3075,
      "line_range": [
        3075
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3079         root = zipfile.Path(alpharep)\n3080         assert root.filename == pathlib.Path('alpharep.zip')\n3081 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3080,
      "line_range": [
        3080
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3087         root = zipfile.Path(alpharep)\n3088         assert root.name == 'alpharep.zip' == root.filename.name\n3089 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3088,
      "line_range": [
        3088
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3092         root = zipfile.Path(alpharep)\n3093         assert root.parent == pathlib.Path('.')\n3094         root.root.filename = 'foo/bar.zip'\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3093,
      "line_range": [
        3093
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3094         root.root.filename = 'foo/bar.zip'\n3095         assert root.parent == pathlib.Path('foo')\n3096 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3095,
      "line_range": [
        3095
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3111         sub = root / \"b\"\n3112         assert sub.name == \"b\"\n3113         assert sub.parent\n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3112,
      "line_range": [
        3112
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3112         assert sub.name == \"b\"\n3113         assert sub.parent\n3114 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3113,
      "line_range": [
        3113
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3119             file = cls(alpharep).joinpath('some dir').parent\n3120             assert isinstance(file, cls)\n3121 \n",
      "filename": "cpython\\Lib\\test\\test_zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3120,
      "line_range": [
        3120
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "728             # delete TESTMOD, and later tests suffer bogus failures.\n729             os.chmod(TESTMOD, 0o666)\n730             os_helper.unlink(TESTMOD)\n",
      "filename": "cpython\\Lib\\test\\test_zipimport.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0o666 on file (TESTMOD).",
      "line_number": 729,
      "line_range": [
        729
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "5 import copy\n6 import pickle\n7 import random\n",
      "filename": "cpython\\Lib\\test\\test_zlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "486                 # 2.2 called it Random\n487                 gen = random.Random()\n488             except AttributeError:\n",
      "filename": "cpython\\Lib\\test\\test_zlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 487,
      "line_range": [
        487
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "10 import pathlib\n11 import pickle\n12 import re\n",
      "filename": "cpython\\Lib\\test\\test_zoneinfo\\test_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1058             f()\n1059             assert len(cases) > prev_len, \"Function did not add a test case!\"\n1060 \n",
      "filename": "cpython\\Lib\\test\\test_zoneinfo\\test_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1059,
      "line_range": [
        1059
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1407         pkl = pickle.dumps(zi_in)\n1408         zi_rt = pickle.loads(pkl)\n1409 \n",
      "filename": "cpython\\Lib\\test\\test_zoneinfo\\test_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1408,
      "line_range": [
        1408
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1412 \n1413         zi_rt2 = pickle.loads(pkl)\n1414         with self.subTest(test=\"Is unpickled ZoneInfo\"):\n",
      "filename": "cpython\\Lib\\test\\test_zoneinfo\\test_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1413,
      "line_range": [
        1413
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1422         self.klass.clear_cache()  # Induce a cache miss\n1423         zi_rt = pickle.loads(pkl)\n1424         zi_rt2 = pickle.loads(pkl)\n",
      "filename": "cpython\\Lib\\test\\test_zoneinfo\\test_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1423,
      "line_range": [
        1423
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1423         zi_rt = pickle.loads(pkl)\n1424         zi_rt2 = pickle.loads(pkl)\n1425 \n",
      "filename": "cpython\\Lib\\test\\test_zoneinfo\\test_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1424,
      "line_range": [
        1424
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1431         pkl = pickle.dumps(zi_no_cache)\n1432         zi_rt = pickle.loads(pkl)\n1433 \n",
      "filename": "cpython\\Lib\\test\\test_zoneinfo\\test_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1432,
      "line_range": [
        1432
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1436 \n1437         zi_rt2 = pickle.loads(pkl)\n1438         with self.subTest(test=\"Not a second unpickled object\"):\n",
      "filename": "cpython\\Lib\\test\\test_zoneinfo\\test_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1437,
      "line_range": [
        1437
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1471         pkl_0 = pickle.dumps(zi)\n1472         zi_rt_0 = pickle.loads(pkl_0)\n1473         self.assertIs(zi, zi_rt_0)\n",
      "filename": "cpython\\Lib\\test\\test_zoneinfo\\test_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1472,
      "line_range": [
        1472
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1478         pkl_1 = pickle.dumps(zi)\n1479         zi_rt_1 = pickle.loads(pkl_1)\n1480         self.assertIs(zi, zi_rt_1)\n",
      "filename": "cpython\\Lib\\test\\test_zoneinfo\\test_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1479,
      "line_range": [
        1479
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1485         pkl_2 = pickle.dumps(zi)\n1486         zi_rt_2 = pickle.loads(pkl_2)\n1487         self.assertIs(zi, zi_rt_2)\n",
      "filename": "cpython\\Lib\\test\\test_zoneinfo\\test_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1486,
      "line_range": [
        1486
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1870     def _convert_to_v1(self, contents):\n1871         assert contents[0:4] == b\"TZif\", \"Invalid TZif data found!\"\n1872         version = int(contents[4:5])\n",
      "filename": "cpython\\Lib\\test\\test_zoneinfo\\test_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1871,
      "line_range": [
        1871
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1875         header_end = header_start + 24  # 6l == 24 bytes\n1876         assert version >= 2, \"Version 1 file found: no conversion necessary\"\n1877         isutcnt, isstdcnt, leapcnt, timecnt, typecnt, charcnt = struct.unpack(\n",
      "filename": "cpython\\Lib\\test\\test_zoneinfo\\test_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1876,
      "line_range": [
        1876
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1891 \n1892         assert (\n1893             contents[file_size : (file_size + 4)] == b\"TZif\"\n1894         ), \"Version 2 file not truncated at Version 2 header\"\n1895 \n1896         return out\n",
      "filename": "cpython\\Lib\\test\\test_zoneinfo\\test_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1892,
      "line_range": [
        1892,
        1893,
        1894,
        1895
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "47 if hName in ('_md5', '_sha'):\n48     exec('import '+hName)\n49     exec('creatorFunc = '+hName+'.new')\n",
      "filename": "cpython\\Lib\\test\\time_hashlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 48,
      "line_range": [
        48
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "48     exec('import '+hName)\n49     exec('creatorFunc = '+hName+'.new')\n50     print(\"testing speed of old\", hName, \"legacy interface\")\n",
      "filename": "cpython\\Lib\\test\\time_hashlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 49,
      "line_range": [
        49
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "52     import _hashlib\n53     exec('creatorFunc = _hashlib.%s' % sys.argv[2])\n54     print(\"testing speed of _hashlib.%s\" % sys.argv[2], getattr(_hashlib, sys.argv[2]))\n",
      "filename": "cpython\\Lib\\test\\time_hashlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 53,
      "line_range": [
        53
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "56     import _hashlib\n57     exec('creatorFunc = lambda x=_hashlib.new : x(%r)' % sys.argv[2])\n58     print(\"testing speed of _hashlib.new(%r)\" % sys.argv[2])\n",
      "filename": "cpython\\Lib\\test\\time_hashlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 57,
      "line_range": [
        57
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "62 else:\n63     exec(\"creatorFunc = lambda x=hashlib.new : x(%r)\" % hName)\n64     print(\"testing speed of hashlib.new(%r)\" % hName)\n",
      "filename": "cpython\\Lib\\test\\time_hashlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 63,
      "line_range": [
        63
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "464         for line in text.split(\"\\n\"):\n465             assert not line or line.startswith(margin), \\\n466                    \"line = %r, margin = %r\" % (line, margin)\n467 \n",
      "filename": "cpython\\Lib\\textwrap.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 465,
      "line_range": [
        465,
        466
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "650             raise BrokenBarrierError\n651         assert self._state == 0\n652 \n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 651,
      "line_range": [
        651
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "675             raise BrokenBarrierError\n676         assert self._state == 1\n677 \n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 676,
      "line_range": [
        676
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "798         \"\"\"\n799         assert group is None, \"group argument must be None for now\"\n800         if kwargs is None:\n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 799,
      "line_range": [
        799
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "847     def __repr__(self):\n848         assert self._initialized, \"Thread.__init__() was not called\"\n849         status = \"initial\"\n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 848,
      "line_range": [
        848
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "968                     del _active[get_ident()]\n969                 except:\n970                     pass\n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 969,
      "line_range": [
        969
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "990         if lock is not None:\n991             assert not lock.locked()\n992         self._is_stopped = True\n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 991,
      "line_range": [
        991
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1053         if lock is None:  # already determined that the C code is done\n1054             assert self._is_stopped\n1055         elif lock.acquire(block, timeout):\n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1054,
      "line_range": [
        1054
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1066         \"\"\"\n1067         assert self._initialized, \"Thread.__init__() not called\"\n1068         return self._name\n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1067,
      "line_range": [
        1067
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1071     def name(self, name):\n1072         assert self._initialized, \"Thread.__init__() not called\"\n1073         self._name = str(name)\n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1072,
      "line_range": [
        1072
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1083         \"\"\"\n1084         assert self._initialized, \"Thread.__init__() not called\"\n1085         return self._ident\n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1084,
      "line_range": [
        1084
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1095             \"\"\"\n1096             assert self._initialized, \"Thread.__init__() not called\"\n1097             return self._native_id\n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1096,
      "line_range": [
        1096
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1106         \"\"\"\n1107         assert self._initialized, \"Thread.__init__() not called\"\n1108         if self._is_stopped or not self._started.is_set():\n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1107,
      "line_range": [
        1107
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1124         \"\"\"\n1125         assert self._initialized, \"Thread.__init__() not called\"\n1126         return self._daemonic\n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1125,
      "line_range": [
        1125
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1314     def is_alive(self):\n1315         assert not self._is_stopped and self._started.is_set()\n1316         return True\n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1315,
      "line_range": [
        1315
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1318     def join(self, timeout=None):\n1319         assert False, \"cannot join a dummy thread\"\n1320 \n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1319,
      "line_range": [
        1319
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1412     # been released.\n1413     assert tlock is not None\n1414     assert tlock.locked()\n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1413,
      "line_range": [
        1413
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1413     assert tlock is not None\n1414     assert tlock.locked()\n1415     tlock.release()\n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1414,
      "line_range": [
        1414
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1507         _active.update(new_active)\n1508         assert len(_active) == 1\n1509 \n",
      "filename": "cpython\\Lib\\threading.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1508,
      "line_range": [
        1508
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "133         code = compile(src, dummy_src_name, \"exec\")\n134         exec(code, global_ns, local_ns)\n135         self.inner = local_ns[\"inner\"]\n",
      "filename": "cpython\\Lib\\timeit.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 134,
      "line_range": [
        134
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "2321         dir = {'self': self}\n2322         exec('from tkinter import *', dir)\n2323         if os.path.isfile(class_tcl):\n",
      "filename": "cpython\\Lib\\tkinter\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 2322,
      "line_range": [
        2322
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "2325         if os.path.isfile(class_py):\n2326             exec(open(class_py).read(), dir)\n2327         if os.path.isfile(base_tcl):\n",
      "filename": "cpython\\Lib\\tkinter\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 2326,
      "line_range": [
        2326
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "2329         if os.path.isfile(base_py):\n2330             exec(open(base_py).read(), dir)\n2331 \n",
      "filename": "cpython\\Lib\\tkinter\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 2330,
      "line_range": [
        2330
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "54                 w.destroy()\n55             except:\n56                 pass\n",
      "filename": "cpython\\Lib\\tkinter\\commondialog.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 55,
      "line_range": [
        55
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "121                 self._call(\"font\", \"delete\", self.name)\n122         except Exception:\n123             pass\n",
      "filename": "cpython\\Lib\\tkinter\\font.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 122,
      "line_range": [
        122
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "34                 # If that's the case, abort.\n35                 with os.popen('echo $DISPLAY') as pipe:\n36                     display = pipe.read().strip()\n",
      "filename": "cpython\\Lib\\tkinter\\test\\test_tkinter\\test_loadtk.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 35,
      "line_range": [
        35
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "34                 # If that's the case, abort.\n35                 with os.popen('echo $DISPLAY') as pipe:\n36                     display = pipe.read().strip()\n",
      "filename": "cpython\\Lib\\tkinter\\test\\test_tkinter\\test_loadtk.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 35,
      "line_range": [
        35
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "355                 retlist.append(self._nametowidget(name))\n356             except:\n357                 # some of the widgets are unknown e.g. border in LabelFrame\n",
      "filename": "cpython\\Lib\\tkinter\\tix.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 356,
      "line_range": [
        356
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "542                 elif initial == '#':\n543                     assert not token.endswith(\"\\n\")\n544                     yield TokenInfo(COMMENT, token, spos, epos, line)\n",
      "filename": "cpython\\Lib\\tokenize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 543,
      "line_range": [
        543
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "60 import dis\n61 import pickle\n62 from time import monotonic as _time\n",
      "filename": "cpython\\Lib\\trace.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 61,
      "line_range": [
        61
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "173                 with open(self.infile, 'rb') as f:\n174                     counts, calledfuncs, callers = pickle.load(f)\n175                 self.update(self.__class__(counts, calledfuncs, callers))\n",
      "filename": "cpython\\Lib\\trace.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 174,
      "line_range": [
        174
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "449         try:\n450             exec(cmd, globals, locals)\n451         finally:\n",
      "filename": "cpython\\Lib\\trace.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 450,
      "line_range": [
        450
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "5 import os.path\n6 import pickle\n7 \n8 # Import types and functions implemented in C\n9 from _tracemalloc import *\n",
      "filename": "cpython\\Lib\\tracemalloc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 6,
      "line_range": [
        6,
        7,
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "438         with open(filename, \"rb\") as fp:\n439             return pickle.load(fp)\n440 \n",
      "filename": "cpython\\Lib\\tracemalloc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 439,
      "line_range": [
        439
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "187         if value in [\"True\", \"False\", \"None\", \"''\", '\"\"']:\n188             value = eval(value)\n189         else:\n",
      "filename": "cpython\\Lib\\turtle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 188,
      "line_range": [
        188
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "325                 __stringBody % {'method' : method, 'attribute' : toPart}\n326         exec(execString, d)\n327         setattr(fromClass, method, d[method])   ### NEWU!\n",
      "filename": "cpython\\Lib\\turtle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 326,
      "line_range": [
        326
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "656                     fun(x, y)\n657                 except Exception:\n658                     pass\n",
      "filename": "cpython\\Lib\\turtle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 657,
      "line_range": [
        657
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "3836         key = \"_Screen.\"+methodname\n3837         docsdict[key] = eval(key).__doc__\n3838     for methodname in _tg_turtle_functions:\n",
      "filename": "cpython\\Lib\\turtle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3837,
      "line_range": [
        3837
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3839         key = \"Turtle.\"+methodname\n3840         docsdict[key] = eval(key).__doc__\n3841 \n",
      "filename": "cpython\\Lib\\turtle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3840,
      "line_range": [
        3840
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3867 #            eval(key).im_func.__doc__ = docsdict[key]\n3868             eval(key).__doc__ = docsdict[key]\n3869         except Exception:\n",
      "filename": "cpython\\Lib\\turtle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3868,
      "line_range": [
        3868
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3967                                     paramslist=pl1, argslist=pl2)\n3968         exec(defstr, globals())\n3969         globals()[methodname].__doc__ = docrevise(method.__doc__)\n",
      "filename": "cpython\\Lib\\turtle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 3968,
      "line_range": [
        3968
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "135         if darwin:\n136             import subprocess\n137             # Make sure we are the currently activated OS X application\n138             # so that our menu bar appears.\n139             subprocess.run(\n",
      "filename": "cpython\\Lib\\turtledemo\\__main__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 136,
      "line_range": [
        136,
        137,
        138
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "138             # so that our menu bar appears.\n139             subprocess.run(\n140                     [\n141                         'osascript',\n142                         '-e', 'tell application \"System Events\"',\n143                         '-e', 'set frontmost of the first process whose '\n144                               'unix id is {} to true'.format(os.getpid()),\n145                         '-e', 'end tell',\n146                     ],\n147                     stderr=subprocess.DEVNULL,\n148                     stdout=subprocess.DEVNULL,)\n149 \n",
      "filename": "cpython\\Lib\\turtledemo\\__main__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 139,
      "line_range": [
        139,
        140,
        141,
        142,
        143,
        144,
        145,
        146,
        147,
        148
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "138             # so that our menu bar appears.\n139             subprocess.run(\n140                     [\n141                         'osascript',\n142                         '-e', 'tell application \"System Events\"',\n143                         '-e', 'set frontmost of the first process whose '\n144                               'unix id is {} to true'.format(os.getpid()),\n145                         '-e', 'end tell',\n146                     ],\n147                     stderr=subprocess.DEVNULL,\n148                     stdout=subprocess.DEVNULL,)\n149 \n",
      "filename": "cpython\\Lib\\turtledemo\\__main__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 139,
      "line_range": [
        139,
        140,
        141,
        142,
        143,
        144,
        145,
        146,
        147,
        148
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "18 def symRandom(n):\n19     return randrange(-n,n+1)\n20 \n",
      "filename": "cpython\\Lib\\turtledemo\\forest.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 19,
      "line_range": [
        19
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "44                 draw(rules[b], rules)\n45             except:\n46                 pass\n",
      "filename": "cpython\\Lib\\turtledemo\\lindenmayer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 45,
      "line_range": [
        45
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "30 def randomrow():\n31     return random.randint(MINSTICKS, MAXSTICKS)\n32 \n",
      "filename": "cpython\\Lib\\turtledemo\\nim.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 31,
      "line_range": [
        31
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "45     while True:\n46         z = random.randint(0,2)\n47         if state[z] > (m > 1):\n",
      "filename": "cpython\\Lib\\turtledemo\\nim.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 46,
      "line_range": [
        46
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "48             break\n49     rand = random.randint(m > 1, state[z]-1)\n50     return z, rand\n",
      "filename": "cpython\\Lib\\turtledemo\\nim.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 49,
      "line_range": [
        49
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "224         params = new_params\n225         assert not all_params, all_params\n226     return tuple(params)\n",
      "filename": "cpython\\Lib\\typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 225,
      "line_range": [
        225
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "516             type_ =_type_check(\n517                 eval(self.__forward_code__, globalns, localns),\n518                 \"Forward references must evaluate to types.\",\n",
      "filename": "cpython\\Lib\\typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 517,
      "line_range": [
        517
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "838     def __repr__(self):\n839         assert self._name == 'Callable'\n840         if len(self.__args__) == 2 and self.__args__[0] is Ellipsis:\n",
      "filename": "cpython\\Lib\\typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 839,
      "line_range": [
        839
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1216     def copy_with(self, params):\n1217         assert len(params) == 1\n1218         new_type = params[0]\n",
      "filename": "cpython\\Lib\\typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1217,
      "line_range": [
        1217
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1345     for name, value in zip(arg_names[pos_offset:], defaults):\n1346         assert name not in res\n1347         res[name] = value\n",
      "filename": "cpython\\Lib\\typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1346,
      "line_range": [
        1346
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1821     def __new__(cls, typename, bases, ns):\n1822         assert bases[0] is _NamedTuple\n1823         types = ns.get('__annotations__', {})\n",
      "filename": "cpython\\Lib\\typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1822,
      "line_range": [
        1822
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1884         raise TypeError(\"Multiple inheritance with NamedTuple is not supported\")\n1885     assert bases[0] is NamedTuple\n1886     return (_NamedTuple,)\n",
      "filename": "cpython\\Lib\\typing.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1885,
      "line_range": [
        1885
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "74     def _callAsync(self, func, /, *args, **kwargs):\n75         assert self._asyncioTestLoop is not None\n76         ret = func(*args, **kwargs)\n",
      "filename": "cpython\\Lib\\unittest\\async_case.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 75,
      "line_range": [
        75
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "76         ret = func(*args, **kwargs)\n77         assert inspect.isawaitable(ret)\n78         fut = self._asyncioTestLoop.create_future()\n",
      "filename": "cpython\\Lib\\unittest\\async_case.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 77,
      "line_range": [
        77
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "82     def _callMaybeAsync(self, func, /, *args, **kwargs):\n83         assert self._asyncioTestLoop is not None\n84         ret = func(*args, **kwargs)\n",
      "filename": "cpython\\Lib\\unittest\\async_case.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 83,
      "line_range": [
        83
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "111     def _setupAsyncioLoop(self):\n112         assert self._asyncioTestLoop is None\n113         loop = asyncio.new_event_loop()\n",
      "filename": "cpython\\Lib\\unittest\\async_case.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 112,
      "line_range": [
        112
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "121     def _tearDownAsyncioLoop(self):\n122         assert self._asyncioTestLoop is not None\n123         loop = self._asyncioTestLoop\n",
      "filename": "cpython\\Lib\\unittest\\async_case.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 122,
      "line_range": [
        122
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1307         if isinstance(expected_regex, (str, bytes)):\n1308             assert expected_regex, \"expected_regex must not be empty.\"\n1309             expected_regex = re.compile(expected_regex)\n",
      "filename": "cpython\\Lib\\unittest\\case.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1308,
      "line_range": [
        1308
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "369         _relpath = os.path.relpath(path, self._top_level_dir)\n370         assert not os.path.isabs(_relpath), \"Path must be within the project\"\n371         assert not _relpath.startswith('..'), \"Path must be within the project\"\n",
      "filename": "cpython\\Lib\\unittest\\loader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 370,
      "line_range": [
        370
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "370         assert not os.path.isabs(_relpath), \"Path must be within the project\"\n371         assert not _relpath.startswith('..'), \"Path must be within the project\"\n372 \n373         name = _relpath.replace(os.path.sep, '.')\n",
      "filename": "cpython\\Lib\\unittest\\loader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 371,
      "line_range": [
        371,
        372
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "189     return mock(*args, **kwargs)\"\"\" % name\n190     exec (src, context)\n191     funcopy = context[name]\n",
      "filename": "cpython\\Lib\\unittest\\mock.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 190,
      "line_range": [
        190
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1044         for _call in self:\n1045             assert len(item) == len(_call)\n1046             if all([\n",
      "filename": "cpython\\Lib\\unittest\\mock.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1045,
      "line_range": [
        1045
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3 import pprint\n4 import pickle\n5 import re\n",
      "filename": "cpython\\Lib\\unittest\\test\\test_case.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1819             pickled_test = pickle.dumps(test, protocol=protocol)\n1820             unpickled_test = pickle.loads(pickled_test)\n1821             self.assertEqual(test, unpickled_test)\n",
      "filename": "cpython\\Lib\\unittest\\test\\test_case.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 1820,
      "line_range": [
        1820
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "5 import types\n6 import pickle\n7 from test import support\n",
      "filename": "cpython\\Lib\\unittest\\test\\test_discovery.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "529         for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n530             pickle.loads(pickle.dumps(test, proto))\n531 \n",
      "filename": "cpython\\Lib\\unittest\\test\\test_discovery.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 530,
      "line_range": [
        530
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "552         for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n553             pickle.loads(pickle.dumps(suite, proto))\n554 \n",
      "filename": "cpython\\Lib\\unittest\\test\\test_discovery.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 553,
      "line_range": [
        553
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "579         for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n580             pickle.loads(pickle.dumps(suite, proto))\n581 \n",
      "filename": "cpython\\Lib\\unittest\\test\\test_discovery.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 580,
      "line_range": [
        580
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "4 import sys\n5 import subprocess\n6 from test import support\n",
      "filename": "cpython\\Lib\\unittest\\test\\test_program.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "59         def testPass(self):\n60             assert True\n61         def testFail(self):\n",
      "filename": "cpython\\Lib\\unittest\\test\\test_program.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 60,
      "line_range": [
        60
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "61         def testFail(self):\n62             assert False\n63 \n",
      "filename": "cpython\\Lib\\unittest\\test\\test_program.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 62,
      "line_range": [
        62
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "421         def run_unittest(args):\n422             p = subprocess.Popen([sys.executable, '-m', 'unittest'] + args,\n423                 stdout=subprocess.DEVNULL, stderr=subprocess.PIPE, cwd=os.path.dirname(__file__))\n424             with p:\n",
      "filename": "cpython\\Lib\\unittest\\test\\test_program.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 422,
      "line_range": [
        422,
        423
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3 import sys\n4 import pickle\n5 import subprocess\n",
      "filename": "cpython\\Lib\\unittest\\test\\test_runner.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "4 import pickle\n5 import subprocess\n6 \n7 import unittest\n",
      "filename": "cpython\\Lib\\unittest\\test\\test_runner.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 5,
      "line_range": [
        5,
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "919             s = pickle.dumps(runner, protocol)\n920             obj = pickle.loads(s)\n921             # StringIO objects never compare equal, a cheap test instead.\n",
      "filename": "cpython\\Lib\\unittest\\test\\test_runner.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 920,
      "line_range": [
        920
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "951         # no args -> all the warnings are printed, unittest warnings only once\n952         p = subprocess.Popen([sys.executable, '-E', '_test_warnings.py'], **opts)\n953         with p:\n",
      "filename": "cpython\\Lib\\unittest\\test\\test_runner.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 952,
      "line_range": [
        952
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "973         for args in args_list:\n974             p = subprocess.Popen(args, **opts)\n975             with p:\n",
      "filename": "cpython\\Lib\\unittest\\test\\test_runner.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 974,
      "line_range": [
        974
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "982         #                                     unittest warnings only once\n983         p = subprocess.Popen([sys.executable, '_test_warnings.py', 'always'],\n984                              **opts)\n985         with p:\n",
      "filename": "cpython\\Lib\\unittest\\test\\test_runner.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 983,
      "line_range": [
        983,
        984
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "49         # in Python 3\n50         exec(\"from unittest.mock import *\")\n51 \n",
      "filename": "cpython\\Lib\\unittest\\test\\testmock\\testmock.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 50,
      "line_range": [
        50
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "2 import copy\n3 import pickle\n4 from unittest.mock import sentinel, DEFAULT\n",
      "filename": "cpython\\Lib\\unittest\\test\\testmock\\testsentinel.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "31                 pickled = pickle.dumps(sentinel.whatever, proto)\n32                 unpickled = pickle.loads(pickled)\n33                 self.assertIs(unpickled, sentinel.whatever)\n",
      "filename": "cpython\\Lib\\unittest\\test\\testmock\\testsentinel.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 32,
      "line_range": [
        32
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "15                 _PLACEHOLDER_LEN + _MIN_END_LEN)\n16 assert _MIN_DIFF_LEN >= 0\n17 \n18 def _shorten(s, prefixlen, suffixlen):\n",
      "filename": "cpython\\Lib\\unittest\\util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 16,
      "line_range": [
        16,
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "35     if common_len > _MIN_COMMON_LEN:\n36         assert _MIN_BEGIN_LEN + _PLACEHOLDER_LEN + _MIN_COMMON_LEN + \\\n37                (maxlen - prefixlen) < _MAX_LENGTH\n38         prefix = _shorten(prefix, _MIN_BEGIN_LEN, common_len)\n",
      "filename": "cpython\\Lib\\unittest\\util.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 36,
      "line_range": [
        36,
        37
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "791             proxies = getproxies()\n792         assert hasattr(proxies, 'keys'), \"proxies must be a mapping\"\n793         self.proxies = proxies\n",
      "filename": "cpython\\Lib\\urllib\\request.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 792,
      "line_range": [
        792
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1136         b = s.encode(\"ascii\") + _randombytes(8)\n1137         dig = hashlib.sha1(b).hexdigest()\n1138         return dig[:16]\n",
      "filename": "cpython\\Lib\\urllib\\request.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 1137,
      "line_range": [
        1137
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "1204         if algorithm == 'MD5':\n1205             H = lambda x: hashlib.md5(x.encode(\"ascii\")).hexdigest()\n1206         elif algorithm == 'SHA':\n",
      "filename": "cpython\\Lib\\urllib\\request.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 1205,
      "line_range": [
        1205
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "1206         elif algorithm == 'SHA':\n1207             H = lambda x: hashlib.sha1(x.encode(\"ascii\")).hexdigest()\n1208         # XXX MD5-sess\n",
      "filename": "cpython\\Lib\\urllib\\request.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 1207,
      "line_range": [
        1207
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "1526     def ftp_open(self, req):\n1527         import ftplib\n1528         import mimetypes\n",
      "filename": "cpython\\Lib\\urllib\\request.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "A FTP-related module is being imported.  FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 1527,
      "line_range": [
        1527
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b402-import-ftplib",
      "test_id": "B402",
      "test_name": "blacklist"
    },
    {
      "code": "1707             proxies = getproxies()\n1708         assert hasattr(proxies, 'keys'), \"proxies must be a mapping\"\n1709         self.proxies = proxies\n",
      "filename": "cpython\\Lib\\urllib\\request.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1708,
      "line_range": [
        1708
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1984         def _https_connection(self, host):\n1985             return http.client.HTTPSConnection(host,\n1986                                            key_file=self.key_file,\n1987                                            cert_file=self.cert_file)\n1988 \n",
      "filename": "cpython\\Lib\\urllib\\request.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1985,
      "line_range": [
        1985,
        1986,
        1987
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "2049         if not port:\n2050             import ftplib\n2051             port = ftplib.FTP_PORT\n",
      "filename": "cpython\\Lib\\urllib\\request.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "A FTP-related module is being imported.  FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 2050,
      "line_range": [
        2050
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b402-import-ftplib",
      "test_id": "B402",
      "test_name": "blacklist"
    },
    {
      "code": "2336         try:\n2337             user = input(\"Enter username for %s at %s: \" % (realm, host))\n2338             passwd = getpass.getpass(\"Enter password for %s in %s at %s: \" %\n",
      "filename": "cpython\\Lib\\urllib\\request.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 2337,
      "line_range": [
        2337
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "2371     if _ftperrors is None:\n2372         import ftplib\n2373         _ftperrors = ftplib.all_errors\n",
      "filename": "cpython\\Lib\\urllib\\request.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "A FTP-related module is being imported.  FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 2372,
      "line_range": [
        2372
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b402-import-ftplib",
      "test_id": "B402",
      "test_name": "blacklist"
    },
    {
      "code": "2406     def init(self):\n2407         import ftplib\n2408         self.busy = 0\n",
      "filename": "cpython\\Lib\\urllib\\request.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "A FTP-related module is being imported.  FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 2407,
      "line_range": [
        2407
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b402-import-ftplib",
      "test_id": "B402",
      "test_name": "blacklist"
    },
    {
      "code": "2408         self.busy = 0\n2409         self.ftp = ftplib.FTP()\n2410         self.ftp.connect(self.host, self.port, self.timeout)\n",
      "filename": "cpython\\Lib\\urllib\\request.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 2409,
      "line_range": [
        2409
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "2415     def retrfile(self, file, type):\n2416         import ftplib\n2417         self.endtransfer()\n",
      "filename": "cpython\\Lib\\urllib\\request.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "A FTP-related module is being imported.  FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 2416,
      "line_range": [
        2416
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b402-import-ftplib",
      "test_id": "B402",
      "test_name": "blacklist"
    },
    {
      "code": "61         try:\n62             f = urllib.request.urlopen(self.url)\n63         except urllib.error.HTTPError as err:\n",
      "filename": "cpython\\Lib\\urllib\\robotparser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 62,
      "line_range": [
        62
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "186                 raise ValueError('bytes is not a 16-char string')\n187             assert isinstance(bytes, bytes_), repr(bytes)\n188             int = int_.from_bytes(bytes, byteorder='big')\n",
      "filename": "cpython\\Lib\\uuid.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 187,
      "line_range": [
        187
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "359 def _get_command_stdout(command, *args):\n360     import io, os, shutil, subprocess\n361 \n362     try:\n",
      "filename": "cpython\\Lib\\uuid.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 360,
      "line_range": [
        360,
        361
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "372         env['LC_ALL'] = 'C'\n373         proc = subprocess.Popen((executable,) + args,\n374                                 stdout=subprocess.PIPE,\n375                                 stderr=subprocess.DEVNULL,\n376                                 env=env)\n377         if not proc:\n",
      "filename": "cpython\\Lib\\uuid.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 373,
      "line_range": [
        373,
        374,
        375,
        376
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "656             _node = getter()\n657         except:\n658             continue\n",
      "filename": "cpython\\Lib\\uuid.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Continue detected.",
      "line_number": 657,
      "line_range": [
        657
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b112_try_except_continue.html",
      "test_id": "B112",
      "test_name": "try_except_continue"
    },
    {
      "code": "660             return _node\n661     assert False, '_random_getnode() returned invalid value: {}'.format(_node)\n662 \n",
      "filename": "cpython\\Lib\\uuid.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 661,
      "line_range": [
        661
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "706     from hashlib import md5\n707     digest = md5(\n708         namespace.bytes + bytes(name, \"utf-8\"),\n709         usedforsecurity=False\n710     ).digest()\n",
      "filename": "cpython\\Lib\\uuid.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 707,
      "line_range": [
        707,
        708,
        709
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "719     from hashlib import sha1\n720     hash = sha1(namespace.bytes + bytes(name, \"utf-8\")).digest()\n721     return UUID(bytes=hash[:16], version=5)\n",
      "filename": "cpython\\Lib\\uuid.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 720,
      "line_range": [
        720
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "9 import shutil\n10 import subprocess\n11 import sys\n",
      "filename": "cpython\\Lib\\venv\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "177                         if relative_symlinks_ok:\n178                             assert os.path.dirname(src) == os.path.dirname(dst)\n179                             os.symlink(os.path.basename(src), dst)\n",
      "filename": "cpython\\Lib\\venv\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 178,
      "line_range": [
        178
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "195                     if relative_symlinks_ok:\n196                         assert os.path.dirname(src) == os.path.dirname(dst)\n197                         os.symlink(os.path.basename(src), dst)\n",
      "filename": "cpython\\Lib\\venv\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 196,
      "line_range": [
        196
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "244             if not os.path.islink(path):\n245                 os.chmod(path, 0o755)\n246             for suffix in ('python', 'python3', f'python3.{sys.version_info[1]}'):\n",
      "filename": "cpython\\Lib\\venv\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Chmod setting a permissive mask 0o755 on file (path).",
      "line_number": 245,
      "line_range": [
        245
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "252                     if not os.path.islink(path):\n253                         os.chmod(path, 0o755)\n254         else:\n",
      "filename": "cpython\\Lib\\venv\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Chmod setting a permissive mask 0o755 on file (path).",
      "line_number": 253,
      "line_range": [
        253
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "297                                                     '--default-pip']\n298         subprocess.check_output(cmd, stderr=subprocess.STDOUT)\n299 \n",
      "filename": "cpython\\Lib\\venv\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 298,
      "line_range": [
        298
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "402         cmd.extend(CORE_VENV_DEPS)\n403         subprocess.check_call(cmd)\n404 \n",
      "filename": "cpython\\Lib\\venv\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 403,
      "line_range": [
        403
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "141     \"\"\"\n142     assert action in (\"error\", \"ignore\", \"always\", \"default\", \"module\",\n143                       \"once\"), \"invalid action: %r\" % (action,)\n144     assert isinstance(message, str), \"message must be a string\"\n",
      "filename": "cpython\\Lib\\warnings.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 142,
      "line_range": [
        142,
        143
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "143                       \"once\"), \"invalid action: %r\" % (action,)\n144     assert isinstance(message, str), \"message must be a string\"\n145     assert isinstance(category, type), \"category must be a class\"\n",
      "filename": "cpython\\Lib\\warnings.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 144,
      "line_range": [
        144
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "144     assert isinstance(message, str), \"message must be a string\"\n145     assert isinstance(category, type), \"category must be a class\"\n146     assert issubclass(category, Warning), \"category must be a Warning subclass\"\n",
      "filename": "cpython\\Lib\\warnings.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 145,
      "line_range": [
        145
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "145     assert isinstance(category, type), \"category must be a class\"\n146     assert issubclass(category, Warning), \"category must be a Warning subclass\"\n147     assert isinstance(module, str), \"module must be a string\"\n",
      "filename": "cpython\\Lib\\warnings.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 146,
      "line_range": [
        146
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "146     assert issubclass(category, Warning), \"category must be a Warning subclass\"\n147     assert isinstance(module, str), \"module must be a string\"\n148     assert isinstance(lineno, int) and lineno >= 0, \\\n",
      "filename": "cpython\\Lib\\warnings.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 147,
      "line_range": [
        147
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "147     assert isinstance(module, str), \"module must be a string\"\n148     assert isinstance(lineno, int) and lineno >= 0, \\\n149            \"lineno must be an int >= 0\"\n150 \n151     if message or module:\n",
      "filename": "cpython\\Lib\\warnings.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 148,
      "line_range": [
        148,
        149,
        150
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "174     \"\"\"\n175     assert action in (\"error\", \"ignore\", \"always\", \"default\", \"module\",\n176                       \"once\"), \"invalid action: %r\" % (action,)\n177     assert isinstance(lineno, int) and lineno >= 0, \\\n",
      "filename": "cpython\\Lib\\warnings.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 175,
      "line_range": [
        175,
        176
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "176                       \"once\"), \"invalid action: %r\" % (action,)\n177     assert isinstance(lineno, int) and lineno >= 0, \\\n178            \"lineno must be an int >= 0\"\n179     _add_filter(action, None, category, None, lineno, append=append)\n",
      "filename": "cpython\\Lib\\warnings.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 177,
      "line_range": [
        177,
        178
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "469     def _write_header(self, initlength):\n470         assert not self._headerwritten\n471         self._file.write(b'RIFF')\n",
      "filename": "cpython\\Lib\\wave.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 470,
      "line_range": [
        470
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "490     def _patchheader(self):\n491         assert self._headerwritten\n492         if self._datawritten == self._datalength:\n",
      "filename": "cpython\\Lib\\wave.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 491,
      "line_range": [
        491
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "658                         sys.excepthook(*sys.exc_info())\n659                     assert f not in cls._registry\n660         finally:\n",
      "filename": "cpython\\Lib\\weakref.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 659,
      "line_range": [
        659
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "8 import sys\n9 import subprocess\n10 import threading\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "177             if sys.platform[:3] == 'win':\n178                 p = subprocess.Popen(cmdline)\n179             else:\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 178,
      "line_range": [
        178
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "179             else:\n180                 p = subprocess.Popen(cmdline, close_fds=True)\n181             return not p.wait()\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 180,
      "line_range": [
        180
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "195             if sys.platform[:3] == 'win':\n196                 p = subprocess.Popen(cmdline)\n197             else:\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 196,
      "line_range": [
        196
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "197             else:\n198                 p = subprocess.Popen(cmdline, close_fds=True,\n199                                      start_new_session=True)\n200             return (p.poll() is None)\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 198,
      "line_range": [
        198,
        199
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "236             inout = None\n237         p = subprocess.Popen(cmdline, close_fds=True, stdin=inout,\n238                              stdout=(self.redirect_stdout and inout or None),\n239                              stderr=inout, start_new_session=True)\n240         if remote:\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 237,
      "line_range": [
        237,
        238,
        239
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "368         try:\n369             p = subprocess.Popen([\"kfmclient\", action, url],\n370                                  close_fds=True, stdin=devnull,\n371                                  stdout=devnull, stderr=devnull)\n372         except OSError:\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 369,
      "line_range": [
        369,
        370,
        371
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "368         try:\n369             p = subprocess.Popen([\"kfmclient\", action, url],\n370                                  close_fds=True, stdin=devnull,\n371                                  stdout=devnull, stderr=devnull)\n372         except OSError:\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 369,
      "line_range": [
        369,
        370,
        371
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "380         try:\n381             p = subprocess.Popen([\"konqueror\", \"--silent\", url],\n382                                  close_fds=True, stdin=devnull,\n383                                  stdout=devnull, stderr=devnull,\n384                                  start_new_session=True)\n385         except OSError:\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 381,
      "line_range": [
        381,
        382,
        383,
        384
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "380         try:\n381             p = subprocess.Popen([\"konqueror\", \"--silent\", url],\n382                                  close_fds=True, stdin=devnull,\n383                                  stdout=devnull, stderr=devnull,\n384                                  start_new_session=True)\n385         except OSError:\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 381,
      "line_range": [
        381,
        382,
        383,
        384
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "393         try:\n394             p = subprocess.Popen([\"kfm\", \"-d\", url],\n395                                  close_fds=True, stdin=devnull,\n396                                  stdout=devnull, stderr=devnull,\n397                                  start_new_session=True)\n398         except OSError:\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 394,
      "line_range": [
        394,
        395,
        396,
        397
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "393         try:\n394             p = subprocess.Popen([\"kfm\", \"-d\", url],\n395                                  close_fds=True, stdin=devnull,\n396                                  stdout=devnull, stderr=devnull,\n397                                  start_new_session=True)\n398         except OSError:\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 394,
      "line_range": [
        394,
        395,
        396,
        397
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "550                 cmd = \"xdg-settings get default-web-browser\".split()\n551                 raw_result = subprocess.check_output(cmd, stderr=subprocess.DEVNULL)\n552                 result = raw_result.decode().strip()\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 551,
      "line_range": [
        551
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "602             try:\n603                 os.startfile(url)\n604             except OSError:\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 603,
      "line_range": [
        603
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "631             sys.audit(\"webbrowser.open\", url)\n632             assert \"'\" not in url\n633             # hack for local urls\n634             if not ':' in url:\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 632,
      "line_range": [
        632,
        633
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "655             # Open pipe to AppleScript through osascript command\n656             osapipe = os.popen(\"osascript\", \"w\")\n657             if osapipe is None:\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 656,
      "line_range": [
        656
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "655             # Open pipe to AppleScript through osascript command\n656             osapipe = os.popen(\"osascript\", \"w\")\n657             if osapipe is None:\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 656,
      "line_range": [
        656
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "678 \n679             osapipe = os.popen(\"osascript\", \"w\")\n680             if osapipe is None:\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 679,
      "line_range": [
        679
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "678 \n679             osapipe = os.popen(\"osascript\", \"w\")\n680             if osapipe is None:\n",
      "filename": "cpython\\Lib\\webbrowser.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 679,
      "line_range": [
        679
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "240         status = self._convert_string_type(status, \"Status\")\n241         assert len(status)>=4,\"Status must be at least 4 characters\"\n242         assert status[:3].isdigit(), \"Status message must begin w/3-digit code\"\n",
      "filename": "cpython\\Lib\\wsgiref\\handlers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 241,
      "line_range": [
        241
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "241         assert len(status)>=4,\"Status must be at least 4 characters\"\n242         assert status[:3].isdigit(), \"Status message must begin w/3-digit code\"\n243         assert status[3]==\" \", \"Status message must have a space after code\"\n",
      "filename": "cpython\\Lib\\wsgiref\\handlers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 242,
      "line_range": [
        242
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "242         assert status[:3].isdigit(), \"Status message must begin w/3-digit code\"\n243         assert status[3]==\" \", \"Status message must have a space after code\"\n244 \n245         if __debug__:\n",
      "filename": "cpython\\Lib\\wsgiref\\handlers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 243,
      "line_range": [
        243,
        244
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "248                 val = self._convert_string_type(val, \"Header value\")\n249                 assert not is_hop_by_hop(name),\\\n250                        f\"Hop-by-hop header, '{name}: {val}', not allowed\"\n251 \n",
      "filename": "cpython\\Lib\\wsgiref\\handlers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 249,
      "line_range": [
        249,
        250
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "278 \n279         assert type(data) is bytes, \\\n280             \"write() argument must be a bytes instance\"\n281 \n282         if not self.status:\n",
      "filename": "cpython\\Lib\\wsgiref\\handlers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 279,
      "line_range": [
        279,
        280,
        281
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "74             dom = getDOMImplementation(name = creator)\n75         except Exception: # typically ImportError, or AttributeError\n76             continue\n",
      "filename": "cpython\\Lib\\xml\\dom\\domreg.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Continue detected.",
      "line_number": 75,
      "line_range": [
        75
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b112_try_except_continue.html",
      "test_id": "B112",
      "test_name": "try_except_continue"
    },
    {
      "code": "29 \n30 from xml.dom import xmlbuilder, minidom, Node\n31 from xml.dom import EMPTY_NAMESPACE, EMPTY_PREFIX, XMLNS_NAMESPACE\n",
      "filename": "cpython\\Lib\\xml\\dom\\expatbuilder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 30,
      "line_range": [
        30
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b408-import-xml-minidom",
      "test_id": "B408",
      "test_name": "blacklist"
    },
    {
      "code": "32 from xml.parsers import expat\n33 from xml.dom.minidom import _append_child, _set_attribute_node\n34 from xml.dom.NodeFilter import NodeFilter\n",
      "filename": "cpython\\Lib\\xml\\dom\\expatbuilder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using _append_child to parse untrusted XML data is known to be vulnerable to XML attacks. Replace _append_child with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 33,
      "line_range": [
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b408-import-xml-minidom",
      "test_id": "B408",
      "test_name": "blacklist"
    },
    {
      "code": "114 def _parse_ns_name(builder, name):\n115     assert ' ' in name\n116     parts = name.split(' ')\n",
      "filename": "cpython\\Lib\\xml\\dom\\expatbuilder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 115,
      "line_range": [
        115
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "429         else:\n430             assert info._model is None\n431             info._model = model\n",
      "filename": "cpython\\Lib\\xml\\dom\\expatbuilder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 430,
      "line_range": [
        430
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "792                 uri, localname, prefix, qname = _parse_ns_name(self, name)\n793                 assert (curNode.namespaceURI == uri\n794                         and curNode.localName == localname\n795                         and curNode.prefix == prefix), \\\n796                         \"element stack messed up! (namespace)\"\n797             else:\n",
      "filename": "cpython\\Lib\\xml\\dom\\expatbuilder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 793,
      "line_range": [
        793,
        794,
        795,
        796
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "797             else:\n798                 assert curNode.nodeName == name, \\\n799                        \"element stack messed up - bad nodeName\"\n800                 assert curNode.namespaceURI == EMPTY_NAMESPACE, \\\n",
      "filename": "cpython\\Lib\\xml\\dom\\expatbuilder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 798,
      "line_range": [
        798,
        799
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "799                        \"element stack messed up - bad nodeName\"\n800                 assert curNode.namespaceURI == EMPTY_NAMESPACE, \\\n801                        \"element stack messed up - bad namespaceURI\"\n802             self.curNode = curNode.parentNode\n",
      "filename": "cpython\\Lib\\xml\\dom\\expatbuilder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 800,
      "line_range": [
        800,
        801
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "105             \"attempt to modify read-only attribute \" + repr(name))\n106     assert not hasattr(klass, \"_set_\" + name), \\\n107            \"expected not to find _set_\" + name\n108     prop = property(get, set, doc=doc)\n",
      "filename": "cpython\\Lib\\xml\\dom\\minicompat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 106,
      "line_range": [
        106,
        107
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1658             childclone = _clone_node(n, deep, clone)\n1659             assert childclone.ownerDocument.isSameNode(clone)\n1660             clone.childNodes.append(childclone)\n",
      "filename": "cpython\\Lib\\xml\\dom\\minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1659,
      "line_range": [
        1659
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1661             if childclone.nodeType == Node.DOCUMENT_NODE:\n1662                 assert clone.documentElement is None\n1663             elif childclone.nodeType == Node.DOCUMENT_TYPE_NODE:\n",
      "filename": "cpython\\Lib\\xml\\dom\\minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1662,
      "line_range": [
        1662
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1663             elif childclone.nodeType == Node.DOCUMENT_TYPE_NODE:\n1664                 assert clone.doctype is None\n1665                 clone.doctype = childclone\n",
      "filename": "cpython\\Lib\\xml\\dom\\minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1664,
      "line_range": [
        1664
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1930     elif node.nodeType == Node.DOCUMENT_TYPE_NODE:\n1931         assert node.ownerDocument is not newOwnerDocument\n1932         operation = xml.dom.UserDataHandler.NODE_IMPORTED\n",
      "filename": "cpython\\Lib\\xml\\dom\\minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1931,
      "line_range": [
        1931
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1986     if parser is None and not bufsize:\n1987         from xml.dom import expatbuilder\n1988         return expatbuilder.parse(file)\n",
      "filename": "cpython\\Lib\\xml\\dom\\minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using expatbuilder to parse untrusted XML data is known to be vulnerable to XML attacks. Replace expatbuilder with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 1987,
      "line_range": [
        1987
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b407-import-xml-expat",
      "test_id": "B407",
      "test_name": "blacklist"
    },
    {
      "code": "1987         from xml.dom import expatbuilder\n1988         return expatbuilder.parse(file)\n1989     else:\n",
      "filename": "cpython\\Lib\\xml\\dom\\minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.expatbuilder.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.expatbuilder.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1988,
      "line_range": [
        1988
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-expatbuilder",
      "test_id": "B316",
      "test_name": "blacklist"
    },
    {
      "code": "1989     else:\n1990         from xml.dom import pulldom\n1991         return _do_pulldom_parse(pulldom.parse, (file,),\n",
      "filename": "cpython\\Lib\\xml\\dom\\minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using pulldom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace pulldom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 1990,
      "line_range": [
        1990
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b409-import-xml-pulldom",
      "test_id": "B409",
      "test_name": "blacklist"
    },
    {
      "code": "1996     if parser is None:\n1997         from xml.dom import expatbuilder\n1998         return expatbuilder.parseString(string)\n",
      "filename": "cpython\\Lib\\xml\\dom\\minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using expatbuilder to parse untrusted XML data is known to be vulnerable to XML attacks. Replace expatbuilder with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 1997,
      "line_range": [
        1997
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b407-import-xml-expat",
      "test_id": "B407",
      "test_name": "blacklist"
    },
    {
      "code": "1997         from xml.dom import expatbuilder\n1998         return expatbuilder.parseString(string)\n1999     else:\n",
      "filename": "cpython\\Lib\\xml\\dom\\minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.expatbuilder.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.expatbuilder.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 1998,
      "line_range": [
        1998
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatbuilder",
      "test_id": "B316",
      "test_name": "blacklist"
    },
    {
      "code": "1999     else:\n2000         from xml.dom import pulldom\n2001         return _do_pulldom_parse(pulldom.parseString, (string,),\n",
      "filename": "cpython\\Lib\\xml\\dom\\minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using pulldom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace pulldom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 2000,
      "line_range": [
        2000
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b409-import-xml-pulldom",
      "test_id": "B409",
      "test_name": "blacklist"
    },
    {
      "code": "1 import xml.sax\n2 import xml.sax.handler\n3 \n",
      "filename": "cpython\\Lib\\xml\\dom\\pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.sax to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "1 import xml.sax\n2 import xml.sax.handler\n3 \n4 START_ELEMENT = \"START_ELEMENT\"\n",
      "filename": "cpython\\Lib\\xml\\dom\\pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.sax.handler to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.handler with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 2,
      "line_range": [
        2,
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "160         if self.documentFactory is None:\n161             import xml.dom.minidom\n162             self.documentFactory = xml.dom.minidom.Document.implementation\n",
      "filename": "cpython\\Lib\\xml\\dom\\pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.dom.minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 161,
      "line_range": [
        161
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b408-import-xml-minidom",
      "test_id": "B408",
      "test_name": "blacklist"
    },
    {
      "code": "338     if not parser:\n339         parser = xml.sax.make_parser()\n340     return DOMEventStream(stream, parser, bufsize)\n",
      "filename": "cpython\\Lib\\xml\\dom\\pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 339,
      "line_range": [
        339
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "347     if not parser:\n348         parser = xml.sax.make_parser()\n349     return DOMEventStream(buf, parser, bufsize)\n",
      "filename": "cpython\\Lib\\xml\\dom\\pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 348,
      "line_range": [
        348
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "193             import urllib.request\n194             fp = urllib.request.urlopen(input.systemId)\n195         return self._parse_bytestream(fp, options)\n",
      "filename": "cpython\\Lib\\xml\\dom\\xmlbuilder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 194,
      "line_range": [
        194
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "202     def _parse_bytestream(self, stream, options):\n203         import xml.dom.expatbuilder\n204         builder = xml.dom.expatbuilder.makeBuilder(options)\n",
      "filename": "cpython\\Lib\\xml\\dom\\xmlbuilder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.dom.expatbuilder to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.expatbuilder with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 203,
      "line_range": [
        203
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b407-import-xml-expat",
      "test_id": "B407",
      "test_name": "blacklist"
    },
    {
      "code": "215     def resolveEntity(self, publicId, systemId):\n216         assert systemId is not None\n217         source = DOMInputSource()\n",
      "filename": "cpython\\Lib\\xml\\dom\\xmlbuilder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 216,
      "line_range": [
        216
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1434         \"\"\"Flush builder buffers and return toplevel document Element.\"\"\"\n1435         assert len(self._elem) == 0, \"missing end tags\"\n1436         assert self._root is not None, \"missing toplevel element\"\n",
      "filename": "cpython\\Lib\\xml\\etree\\ElementTree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1435,
      "line_range": [
        1435
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1435         assert len(self._elem) == 0, \"missing end tags\"\n1436         assert self._root is not None, \"missing toplevel element\"\n1437         return self._root\n",
      "filename": "cpython\\Lib\\xml\\etree\\ElementTree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1436,
      "line_range": [
        1436
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1443                 if self._tail:\n1444                     assert self._last.tail is None, \"internal error (tail)\"\n1445                     self._last.tail = text\n",
      "filename": "cpython\\Lib\\xml\\etree\\ElementTree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1444,
      "line_range": [
        1444
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1446                 else:\n1447                     assert self._last.text is None, \"internal error (text)\"\n1448                     self._last.text = text\n",
      "filename": "cpython\\Lib\\xml\\etree\\ElementTree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1447,
      "line_range": [
        1447
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1479         self._last = self._elem.pop()\n1480         assert self._last.tag == tag,\\\n1481                \"end tag mismatch (expected %s, got %s)\" % (\n1482                    self._last.tag, tag)\n1483         self._tail = 1\n",
      "filename": "cpython\\Lib\\xml\\etree\\ElementTree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1480,
      "line_range": [
        1480,
        1481,
        1482
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2 \n3 from xml.etree.ElementTree import *\n",
      "filename": "cpython\\Lib\\xml\\etree\\cElementTree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using * to parse untrusted XML data is known to be vulnerable to XML attacks. Replace * with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b405-import-xml-etree",
      "test_id": "B405",
      "test_name": "blacklist"
    },
    {
      "code": "57 if _false:\n58     import xml.sax.expatreader\n59 \n",
      "filename": "cpython\\Lib\\xml\\sax\\__init__.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.sax.expatreader to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 58,
      "line_range": [
        58
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "7 \n8 from xml.sax._exceptions import *\n9 from xml.sax.handler import feature_validation, feature_namespaces\n",
      "filename": "cpython\\Lib\\xml\\sax\\expatreader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using * to parse untrusted XML data is known to be vulnerable to XML attacks. Replace * with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "8 from xml.sax._exceptions import *\n9 from xml.sax.handler import feature_validation, feature_namespaces\n10 from xml.sax.handler import feature_namespace_prefixes\n",
      "filename": "cpython\\Lib\\xml\\sax\\expatreader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using feature_validation to parse untrusted XML data is known to be vulnerable to XML attacks. Replace feature_validation with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "9 from xml.sax.handler import feature_validation, feature_namespaces\n10 from xml.sax.handler import feature_namespace_prefixes\n11 from xml.sax.handler import feature_external_ges, feature_external_pes\n",
      "filename": "cpython\\Lib\\xml\\sax\\expatreader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using feature_namespace_prefixes to parse untrusted XML data is known to be vulnerable to XML attacks. Replace feature_namespace_prefixes with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "10 from xml.sax.handler import feature_namespace_prefixes\n11 from xml.sax.handler import feature_external_ges, feature_external_pes\n12 from xml.sax.handler import feature_string_interning\n",
      "filename": "cpython\\Lib\\xml\\sax\\expatreader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using feature_external_ges to parse untrusted XML data is known to be vulnerable to XML attacks. Replace feature_external_ges with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "11 from xml.sax.handler import feature_external_ges, feature_external_pes\n12 from xml.sax.handler import feature_string_interning\n13 from xml.sax.handler import property_xml_string, property_interning_dict\n",
      "filename": "cpython\\Lib\\xml\\sax\\expatreader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using feature_string_interning to parse untrusted XML data is known to be vulnerable to XML attacks. Replace feature_string_interning with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "12 from xml.sax.handler import feature_string_interning\n13 from xml.sax.handler import property_xml_string, property_interning_dict\n14 \n15 # xml.parsers.expat does not raise ImportError in Jython\n16 import sys\n",
      "filename": "cpython\\Lib\\xml\\sax\\expatreader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using property_xml_string to parse untrusted XML data is known to be vulnerable to XML attacks. Replace property_xml_string with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 13,
      "line_range": [
        13,
        14,
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "27         raise SAXReaderNotAvailable(\"expat not supported\", None)\n28 from xml.sax import xmlreader, saxutils, handler\n29 \n30 AttributesImpl = xmlreader.AttributesImpl\n",
      "filename": "cpython\\Lib\\xml\\sax\\expatreader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xmlreader to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xmlreader with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 28,
      "line_range": [
        28,
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "441 if __name__ == \"__main__\":\n442     import xml.sax.saxutils\n443     p = create_parser()\n",
      "filename": "cpython\\Lib\\xml\\sax\\expatreader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.sax.saxutils to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.saxutils with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 442,
      "line_range": [
        442
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "364             source.setSystemId(urllib.parse.urljoin(base, sysid))\n365             f = urllib.request.urlopen(source.getSystemId())\n366 \n",
      "filename": "cpython\\Lib\\xml\\sax\\saxutils.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 365,
      "line_range": [
        365
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "960 \n961     assert isinstance(params, (tuple, Fault)), \"argument must be tuple or Fault instance\"\n962     if isinstance(params, Fault):\n",
      "filename": "cpython\\Lib\\xmlrpc\\client.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 961,
      "line_range": [
        961
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "964     elif methodresponse and isinstance(params, tuple):\n965         assert len(params) == 1, \"response tuple must be a singleton\"\n966 \n",
      "filename": "cpython\\Lib\\xmlrpc\\client.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 965,
      "line_range": [
        965
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1374         chost, self._extra_headers, x509 = self.get_host_info(host)\n1375         self._connection = host, http.client.HTTPSConnection(chost,\n1376             None, context=self.context, **(x509 or {}))\n1377         return self._connection[1]\n",
      "filename": "cpython\\Lib\\xmlrpc\\client.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 1375,
      "line_range": [
        1375,
        1376
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "885             else:\n886                 assert 0, \"Could not find method in self.functions and no \"\\\n887                           \"instance installed\"\n",
      "filename": "cpython\\Lib\\xmlrpc\\server.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 886,
      "line_range": [
        886
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1926     def _fpclose(self, fp):\n1927         assert self._fileRefCnt > 0\n1928         self._fileRefCnt -= 1\n",
      "filename": "cpython\\Lib\\zipfile.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1927,
      "line_range": [
        1927
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "258             _bootstrap_external._fix_up_module(mod.__dict__, fullname, modpath)\n259             exec(code, mod.__dict__)\n260         except:\n",
      "filename": "cpython\\Lib\\zipimport.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 259,
      "line_range": [
        259
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "624 \n625     code = marshal.loads(data[16:])\n626     if not isinstance(code, _code_type):\n",
      "filename": "cpython\\Lib\\zipimport.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 625,
      "line_range": [
        625
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "663         # strip 'c' or 'o' from *.py[co]\n664         assert path[-1:] in ('c', 'o')\n665         path = path[:-1]\n",
      "filename": "cpython\\Lib\\zipimport.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 664,
      "line_range": [
        664
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "681     # strip 'c' or 'o' from *.py[co]\n682     assert path[-1:] in ('c', 'o')\n683     path = path[:-1]\n",
      "filename": "cpython\\Lib\\zipimport.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 682,
      "line_range": [
        682
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "113         c = fobj.read(1)  # Should be \\n\n114         assert c == b\"\\n\", c\n115 \n116         tz_bytes = b\"\"\n",
      "filename": "cpython\\Lib\\zoneinfo\\_common.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 114,
      "line_range": [
        114,
        115
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "181             idx = bisect.bisect_right(lt, ts) - 1\n182             assert idx >= 0\n183             return self._ttinfos[idx]\n",
      "filename": "cpython\\Lib\\zoneinfo\\_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 182,
      "line_range": [
        182
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "208     def _file_reduce(self):\n209         import pickle\n210 \n211         raise pickle.PicklingError(\n",
      "filename": "cpython\\Lib\\zoneinfo\\_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 209,
      "line_range": [
        209,
        210
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "449         # by functions that would fail before passing start or end\n450         assert start is not None, \"No transition start specified\"\n451         assert end is not None, \"No transition end specified\"\n",
      "filename": "cpython\\Lib\\zoneinfo\\_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 450,
      "line_range": [
        450
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "450         assert start is not None, \"No transition start specified\"\n451         assert end is not None, \"No transition end specified\"\n452 \n453         self.get_trans_info = self._get_trans_info\n",
      "filename": "cpython\\Lib\\zoneinfo\\_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 451,
      "line_range": [
        451,
        452
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "733     # regular expression to find the section to parse.\n734     assert match is not None, tz_delta\n735 \n736     h, m, s = (\n",
      "filename": "cpython\\Lib\\zoneinfo\\_zoneinfo.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 734,
      "line_range": [
        734,
        735
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "497     \"\"\"\n498     fd = os.popen(commandline, 'r')\n499     data = fd.read()\n",
      "filename": "cpython\\Mac\\BuildScript\\build-installer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 498,
      "line_range": [
        498
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "508 def captureCommand(commandline):\n509     fd = os.popen(commandline, 'r')\n510     data = fd.read()\n",
      "filename": "cpython\\Mac\\BuildScript\\build-installer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 509,
      "line_range": [
        509
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "716                 shutil.rmtree(retval)\n717             fp = os.popen(\"tar zxf %s 2>&1\"%(shellQuote(archiveName),), 'r')\n718 \n",
      "filename": "cpython\\Mac\\BuildScript\\build-installer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 717,
      "line_range": [
        717
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "722                 shutil.rmtree(retval)\n723             fp = os.popen(\"tar jxf %s 2>&1\"%(shellQuote(archiveName),), 'r')\n724 \n",
      "filename": "cpython\\Mac\\BuildScript\\build-installer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 723,
      "line_range": [
        723
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "728                 shutil.rmtree(retval)\n729             fp = os.popen(\"tar xf %s 2>&1\"%(shellQuote(archiveName),), 'r')\n730 \n",
      "filename": "cpython\\Mac\\BuildScript\\build-installer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 729,
      "line_range": [
        729
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "734                 shutil.rmtree(retval)\n735             fp = os.popen(\"unzip %s 2>&1\"%(shellQuote(archiveName),), 'r')\n736 \n",
      "filename": "cpython\\Mac\\BuildScript\\build-installer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 735,
      "line_range": [
        735
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "751     \"\"\"\n752     fpIn = urllib_request.urlopen(url)\n753     fpOut = open(fname, 'wb')\n",
      "filename": "cpython\\Mac\\BuildScript\\build-installer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 752,
      "line_range": [
        752
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "779         print(\"Archive for %s stored as %s\"%(name, fname))\n780     if os.system(\n781             'MD5=$(openssl md5 %s) ; test \"${MD5##*= }\" = \"%s\"'\n782                 % (shellQuote(fname), checksum) ):\n783         fatal('MD5 checksum mismatch for file %s' % fname)\n",
      "filename": "cpython\\Mac\\BuildScript\\build-installer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 780,
      "line_range": [
        780,
        781,
        782
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "1324     if RUNNING_ON_PYTHON2:\n1325         exec(data)\n1326     else:\n",
      "filename": "cpython\\Mac\\BuildScript\\build-installer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 1325,
      "line_range": [
        1325
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1328         l_dict = {}\n1329         exec(data, g_dict, l_dict)\n1330         build_time_vars = l_dict['build_time_vars']\n",
      "filename": "cpython\\Mac\\BuildScript\\build-installer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 1329,
      "line_range": [
        1329
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1587     for i in range(5):\n1588         fd = os.popen(cmd, 'r')\n1589         data = fd.read()\n",
      "filename": "cpython\\Mac\\BuildScript\\build-installer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 1588,
      "line_range": [
        1588
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "24     for cursrc, dirs, files in os.walk(src):\n25         assert cursrc.startswith(src)\n26         curdst = dst + cursrc[len(src):]\n",
      "filename": "cpython\\Mac\\Extras.install.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 25,
      "line_range": [
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "193     \"\"\"convolute arrays a and b.\"\"\"\n194     assert(len(a) == len(b))\n195     x = ntt(a, 1)\n",
      "filename": "cpython\\Modules\\_decimal\\libmpdec\\literature\\fnt.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 194,
      "line_range": [
        194
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "206 \n207 assert(ntt_convolute(a, b) == [1,        10,        16,        0])\n208 assert(21 * 81             == (1*10**0 + 10*10**1 + 16*10**2 + 0*10**3))\n",
      "filename": "cpython\\Modules\\_decimal\\libmpdec\\literature\\fnt.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 207,
      "line_range": [
        207
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "207 assert(ntt_convolute(a, b) == [1,        10,        16,        0])\n208 assert(21 * 81             == (1*10**0 + 10*10**1 + 16*10**2 + 0*10**3))\n",
      "filename": "cpython\\Modules\\_decimal\\libmpdec\\literature\\fnt.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 208,
      "line_range": [
        208
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "128     if C is not None:\n129         assert(sx == sy)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\bench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 129,
      "line_range": [
        129
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "41 \n42 assert h2 == h1\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\bignum.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 42,
      "line_range": [
        42
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "44 import argparse\n45 import subprocess\n46 from subprocess import PIPE, STDOUT\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 45,
      "line_range": [
        45
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "45 import subprocess\n46 from subprocess import PIPE, STDOUT\n47 from queue import Queue, Empty\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with PIPE module.",
      "line_number": 46,
      "line_range": [
        46
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "250     def getprec(self):\n251         assert(self.c.prec == self.p.prec)\n252         return self.c.prec\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 251,
      "line_range": [
        251
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "258     def getemin(self):\n259         assert(self.c.Emin == self.p.Emin)\n260         return self.c.Emin\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 259,
      "line_range": [
        259
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "266     def getemax(self):\n267         assert(self.c.Emax == self.p.Emax)\n268         return self.c.Emax\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 267,
      "line_range": [
        267
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "274     def getround(self):\n275         assert(self.c.rounding == self.p.rounding)\n276         return self.c.rounding\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 275,
      "line_range": [
        275
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "282     def getcapitals(self):\n283         assert(self.c.capitals == self.p.capitals)\n284         return self.c.capitals\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 283,
      "line_range": [
        283
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "290     def getclamp(self):\n291         assert(self.c.clamp == self.p.clamp)\n292         return self.c.clamp\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 291,
      "line_range": [
        291
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1017                 if emin == 'rand':\n1018                     context.Emin = random.randrange(-1000, 0)\n1019                     context.Emax = random.randrange(prec, 1000)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1018,
      "line_range": [
        1018
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1018                     context.Emin = random.randrange(-1000, 0)\n1019                     context.Emax = random.randrange(prec, 1000)\n1020                 else:\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1019,
      "line_range": [
        1019
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1027                     context.rounding = rounding\n1028                     context.capitals = random.randrange(2)\n1029                     if spec['clamp'] == 'rand':\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1028,
      "line_range": [
        1028
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1029                     if spec['clamp'] == 'rand':\n1030                         context.clamp = random.randrange(2)\n1031                     else:\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1030,
      "line_range": [
        1030
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1115     for op in all_unary(prec, exp_range, itr):\n1116         fmt1 = rand_format(chr(random.randrange(0, 128)), 'EeGgn')\n1117         fmt2 = rand_locale()\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1116,
      "line_range": [
        1116
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1128     for op in all_unary(prec, 9999, itr):\n1129         fmt1 = rand_format(chr(random.randrange(0, 128)), 'Ff%')\n1130         fmt2 = rand_locale()\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1129,
      "line_range": [
        1129
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1144     for op in all_unary(prec, 9999, itr):\n1145         n = random.randrange(10)\n1146         roundop = (op[0], n)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1145,
      "line_range": [
        1145
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1173     c = Context(C.Context(), P.Context())\n1174     c.Emax = random.randrange(1, exprange+1)\n1175     c.Emin = random.randrange(-exprange, 0)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1174,
      "line_range": [
        1174
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1174     c.Emax = random.randrange(1, exprange+1)\n1175     c.Emin = random.randrange(-exprange, 0)\n1176     maxprec = 100 if c.Emax >= 100 else c.Emax\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1175,
      "line_range": [
        1175
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1176     maxprec = 100 if c.Emax >= 100 else c.Emax\n1177     c.prec = random.randrange(1, maxprec+1)\n1178     c.clamp = random.randrange(2)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1177,
      "line_range": [
        1177
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1177     c.prec = random.randrange(1, maxprec+1)\n1178     c.clamp = random.randrange(2)\n1179     c.clear_traps()\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1178,
      "line_range": [
        1178
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1236     args = parser.parse_args()\n1237     assert args.single is False or args.multicore is False\n1238     if args.single:\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1237,
      "line_range": [
        1237
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1289     else: # --short\n1290         rand_ieee = random.choice(ieee)\n1291         base['iter'] = small['iter'] = rand_ieee['iter'] = 1\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1290,
      "line_range": [
        1290
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1293         base['samples'] = 1\n1294         base['expts'] = [random.choice(base_expts)]\n1295         # 1 random precision and exponent pair\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1294,
      "line_range": [
        1294
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1295         # 1 random precision and exponent pair\n1296         prec = random.randrange(1, 6)\n1297         small['prec'] = [prec]\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1296,
      "line_range": [
        1296
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1374                 cmd = [sys.executable, \"deccheck.py\", \"--%s\" % args.time, \"--single\", test]\n1375                 p = subprocess.Popen(cmd, stdout=PIPE, stderr=STDOUT)\n1376                 out, _ = p.communicate()\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\deccheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1375,
      "line_range": [
        1375
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "32 import os, sys, locale, random\n33 import platform, subprocess\n34 from distutils.spawn import find_executable\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 33,
      "line_range": [
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "141     elif find_executable('locale'):\n142         locale_list = subprocess.Popen([\"locale\", \"-a\"],\n143                           stdout=subprocess.PIPE).communicate()[0]\n144         try:\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 142,
      "line_range": [
        142,
        143
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "141     elif find_executable('locale'):\n142         locale_list = subprocess.Popen([\"locale\", \"-a\"],\n143                           stdout=subprocess.PIPE).communicate()[0]\n144         try:\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 142,
      "line_range": [
        142,
        143
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "230     while 1:\n231         i = random.randrange(0, 0x110002)\n232         c = check_fillchar(i)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 231,
      "line_range": [
        231
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "237 def rand_format(fill, typespec='EeGgFfn%'):\n238     active = sorted(random.sample(range(7), random.randrange(8)))\n239     have_align = 0\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 238,
      "line_range": [
        238
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "243             s += fill\n244             s += random.choice('<>=^')\n245             have_align = 1\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 244,
      "line_range": [
        244
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "246         elif elem == 1: # sign\n247             s += random.choice('+- ')\n248         elif elem == 2 and not have_align: # zeropad\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 247,
      "line_range": [
        247
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "250         elif elem == 3: # width\n251             s += str(random.randrange(1, 100))\n252         elif elem == 4: # thousands separator\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 251,
      "line_range": [
        251
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "255             s += '.'\n256             s += str(random.randrange(100))\n257         elif elem == 6:\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 256,
      "line_range": [
        256
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "259             else: c = typespec\n260             s += random.choice(c)\n261     return s\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 260,
      "line_range": [
        260
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "275                             # for type in ('', 'E', 'e', 'G', 'g', 'F', 'f', '%'):\n276                             type = random.choice(('', 'E', 'e', 'G', 'g', 'F', 'f', '%'))\n277                             yield ''.join((fill, align, sign, zeropad, width, ',', prec, type))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 276,
      "line_range": [
        276
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "294 def randfill(fill):\n295     active = sorted(random.sample(range(5), random.randrange(6)))\n296     s = ''\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 295,
      "line_range": [
        295
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "297     s += str(fill)\n298     s += random.choice('<>=^')\n299     for elem in active:\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 298,
      "line_range": [
        298
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "300         if elem == 0: # sign\n301             s += random.choice('+- ')\n302         elif elem == 1: # width\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 301,
      "line_range": [
        301
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "302         elif elem == 1: # width\n303             s += str(random.randrange(1, 100))\n304         elif elem == 2: # thousands separator\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 303,
      "line_range": [
        303
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "307             s += '.'\n308             s += str(random.randrange(100))\n309         elif elem == 4:\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 308,
      "line_range": [
        308
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "311             else: c = 'EeGgFfn%'\n312             s += random.choice(c)\n313     return s\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 312,
      "line_range": [
        312
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "318     try:\n319         loc = random.choice(locale_list)\n320         locale.setlocale(locale.LC_ALL, loc)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 319,
      "line_range": [
        319
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "322         pass\n323     active = sorted(random.sample(range(5), random.randrange(6)))\n324     s = ''\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 323,
      "line_range": [
        323
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "327         if elem == 0: # fill+align\n328             s += chr(random.randrange(32, 128))\n329             s += random.choice('<>=^')\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 328,
      "line_range": [
        328
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "328             s += chr(random.randrange(32, 128))\n329             s += random.choice('<>=^')\n330             have_align = 1\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 329,
      "line_range": [
        329
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "331         elif elem == 1: # sign\n332             s += random.choice('+- ')\n333         elif elem == 2 and not have_align: # zeropad\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 332,
      "line_range": [
        332
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "335         elif elem == 3: # width\n336             s += str(random.randrange(1, 100))\n337         elif elem == 4: # prec\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 336,
      "line_range": [
        336
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "338             s += '.'\n339             s += str(random.randrange(100))\n340     s += 'n'\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\formathelper.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 339,
      "line_range": [
        339
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "54 def sign():\n55     if randrange(2):\n56         if randrange(2): return '+'\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 55,
      "line_range": [
        55
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "55     if randrange(2):\n56         if randrange(2): return '+'\n57         return ''\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 56,
      "line_range": [
        56
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "60 def indicator():\n61     return \"eE\"[randrange(2)]\n62 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 61,
      "line_range": [
        61
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "64     if maxprec == 0: return ''\n65     return str(randrange(10**maxprec))\n66 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 65,
      "line_range": [
        65
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "67 def dot():\n68     if randrange(2): return '.'\n69     return ''\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 68,
      "line_range": [
        68
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "71 def decimal_part(maxprec):\n72     if randrange(100) > 60: # integers\n73         return digits(maxprec)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 72,
      "line_range": [
        72
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "73         return digits(maxprec)\n74     if randrange(2):\n75         intlen = randrange(1, maxprec+1)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 74,
      "line_range": [
        74
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "74     if randrange(2):\n75         intlen = randrange(1, maxprec+1)\n76         fraclen = maxprec-intlen\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 75,
      "line_range": [
        75
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "83 def expdigits(maxexp):\n84     return str(randrange(maxexp))\n85 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 84,
      "line_range": [
        84
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "89 def infinity():\n90     if randrange(2): return 'Infinity'\n91     return 'Inf'\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 90,
      "line_range": [
        90
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "94     d = ''\n95     if randrange(2):\n96         d = digits(randrange(99))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 95,
      "line_range": [
        95
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "95     if randrange(2):\n96         d = digits(randrange(99))\n97     if randrange(2):\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 96,
      "line_range": [
        96
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "96         d = digits(randrange(99))\n97     if randrange(2):\n98         return ''.join(('NaN', d))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 97,
      "line_range": [
        97
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "102 def numeric_value(maxprec, maxexp):\n103     if randrange(100) > 90:\n104         return infinity()\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 103,
      "line_range": [
        103
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "105     exp_part = ''\n106     if randrange(100) > 60:\n107         exp_part = exponent_part(maxexp)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 106,
      "line_range": [
        106
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "110 def numeric_string(maxprec, maxexp):\n111     if randrange(100) > 95:\n112         return ''.join((sign(), nan()))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 111,
      "line_range": [
        111
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "122     if maxexp == 0: maxexp = 1\n123     exp = str(randrange(maxexp-2*(abs(maxexp)), maxexp))\n124     return ''.join((sign(), d, 'E', exp))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 123,
      "line_range": [
        123
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "128     if n < 1: return 0\n129     return randrange(10**(n-1), 10**n)\n130 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 129,
      "line_range": [
        129
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "131 def randtuple(maxprec, maxexp):\n132     n = randrange(100)\n133     sign = randrange(2)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 132,
      "line_range": [
        132
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "132     n = randrange(100)\n133     sign = randrange(2)\n134     coeff = ndigits(maxprec)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 133,
      "line_range": [
        133
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "139         coeff = tuple(map(int, str(ndigits(maxprec))))\n140         exp = \"nN\"[randrange(2)]\n141     else:\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 140,
      "line_range": [
        140
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "142         coeff = tuple(map(int, str(ndigits(maxprec))))\n143         exp = randrange(-maxexp, maxexp)\n144     return (sign, coeff, exp)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 143,
      "line_range": [
        143
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "160         yield -coeff\n161         yield from_triple(1, coeff, randrange(2*maxexp))\n162         yield from_triple(-1, coeff, randrange(2*maxexp))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 161,
      "line_range": [
        161
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "161         yield from_triple(1, coeff, randrange(2*maxexp))\n162         yield from_triple(-1, coeff, randrange(2*maxexp))\n163     for coeff in pow10:\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 162,
      "line_range": [
        162
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "179         yield -1, -coeff\n180         yield from_triple(1, coeff, randrange(2*maxexp)), 1\n181         yield from_triple(-1, coeff, randrange(2*maxexp)), -1\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 180,
      "line_range": [
        180
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "180         yield from_triple(1, coeff, randrange(2*maxexp)), 1\n181         yield from_triple(-1, coeff, randrange(2*maxexp)), -1\n182         yield 1, from_triple(1, coeff, -randrange(2*maxexp))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 181,
      "line_range": [
        181
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "181         yield from_triple(-1, coeff, randrange(2*maxexp)), -1\n182         yield 1, from_triple(1, coeff, -randrange(2*maxexp))\n183         yield -1, from_triple(-1, coeff, -randrange(2*maxexp))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 182,
      "line_range": [
        182
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "182         yield 1, from_triple(1, coeff, -randrange(2*maxexp))\n183         yield -1, from_triple(-1, coeff, -randrange(2*maxexp))\n184     for coeff in pow10:\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 183,
      "line_range": [
        183
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "192     rprec = 10**prec\n193     return ''.join((\"1.\", '0'*randrange(prec),\n194                    str(randrange(rprec))))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 193,
      "line_range": [
        193
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "193     return ''.join((\"1.\", '0'*randrange(prec),\n194                    str(randrange(rprec))))\n195 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 194,
      "line_range": [
        194
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "197     rprec = 10**prec\n198     return ''.join((\"0.9\", '9'*randrange(prec),\n199                    str(randrange(rprec))))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 198,
      "line_range": [
        198
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "198     return ''.join((\"0.9\", '9'*randrange(prec),\n199                    str(randrange(rprec))))\n200 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 199,
      "line_range": [
        199
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "203     rprec = 10**prec\n204     return ''.join((\"0.\", '0'*randrange(prec),\n205                    str(randrange(rprec))))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 204,
      "line_range": [
        204
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "204     return ''.join((\"0.\", '0'*randrange(prec),\n205                    str(randrange(rprec))))\n206 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 205,
      "line_range": [
        205
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "208     rprec = 10**prec\n209     return ''.join((\"-0.\", '0'*randrange(prec),\n210                    str(randrange(rprec))))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 209,
      "line_range": [
        209
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "209     return ''.join((\"-0.\", '0'*randrange(prec),\n210                    str(randrange(rprec))))\n211 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 210,
      "line_range": [
        210
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "214     rprec = 10**prec\n215     return ''.join((\"9.\", '9'*randrange(prec),\n216                    str(randrange(rprec)), \"E\", str(emax)))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 215,
      "line_range": [
        215
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "215     return ''.join((\"9.\", '9'*randrange(prec),\n216                    str(randrange(rprec)), \"E\", str(emax)))\n217 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 216,
      "line_range": [
        216
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "219     rprec = 10**prec\n220     return ''.join((\"1.\", '0'*randrange(prec),\n221                    str(randrange(rprec)), \"E\", str(emax+1)))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 220,
      "line_range": [
        220
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "220     return ''.join((\"1.\", '0'*randrange(prec),\n221                    str(randrange(rprec)), \"E\", str(emax+1)))\n222 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 221,
      "line_range": [
        221
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "225     rprec = 10**prec\n226     return ''.join((\"1.\", '0'*randrange(prec),\n227                    str(randrange(rprec)), \"E\", str(emin)))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 226,
      "line_range": [
        226
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "226     return ''.join((\"1.\", '0'*randrange(prec),\n227                    str(randrange(rprec)), \"E\", str(emin)))\n228 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 227,
      "line_range": [
        227
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "230     rprec = 10**prec\n231     return ''.join((\"9.\", '9'*randrange(prec),\n232                    str(randrange(rprec)), \"E\", str(emin-1)))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 231,
      "line_range": [
        231
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "231     return ''.join((\"9.\", '9'*randrange(prec),\n232                    str(randrange(rprec)), \"E\", str(emin-1)))\n233 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 232,
      "line_range": [
        232
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "237     etiny = emin - (prec - 1)\n238     return ''.join((\"1.\", '0'*randrange(prec),\n239                    str(randrange(rprec)), \"E\", str(etiny)))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 238,
      "line_range": [
        238
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "238     return ''.join((\"1.\", '0'*randrange(prec),\n239                    str(randrange(rprec)), \"E\", str(etiny)))\n240 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 239,
      "line_range": [
        239
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "243     etiny = emin - (prec - 1)\n244     return ''.join((\"9.\", '9'*randrange(prec),\n245                    str(randrange(rprec)), \"E\", str(etiny-1)))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 244,
      "line_range": [
        244
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "244     return ''.join((\"9.\", '9'*randrange(prec),\n245                    str(randrange(rprec)), \"E\", str(etiny-1)))\n246 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 245,
      "line_range": [
        245
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "250     etiny = min_emin - (max_prec - 1)\n251     return ''.join((\"1.\", '0'*randrange(prec),\n252                    str(randrange(rprec)), \"E\", str(etiny)))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 251,
      "line_range": [
        251
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "251     return ''.join((\"1.\", '0'*randrange(prec),\n252                    str(randrange(rprec)), \"E\", str(etiny)))\n253 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 252,
      "line_range": [
        252
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "256     etiny = min_emin - (max_prec - 1)\n257     return ''.join((\"9.\", '9'*randrange(prec),\n258                    str(randrange(rprec)), \"E\", str(etiny-1)))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 257,
      "line_range": [
        257
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "257     return ''.join((\"9.\", '9'*randrange(prec),\n258                    str(randrange(rprec)), \"E\", str(etiny-1)))\n259 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 258,
      "line_range": [
        258
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "320         yield from_triple(-1, ndigits(m), 0)\n321         yield from_triple(1, ndigits(m), randrange(maxexp))\n322         yield from_triple(-1, ndigits(m), randrange(maxexp))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 321,
      "line_range": [
        321
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "321         yield from_triple(1, ndigits(m), randrange(maxexp))\n322         yield from_triple(-1, ndigits(m), randrange(maxexp))\n323 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 322,
      "line_range": [
        322
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "333         yield from_triple(-1, ndigits(m), 0)\n334         yield from_triple(1, ndigits(m), randrange(maxexp))\n335         yield from_triple(-1, ndigits(m), randrange(maxexp))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 334,
      "line_range": [
        334
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "334         yield from_triple(1, ndigits(m), randrange(maxexp))\n335         yield from_triple(-1, ndigits(m), randrange(maxexp))\n336         # test from tuple\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 335,
      "line_range": [
        335
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "338         yield (1, tuple(map(int, str(ndigits(m)))), 0)\n339         yield (0, tuple(map(int, str(ndigits(m)))), randrange(maxexp))\n340         yield (1, tuple(map(int, str(ndigits(m)))), randrange(maxexp))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 339,
      "line_range": [
        339
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "339         yield (0, tuple(map(int, str(ndigits(m)))), randrange(maxexp))\n340         yield (1, tuple(map(int, str(ndigits(m)))), randrange(maxexp))\n341 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 340,
      "line_range": [
        340
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "354         yield x, x\n355         x = from_triple(1, ndigits(m), randrange(maxexp))\n356         yield x, x\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 355,
      "line_range": [
        355
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "356         yield x, x\n357         x = from_triple(-1, ndigits(m), randrange(maxexp))\n358         yield x, x\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 357,
      "line_range": [
        357
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "372             yield x, y\n373             x = from_triple(1, ndigits(m), randrange(maxexp))\n374             y = from_triple(1, ndigits(n), randrange(maxexp))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 373,
      "line_range": [
        373
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "373             x = from_triple(1, ndigits(m), randrange(maxexp))\n374             y = from_triple(1, ndigits(n), randrange(maxexp))\n375             yield x, y\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 374,
      "line_range": [
        374
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "375             yield x, y\n376             x = from_triple(-1, ndigits(m), randrange(maxexp))\n377             y = from_triple(1, ndigits(n), randrange(maxexp))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 376,
      "line_range": [
        376
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "376             x = from_triple(-1, ndigits(m), randrange(maxexp))\n377             y = from_triple(1, ndigits(n), randrange(maxexp))\n378             yield x, y\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 377,
      "line_range": [
        377
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "378             yield x, y\n379             x = from_triple(1, ndigits(m), randrange(maxexp))\n380             y = from_triple(-1, ndigits(n), randrange(maxexp))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 379,
      "line_range": [
        379
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "379             x = from_triple(1, ndigits(m), randrange(maxexp))\n380             y = from_triple(-1, ndigits(n), randrange(maxexp))\n381             yield x, y\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 380,
      "line_range": [
        380
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "381             yield x, y\n382             x = from_triple(-1, ndigits(m), randrange(maxexp))\n383             y = from_triple(-1, ndigits(n), randrange(maxexp))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 382,
      "line_range": [
        382
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "382             x = from_triple(-1, ndigits(m), randrange(maxexp))\n383             y = from_triple(-1, ndigits(n), randrange(maxexp))\n384             yield x, y\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 383,
      "line_range": [
        383
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "387 def randsign():\n388     return (1, -1)[randrange(2)]\n389 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 388,
      "line_range": [
        388
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "412     for i in range(prec):\n413         z += randrange(2) * 10**i\n414     return z\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 413,
      "line_range": [
        413
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "441 def randint():\n442     p = randrange(1, 100)\n443     return ndigits(p) * (1,-1)[randrange(2)]\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 442,
      "line_range": [
        442
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "442     p = randrange(1, 100)\n443     return ndigits(p) * (1,-1)[randrange(2)]\n444 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 443,
      "line_range": [
        443
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "445 def randfloat():\n446     p = randrange(1, 100)\n447     s = numeric_value(p, 383)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 446,
      "line_range": [
        446
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "455     real = randfloat()\n456     if randrange(100) > 30:\n457         imag = 0.0\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randdec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 456,
      "line_range": [
        456
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "23             # with small number of significant digits.\n24             n, e = random.randrange(lower, upper, 2), k\n25 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "28                 n, e = n // 5, e + 1\n29             assert n % 10 in (1, 3, 7, 9)\n30 \n31             # Try numbers of the form n * 2**p2 * 10**e, p2 >= 0,\n32             # until n * 2**p2 has more than 20 significant digits.\n33             digits, exponent = n, e\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 29,
      "line_range": [
        29,
        30,
        31,
        32
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "58             # bit pattern for a random finite positive (or +0.0) float\n59             bits = random.randrange(2047*2**52)\n60 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 59,
      "line_range": [
        59
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "93             for i in range(TEST_SIZE):\n94                 digits = n + random.randrange(-3*u, 3*u)\n95                 exponent = e\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 94,
      "line_range": [
        94
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "108         for j in range(TEST_SIZE):\n109             digits = base + random.randrange(-1000, 1000)\n110             s = '{}e{}'.format(digits, exponent)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 109,
      "line_range": [
        109
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "116         for i in range(100 * TEST_SIZE):\n117             digits = random.randrange(dig10)\n118             exponent = random.randrange(-400, 400)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 117,
      "line_range": [
        117
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "117             digits = random.randrange(dig10)\n118             exponent = random.randrange(-400, 400)\n119             s = '{}e{}'.format(digits, exponent)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 118,
      "line_range": [
        118
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "130         for j in range(TEST_SIZE):\n131             s = random.choice(signs)\n132             intpart_len = random.randrange(5)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 131,
      "line_range": [
        131
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "131             s = random.choice(signs)\n132             intpart_len = random.randrange(5)\n133             s += ''.join(random.choice(digits) for _ in range(intpart_len))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 132,
      "line_range": [
        132
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "132             intpart_len = random.randrange(5)\n133             s += ''.join(random.choice(digits) for _ in range(intpart_len))\n134             if random.choice([True, False]):\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 133,
      "line_range": [
        133
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "133             s += ''.join(random.choice(digits) for _ in range(intpart_len))\n134             if random.choice([True, False]):\n135                 s += '.'\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 134,
      "line_range": [
        134
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "135                 s += '.'\n136                 fracpart_len = random.randrange(5)\n137                 s += ''.join(random.choice(digits)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 136,
      "line_range": [
        136
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "136                 fracpart_len = random.randrange(5)\n137                 s += ''.join(random.choice(digits)\n138                              for _ in range(fracpart_len))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 137,
      "line_range": [
        137
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "140                 fracpart_len = 0\n141             if random.choice([True, False]):\n142                 s += random.choice(['e', 'E'])\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 141,
      "line_range": [
        141
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "141             if random.choice([True, False]):\n142                 s += random.choice(['e', 'E'])\n143                 s += random.choice(signs)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 142,
      "line_range": [
        142
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "142                 s += random.choice(['e', 'E'])\n143                 s += random.choice(signs)\n144                 exponent_len = random.randrange(1, 4)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 143,
      "line_range": [
        143
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "143                 s += random.choice(signs)\n144                 exponent_len = random.randrange(1, 4)\n145                 s += ''.join(random.choice(digits)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 144,
      "line_range": [
        144
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "144                 exponent_len = random.randrange(1, 4)\n145                 s += ''.join(random.choice(digits)\n146                              for _ in range(exponent_len))\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 145,
      "line_range": [
        145
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "233     for i in range(1000):\n234         l = random.choice(TESTCASES[:6])\n235         yield random.choice(l)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 234,
      "line_range": [
        234
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "234         l = random.choice(TESTCASES[:6])\n235         yield random.choice(l)\n236     for v in test_particular:\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 235,
      "line_range": [
        235
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "240     for i in range(1000):\n241         l1 = random.choice(TESTCASES)\n242         l2 = random.choice(TESTCASES)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 241,
      "line_range": [
        241
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "241         l1 = random.choice(TESTCASES)\n242         l2 = random.choice(TESTCASES)\n243         yield random.choice(l1), random.choice(l2)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 242,
      "line_range": [
        242
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "242         l2 = random.choice(TESTCASES)\n243         yield random.choice(l1), random.choice(l2)\n244 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 243,
      "line_range": [
        243
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "242         l2 = random.choice(TESTCASES)\n243         yield random.choice(l1), random.choice(l2)\n244 \n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 243,
      "line_range": [
        243
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "246     for i in range(1000):\n247         l1 = random.choice(TESTCASES)\n248         l2 = random.choice(TESTCASES)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 247,
      "line_range": [
        247
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "247         l1 = random.choice(TESTCASES)\n248         l2 = random.choice(TESTCASES)\n249         l3 = random.choice(TESTCASES)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 248,
      "line_range": [
        248
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "248         l2 = random.choice(TESTCASES)\n249         l3 = random.choice(TESTCASES)\n250         yield random.choice(l1), random.choice(l2), random.choice(l3)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 249,
      "line_range": [
        249
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "249         l3 = random.choice(TESTCASES)\n250         yield random.choice(l1), random.choice(l2), random.choice(l3)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 250,
      "line_range": [
        250
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "249         l3 = random.choice(TESTCASES)\n250         yield random.choice(l1), random.choice(l2), random.choice(l3)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 250,
      "line_range": [
        250
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "249         l3 = random.choice(TESTCASES)\n250         yield random.choice(l1), random.choice(l2), random.choice(l3)\n",
      "filename": "cpython\\Modules\\_decimal\\tests\\randfloat.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 250,
      "line_range": [
        250
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "14 import shutil\n15 import subprocess\n16 import sys\n",
      "filename": "cpython\\PC\\layout\\main.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "15 from pathlib import Path, PureWindowsPath\n16 from xml.etree import ElementTree as ET\n17 \n18 from .constants import *\n",
      "filename": "cpython\\PC\\layout\\support\\appxmanifest.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 16,
      "line_range": [
        16,
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b405-import-xml-etree",
      "test_id": "B405",
      "test_name": "blacklist"
    },
    {
      "code": "225     with open(sccd, \"rb\") as f:\n226         xml = ET.parse(f)\n227 \n",
      "filename": "cpython\\PC\\layout\\support\\appxmanifest.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.etree.ElementTree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 226,
      "line_range": [
        226
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-elementtree",
      "test_id": "B314",
      "test_name": "blacklist"
    },
    {
      "code": "395 \n396     xml = ET.parse(io.StringIO(APPXMANIFEST_TEMPLATE))\n397     NS = APPXMANIFEST_NS\n",
      "filename": "cpython\\PC\\layout\\support\\appxmanifest.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.etree.ElementTree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 396,
      "line_range": [
        396
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-elementtree",
      "test_id": "B314",
      "test_name": "blacklist"
    },
    {
      "code": "10 import shutil\n11 import subprocess\n12 import sys\n",
      "filename": "cpython\\PC\\layout\\support\\pip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "61 \n62     output = subprocess.check_output(\n63         [\n64             sys.executable,\n65             \"-m\",\n66             \"pip\",\n67             \"--no-color\",\n68             \"install\",\n69             \"pip\",\n70             \"setuptools\",\n71             \"--upgrade\",\n72             \"--target\",\n73             str(dest),\n74             \"--no-index\",\n75             \"--no-compile\",\n76             \"--no-cache-dir\",\n77             \"-f\",\n78             str(src),\n79             \"--only-binary\",\n80             \":all:\",\n81         ],\n82         env=env,\n83     )\n",
      "filename": "cpython\\PC\\layout\\support\\pip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 62,
      "line_range": [
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "16     zip_dir.mkdir(parents=True, exist_ok=True)\n17     filename, headers = urlretrieve(\n18         url,\n19         zip_dir / f'{commit_hash}.zip',\n20         reporthook=reporthook,\n21     )\n",
      "filename": "cpython\\PCbuild\\get_external.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 17,
      "line_range": [
        17,
        18,
        19,
        20
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "25 import sys\n26 import subprocess\n27 from shutil import copy\n",
      "filename": "cpython\\PCbuild\\prepare_ssl.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 26,
      "line_range": [
        26
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "51         try:\n52             subprocess.check_output([perl, \"-e\", \"use Win32;\"])\n53         except subprocess.CalledProcessError:\n",
      "filename": "cpython\\PCbuild\\prepare_ssl.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 52,
      "line_range": [
        52
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "89     print(\"perl Configure \"+configure+\" no-idea no-mdc2\")\n90     os.system(\"perl Configure \"+configure+\" no-idea no-mdc2\")\n91     print(do_script)\n",
      "filename": "cpython\\PCbuild\\prepare_ssl.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 90,
      "line_range": [
        90
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "91     print(do_script)\n92     os.system(do_script)\n93 \n",
      "filename": "cpython\\PCbuild\\prepare_ssl.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 92,
      "line_range": [
        92
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "38     print(\"Downloading from\", URL, \"to\", FILENAME, \"using\", USING)\n39     urlretrieve(URL, FILENAME)\n",
      "filename": "cpython\\PCbuild\\urlretrieve.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 39,
      "line_range": [
        39
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "47             i = size + 3\n48         assert i != -1, \"Impossible line %d to reflow: %r\" % (size, s)\n49         lines.append(padding + cur[:i])\n",
      "filename": "cpython\\Parser\\asdl_c.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 48,
      "line_range": [
        48
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "225             type = str(field.type)\n226             assert type in asdl.builtin_types, type\n227             emit(\"%s %s;\" % (type, field.name), depth + 1);\n",
      "filename": "cpython\\Parser\\asdl_c.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 226,
      "line_range": [
        226
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "259             type = str(field.type)\n260             assert type in asdl.builtin_types, type\n261             self.emit(\"%s %s;\" % (type, field.name), depth + 1);\n",
      "filename": "cpython\\Parser\\asdl_c.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 260,
      "line_range": [
        260
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "211         if decl not in unresolved:\n212             assert types[decl] is not None, decl\n213             if types[decl] in (UNKNOWN, IGNORED):\n",
      "filename": "cpython\\Tools\\c-analyzer\\c_analyzer\\analyze.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 212,
      "line_range": [
        212
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "218             else:\n219                 assert types[decl][0] is not None, (decl, types[decl])\n220                 assert None not in types[decl][0], (decl, types[decl])\n",
      "filename": "cpython\\Tools\\c-analyzer\\c_analyzer\\analyze.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 219,
      "line_range": [
        219
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "219                 assert types[decl][0] is not None, (decl, types[decl])\n220                 assert None not in types[decl][0], (decl, types[decl])\n221         else:\n",
      "filename": "cpython\\Tools\\c-analyzer\\c_analyzer\\analyze.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 220,
      "line_range": [
        220
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "221         else:\n222             assert types[decl] is None\n223             if dump:\n",
      "filename": "cpython\\Tools\\c-analyzer\\c_analyzer\\analyze.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 222,
      "line_range": [
        222
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "231     for decl in types:\n232         assert types[decl]\n233 \n",
      "filename": "cpython\\Tools\\c-analyzer\\c_analyzer\\analyze.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 232,
      "line_range": [
        232
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "123     def __init__(self, item, typedecl=None, **extra):\n124         assert item is not None\n125         self.item = item\n",
      "filename": "cpython\\Tools\\c-analyzer\\c_analyzer\\info.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 124,
      "line_range": [
        124
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4 import shlex\n5 import subprocess\n6 import sys\n",
      "filename": "cpython\\Tools\\c-analyzer\\c_parser\\preprocessor\\common.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "42 \n43     proc = subprocess.run(argv, **kwargs)\n44     return proc.stdout\n",
      "filename": "cpython\\Tools\\c-analyzer\\c_parser\\preprocessor\\common.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 43,
      "line_range": [
        43
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "14 import threading\n15 import subprocess\n16 import socket\n",
      "filename": "cpython\\Tools\\ccbench\\ccbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "123     def compute(s):\n124         hashlib.sha1(s).digest()\n125     return compute, (arg, )\n",
      "filename": "cpython\\Tools\\ccbench\\ccbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 124,
      "line_range": [
        124
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "187 def run_throughput_test(func, args, nthreads):\n188     assert nthreads >= 1\n189 \n190     # Warm up\n191     func(*args)\n",
      "filename": "cpython\\Tools\\ccbench\\ccbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 188,
      "line_range": [
        188,
        189,
        190
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "290     cmd_line.extend(['--latclient', repr(kwargs)])\n291     return subprocess.Popen(cmd_line) #, stdin=subprocess.PIPE,\n292                             #stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n",
      "filename": "cpython\\Tools\\ccbench\\ccbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 291,
      "line_range": [
        291
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "368             if line and line != LAT_END:\n369                 send_time = eval(line)\n370                 assert isinstance(send_time, float)\n",
      "filename": "cpython\\Tools\\ccbench\\ccbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 369,
      "line_range": [
        369
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "369                 send_time = eval(line)\n370                 assert isinstance(send_time, float)\n371                 results.append((send_time, recv_time))\n",
      "filename": "cpython\\Tools\\ccbench\\ccbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 370,
      "line_range": [
        370
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "414             s = _recv(sock, packet_size)\n415             assert len(s) == packet_size\n416             i += 1\n",
      "filename": "cpython\\Tools\\ccbench\\ccbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 415,
      "line_range": [
        415
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "423     cmd_line.extend(['--bwclient', repr(kwargs)])\n424     return subprocess.Popen(cmd_line) #, stdin=subprocess.PIPE,\n425                             #stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n",
      "filename": "cpython\\Tools\\ccbench\\ccbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 424,
      "line_range": [
        424
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "477         s = _recv(sock, packet_size)\n478         remote_addr = eval(s.partition('#')[0])\n479 \n",
      "filename": "cpython\\Tools\\ccbench\\ccbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 478,
      "line_range": [
        478
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "559     if options.latclient:\n560         kwargs = eval(options.latclient)\n561         latency_client(**kwargs)\n",
      "filename": "cpython\\Tools\\ccbench\\ccbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 560,
      "line_range": [
        560
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "564     if options.bwclient:\n565         kwargs = eval(options.bwclient)\n566         bandwidth_client(**kwargs)\n",
      "filename": "cpython\\Tools\\ccbench\\ccbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 565,
      "line_range": [
        565
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "495     if not required:\n496         assert not left\n497 \n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 496,
      "line_range": [
        496
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "635         parameters = list(f.parameters.values())\n636         assert parameters\n637         assert isinstance(parameters[0].converter, self_converter)\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 636,
      "line_range": [
        636
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "636         assert parameters\n637         assert isinstance(parameters[0].converter, self_converter)\n638         del parameters[0]\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 637,
      "line_range": [
        637
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "649             if p.is_keyword_only():\n650                 assert not p.is_positional_only()\n651                 if not p.is_optional():\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 650,
      "line_range": [
        650
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1034             if parses_keywords:\n1035                 assert parses_positional\n1036 \n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1035,
      "line_range": [
        1035
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1086         # (they mustn't be None, but they could be an empty string.)\n1087         assert parser_prototype is not None\n1088         if parser_prototype:\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1087,
      "line_range": [
        1087
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1088         if parser_prototype:\n1089             assert not parser_prototype.endswith(';')\n1090             parser_prototype += ';'\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1089,
      "line_range": [
        1089
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1115         for name, value in d.items():\n1116             assert value is not None, \"got a None value for template \" + repr(name)\n1117             if value:\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1116,
      "line_range": [
        1116
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1226 \n1227         assert f.parameters, \"We should always have a 'self' at this point!\"\n1228         parameters = f.render_parameters\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1227,
      "line_range": [
        1227
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1234         selfless = parameters[1:]\n1235         assert isinstance(f_self.converter, self_converter), \"No self parameter in \" + repr(f.full_name) + \"!\"\n1236 \n1237         last_group = 0\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1235,
      "line_range": [
        1235,
        1236
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1386     finally:\n1387         assert sys.stdout is stdout\n1388         sys.stdout = saved_stdout\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1387,
      "line_range": [
        1387
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1447     def __init__(self, input, dsl_name=None, signatures=None, output=None, indent='', preindent=''):\n1448         assert isinstance(input, str)\n1449         self.input = input\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1448,
      "line_range": [
        1448
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1486         before, _, after = language.start_line.partition('{dsl_name}')\n1487         assert _ == '{dsl_name}'\n1488         self.find_start_re = create_regex(before, after, whole_line=False)\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1487,
      "line_range": [
        1487
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1561                 line = line.lstrip()\n1562                 assert line.startswith(body_prefix)\n1563                 line = line[len(body_prefix):]\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1562,
      "line_range": [
        1562
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1570             before, _, after = self.language.checksum_line.format(dsl_name=dsl_name, arguments='{arguments}').partition('{arguments}')\n1571             assert _ == '{arguments}'\n1572             checksum_re = create_regex(before, after, word=False)\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1571,
      "line_range": [
        1571
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1634 \n1635         assert not ((dsl_name == None) ^ (output == None)), \"you must specify dsl_name and output together, dsl_name \" + repr(dsl_name)\n1636 \n1637         if not dsl_name:\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1635,
      "line_range": [
        1635,
        1636
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1888 \n1889             assert name in self.destination_buffers\n1890             preset[name] = buffer\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1889,
      "line_range": [
        1889
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1916                 if dsl_name not in self.parsers:\n1917                     assert dsl_name in parsers, \"No parser to handle {!r} block.\".format(dsl_name)\n1918                     self.parsers[dsl_name] = parsers[dsl_name](self)\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1917,
      "line_range": [
        1917
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2055     input = input or ''\n2056     s = hashlib.sha1(input.encode('utf-8')).hexdigest()\n2057     if length:\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 2056,
      "line_range": [
        2056
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "2070         with OverrideStdioWith(s):\n2071             exec(block.input)\n2072         block.output = s.getvalue()\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 2071,
      "line_range": [
        2071
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "2240         else:\n2241             assert self.kind == CALLABLE, \"unknown kind: \" + repr(self.kind)\n2242         if self.coexist:\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2241,
      "line_range": [
        2241
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2580     def parse_argument(self, list):\n2581         assert not (self.converter and self.encoding)\n2582         if self.format_unit == 'O&':\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2581,
      "line_range": [
        2581
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "2582         if self.format_unit == 'O&':\n2583             assert self.converter\n2584             list.append(self.converter)\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 2583,
      "line_range": [
        2583
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3638             # because we render parameters in order, and self is always first.\n3639             assert len(data.impl_arguments) == 1\n3640             assert data.impl_arguments[0] == self.name\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3639,
      "line_range": [
        3639
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3639             assert len(data.impl_arguments) == 1\n3640             assert data.impl_arguments[0] == self.name\n3641             data.impl_arguments[0] = '(' + self.type + \")\" + data.impl_arguments[0]\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 3640,
      "line_range": [
        3640
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4345 \n4346         assert self.indent.depth == 2\n4347         indent = self.indent.infer(line)\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4346,
      "line_range": [
        4346
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4478                     try:\n4479                         value = eval(default)\n4480                         if value == unspecified:\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 4479,
      "line_range": [
        4479
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "4523                     try:\n4524                         value = eval(py_default)\n4525                     except NameError:\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 4524,
      "line_range": [
        4524
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "4656         self.parameter_docstring_indent = len(self.indent.margin)\n4657         assert self.indent.depth == 3\n4658         return self.next(self.state_parameter_docstring, line)\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4657,
      "line_range": [
        4657
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4670             self.indent.infer(line)\n4671             assert self.indent.depth < 3\n4672             if self.indent.depth == 2:\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4671,
      "line_range": [
        4671
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4674                 return self.next(self.state_parameter, line)\n4675             assert self.indent.depth == 1\n4676             return self.next(self.state_function_docstring, line)\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4675,
      "line_range": [
        4675
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4677 \n4678         assert self.function.parameters\n4679         last_parameter = next(reversed(list(self.function.parameters.values())))\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4678,
      "line_range": [
        4678
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4726             # not __new__, not __init__, and not module.classname\n4727             assert f.cls\n4728             add(f.cls.name)\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4727,
      "line_range": [
        4727
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4733         # populate \"right_bracket_count\" field for every parameter\n4734         assert parameters, \"We should always have a self parameter. \" + repr(f)\n4735         assert isinstance(parameters[0].converter, self_converter)\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4734,
      "line_range": [
        4734
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4734         assert parameters, \"We should always have a self parameter. \" + repr(f)\n4735         assert isinstance(parameters[0].converter, self_converter)\n4736         # self is always positional-only.\n4737         assert parameters[0].is_positional_only()\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4735,
      "line_range": [
        4735,
        4736
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4736         # self is always positional-only.\n4737         assert parameters[0].is_positional_only()\n4738         parameters[0].right_bracket_count = 0\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4737,
      "line_range": [
        4737
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4743             else:\n4744                 assert positional_only\n4745             if positional_only:\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4744,
      "line_range": [
        4744
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4805                 continue\n4806             assert p.name\n4807 \n4808             is_self = isinstance(p.converter, self_converter)\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4806,
      "line_range": [
        4806,
        4807
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "4958         \"\"\"\n4959         assert not line\n4960 \n4961         if not self.function:\n",
      "filename": "cpython\\Tools\\clinic\\clinic.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 4959,
      "line_range": [
        4959,
        4960
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "137         line = line[1:].lstrip()\n138         assert line\n139 \n140         fields = line.split()\n",
      "filename": "cpython\\Tools\\clinic\\cpp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 138,
      "line_range": [
        138,
        139
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "31             if k.endswith('_pre') or k.endswith('_post'):\n32                 assert isinstance(v, function)\n33             elif isinstance(v, function):\n",
      "filename": "cpython\\Tools\\demo\\eiffel.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 32,
      "line_range": [
        32
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "120             def m2_pre(self, arg):\n121                 assert arg > 0\n122 \n",
      "filename": "cpython\\Tools\\demo\\eiffel.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 121,
      "line_range": [
        121
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "123             def m2_post(self, result, arg):\n124                 assert result > arg\n125 \n",
      "filename": "cpython\\Tools\\demo\\eiffel.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 124,
      "line_range": [
        124
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "131                 super(Sub, self).m2_post(Result, arg)\n132                 assert Result < 100\n133 \n",
      "filename": "cpython\\Tools\\demo\\eiffel.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 132,
      "line_range": [
        132
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "78                 # Let's pick a random color!\n79                 self.scr.attrset(curses.color_pair(random.randrange(1, 7)))\n80             self.scr.addch(y + 1, x + 1, self.char)\n",
      "filename": "cpython\\Tools\\demo\\life.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 79,
      "line_range": [
        79
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "119                         self.scr.attrset(curses.color_pair(\n120                             random.randrange(1, 7)))\n121                     self.scr.addch(j + 1, i + 1, self.char)\n",
      "filename": "cpython\\Tools\\demo\\life.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 120,
      "line_range": [
        120
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "139             for j in range(0, self.Y):\n140                 if random.random() > 0.5:\n141                     self.set(j, i)\n",
      "filename": "cpython\\Tools\\demo\\life.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 140,
      "line_range": [
        140
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "45         try:\n46             exec(request, {}, {})\n47         except:\n",
      "filename": "cpython\\Tools\\demo\\rpythond.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 46,
      "line_range": [
        46
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "375     for i in range(n):\n376         j = random.randint(0, n-1)\n377         array.swap(i, j)\n",
      "filename": "cpython\\Tools\\demo\\sortvisu.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 376,
      "line_range": [
        376
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "10 from xml.parsers import expat\n11 from xml.sax.saxutils import escape\n12 \n13 LEFT, CENTER, RIGHT = \"LEFT\", \"CENTER\", \"RIGHT\"\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using escape to parse untrusted XML data is known to be vulnerable to XML attacks. Replace escape with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 11,
      "line_range": [
        11,
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "66     def setcell(self, x, y, cell):\n67         assert x > 0 and y > 0\n68         assert isinstance(cell, BaseCell)\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 67,
      "line_range": [
        67
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "67         assert x > 0 and y > 0\n68         assert isinstance(cell, BaseCell)\n69         self.cells[x, y] = cell\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 68,
      "line_range": [
        68
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "101             y1, y2 = y2, y1\n102         assert x1+dx > 0 and y1+dy > 0\n103         new = {}\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 102,
      "line_range": [
        102
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "114     def insertrows(self, y, n):\n115         assert n > 0\n116         self.movecells(0, y, sys.maxsize, sys.maxsize, 0, n)\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 115,
      "line_range": [
        115
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "124     def insertcolumns(self, x, n):\n125         assert n > 0\n126         self.movecells(x, 0, sys.maxsize, sys.maxsize, n, 0)\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 125,
      "line_range": [
        125
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "172                 text, alignment = cell.format()\n173                 assert isinstance(text, str)\n174                 assert alignment in (LEFT, CENTER, RIGHT)\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 173,
      "line_range": [
        173
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "173                 assert isinstance(text, str)\n174                 assert alignment in (LEFT, CENTER, RIGHT)\n175             else:\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 174,
      "line_range": [
        174
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "318     def __init__(self, value, fmt=\"%s\", alignment=RIGHT):\n319         assert isinstance(value, (int, float, complex))\n320         assert alignment in (LEFT, CENTER, RIGHT)\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 319,
      "line_range": [
        319
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "319         assert isinstance(value, (int, float, complex))\n320         assert alignment in (LEFT, CENTER, RIGHT)\n321         self.value = value\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 320,
      "line_range": [
        320
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "356     def __init__(self, text, fmt=\"%s\", alignment=LEFT):\n357         assert isinstance(text, str)\n358         assert alignment in (LEFT, CENTER, RIGHT)\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 357,
      "line_range": [
        357
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "357         assert isinstance(text, str)\n358         assert alignment in (LEFT, CENTER, RIGHT)\n359         self.text = text\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 358,
      "line_range": [
        358
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "378     def __init__(self, formula, fmt=\"%s\", alignment=RIGHT):\n379         assert alignment in (LEFT, CENTER, RIGHT)\n380         self.formula = formula\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 379,
      "line_range": [
        379
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "391             try:\n392                 self.value = eval(self.translated, ns)\n393             except:\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 392,
      "line_range": [
        392
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "451     \"Translate a cell coordinate to a fancy cell name (e.g. (1, 1)->'A1').\"\n452     assert x > 0 # Column 0 has an empty name, so can't use that\n453     return colnum2name(x) + str(y)\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 452,
      "line_range": [
        452
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "459     for c in s:\n460         assert 'A' <= c <= 'Z'\n461         n = n*26 + ord(c) - ord('A') + 1\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 460,
      "line_range": [
        460
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "465     \"Translate a column number to name (e.g. 1->'A', etc.).\"\n466     assert n > 0\n467     s = \"\"\n",
      "filename": "cpython\\Tools\\demo\\spreadsheet.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 466,
      "line_range": [
        466
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "507                     dictoffset += size\n508                     assert dictoffset > 0\n509                     assert dictoffset % _sizeof_void_p() == 0\n",
      "filename": "cpython\\Tools\\gdb\\libpython.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 508,
      "line_range": [
        508
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "508                     assert dictoffset > 0\n509                     assert dictoffset % _sizeof_void_p() == 0\n510 \n",
      "filename": "cpython\\Tools\\gdb\\libpython.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 509,
      "line_range": [
        509
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "240     # unwrap quotes, safely\n241     return eval(s, {'__builtins__':{}}, {})\n242 \n",
      "filename": "cpython\\Tools\\i18n\\pygettext.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 241,
      "line_range": [
        241
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "67         with util.create_modules(name) as mapping:\n68             assert not os.path.exists(imp.cache_from_source(mapping[name]))\n69             sys.meta_path.append(importlib.machinery.PathFinder)\n",
      "filename": "cpython\\Tools\\importbench\\importbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 68,
      "line_range": [
        68
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "101     \"\"\"Source writing bytecode: small\"\"\"\n102     assert not sys.dont_write_bytecode\n103     name = '__importlib_test_benchmark__'\n",
      "filename": "cpython\\Tools\\importbench\\importbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 102,
      "line_range": [
        102
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "112         for result in bench(name, cleanup, repeat=repeat, seconds=seconds):\n113             assert not os.path.exists(imp.cache_from_source(mapping[name]))\n114             yield result\n",
      "filename": "cpython\\Tools\\importbench\\importbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 113,
      "line_range": [
        113
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "120         \"\"\"Source writing bytecode: {}\"\"\"\n121         assert not sys.dont_write_bytecode\n122         def cleanup():\n",
      "filename": "cpython\\Tools\\importbench\\importbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 121,
      "line_range": [
        121
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "143         py_compile.compile(mapping[name])\n144         assert os.path.exists(imp.cache_from_source(mapping[name]))\n145         yield from bench(name, lambda: sys.modules.pop(name), repeat=repeat,\n",
      "filename": "cpython\\Tools\\importbench\\importbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 144,
      "line_range": [
        144
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "205             sys.stdout.flush()\n206         assert not sys.dont_write_bytecode\n207         print(\"]\", \"best is\", format(max(results), ',d'))\n",
      "filename": "cpython\\Tools\\importbench\\importbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 206,
      "line_range": [
        206
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "46 \n47     assert len(files) == len(set(make_id(f[1]) for f in files)), \"Duplicate file IDs exist\"\n48 \n49     directories = defaultdict(set)\n",
      "filename": "cpython\\Tools\\msi\\csv_to_wxs.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 47,
      "line_range": [
        47,
        48
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "13             data = f.read()\n14             md5 = hashlib.md5()\n15             md5.update(data)\n",
      "filename": "cpython\\Tools\\msi\\generate_md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "178         else:\n179             assert val in self.exact_tokens, f\"{node.value} is not a known literal\"\n180             type = self.exact_tokens[val]\n",
      "filename": "cpython\\Tools\\peg_generator\\pegen\\c_generator.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 179,
      "line_range": [
        179
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "623         if is_loop:\n624             assert len(node.alts) == 1\n625         for alt in node.alts:\n",
      "filename": "cpython\\Tools\\peg_generator\\pegen\\c_generator.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 624,
      "line_range": [
        624
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "658             if is_gather:\n659                 assert len(self.local_variable_names) == 2\n660                 self.print(\n",
      "filename": "cpython\\Tools\\peg_generator\\pegen\\c_generator.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 659,
      "line_range": [
        659
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "81         head, tail = call.split(\"(\", 1)\n82         assert tail[-1] == \")\"\n83         tail = tail[:-1]\n",
      "filename": "cpython\\Tools\\peg_generator\\pegen\\python_generator.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 82,
      "line_range": [
        82
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "200         if is_loop:\n201             assert len(node.alts) == 1\n202         for alt in node.alts:\n",
      "filename": "cpython\\Tools\\peg_generator\\pegen\\python_generator.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 201,
      "line_range": [
        201
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "227                     if is_gather:\n228                         assert len(self.local_variable_names) == 2\n229                         action = (\n",
      "filename": "cpython\\Tools\\peg_generator\\pegen\\python_generator.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 228,
      "line_range": [
        228
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "96         data = {item: (dep - ready) for item, dep in data.items() if item not in ready}\n97     assert not data, \"A cyclic dependency exists amongst %r\" % data\n98 \n",
      "filename": "cpython\\Tools\\peg_generator\\pegen\\sccutils.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 97,
      "line_range": [
        97
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "111     # Basic input checks.\n112     assert start in scc, (start, scc)\n113     assert scc <= graph.keys(), scc - graph.keys()\n",
      "filename": "cpython\\Tools\\peg_generator\\pegen\\sccutils.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 112,
      "line_range": [
        112
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "112     assert start in scc, (start, scc)\n113     assert scc <= graph.keys(), scc - graph.keys()\n114 \n115     # Reduce the graph to nodes in the SCC.\n116     graph = {src: {dst for dst in dsts if dst in scc} for src, dsts in graph.items() if src in scc}\n",
      "filename": "cpython\\Tools\\peg_generator\\pegen\\sccutils.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 113,
      "line_range": [
        113,
        114,
        115
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "116     graph = {src: {dst for dst in dsts if dst in scc} for src, dsts in graph.items() if src in scc}\n117     assert start in graph\n118 \n119     # Recursive helper that yields cycles.\n120     def dfs(node: str, path: List[str]) -> Iterator[List[str]]:\n",
      "filename": "cpython\\Tools\\peg_generator\\pegen\\sccutils.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 117,
      "line_range": [
        117,
        118,
        119
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "34     ns: Dict[str, Any] = {}\n35     exec(out.getvalue(), ns)\n36     return ns[\"GeneratedParser\"]\n",
      "filename": "cpython\\Tools\\peg_generator\\pegen\\testutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 35,
      "line_range": [
        35
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "96     # context.\n97     assert not os.listdir(path)\n98     source = path / \"parse.c\"\n",
      "filename": "cpython\\Tools\\peg_generator\\pegen\\testutil.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 97,
      "line_range": [
        97
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "68             return\n69         assert 0 <= index <= len(self._tokens), (index, len(self._tokens))\n70         old_index = self._index\n",
      "filename": "cpython\\Tools\\peg_generator\\pegen\\tokenizer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 69,
      "line_range": [
        69
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "33     url = f\"https://pypi.org/pypi/{package_name}/json\"\n34     urlretrieve(url, os.path.join(\"data\", f\"{package_name}.json\"))\n35 \n",
      "filename": "cpython\\Tools\\peg_generator\\scripts\\download_pypi_packages.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 34,
      "line_range": [
        34
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "44     url = package_json[\"urls\"][source_index][\"url\"]\n45     urlretrieve(url, os.path.join(\"data\", \"pypi\", filename))\n46 \n",
      "filename": "cpython\\Tools\\peg_generator\\scripts\\download_pypi_packages.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 45,
      "line_range": [
        45
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "53             return full_path\n54     assert False  # This is to fix mypy, should never be reached\n55 \n",
      "filename": "cpython\\Tools\\peg_generator\\scripts\\test_pypi_packages.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 54,
      "line_range": [
        54
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "122         coords = list(self._canvas.coords(self._TAG))\n123         assert coords\n124         return coords[0]\n",
      "filename": "cpython\\Tools\\pynche\\StripViewer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 123,
      "line_range": [
        123
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "154         coords = list(self._canvas.coords(self._TAG))\n155         assert coords\n156         return coords[0] + self._ARROWWIDTH\n",
      "filename": "cpython\\Tools\\pynche\\StripViewer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 155,
      "line_range": [
        155
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "178         self.__numchips = numchips\n179         assert self.__axis in (0, 1, 2)\n180         self.__uwd = uwdvar\n",
      "filename": "cpython\\Tools\\pynche\\StripViewer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 179,
      "line_range": [
        179
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "234         coords = self.__canvas.coords(chipnum+1)\n235         assert coords\n236         x0, y0, x1, y1 = coords\n",
      "filename": "cpython\\Tools\\pynche\\StripViewer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 235,
      "line_range": [
        235
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "291     def update_yourself(self, red, green, blue):\n292         assert self.__generator\n293         i = 1\n",
      "filename": "cpython\\Tools\\pynche\\StripViewer.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 292,
      "line_range": [
        292
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "64                     fp = open(initfile, 'rb')\n65                     self.__optiondb = marshal.load(fp)\n66                     if not isinstance(self.__optiondb, dict):\n",
      "filename": "cpython\\Tools\\pynche\\Switchboard.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 65,
      "line_range": [
        65
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "71             end += 1\n72         assert end < real_end\n73         # join field, excluding separator and trailing ws\n74         end1 = end-1\n",
      "filename": "cpython\\Tools\\scripts\\abitype.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 72,
      "line_range": [
        72,
        73
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "15     for project, version in ensurepip._PROJECTS:\n16         data = json.loads(urllib.request.urlopen(\n17             \"https://pypi.org/pypi/{}/json\".format(project),\n18             cadefault=True,\n19         ).read().decode(\"utf8\"))\n",
      "filename": "cpython\\Tools\\scripts\\checkpip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 16,
      "line_range": [
        16,
        17,
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "257         changed = self.changed\n258         assert changed\n259         # Prevent calling this again.\n260         self.changed = []\n",
      "filename": "cpython\\Tools\\scripts\\cleanfuture.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 258,
      "line_range": [
        258,
        259
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "109         m = crack.match(line)\n110         assert m\n111         addr, rc, guts = m.groups() # guts is type name here\n",
      "filename": "cpython\\Tools\\scripts\\combinerefs.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 110,
      "line_range": [
        110
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "40 try:\n41     import pickle as pickle\n42 except ImportError:\n",
      "filename": "cpython\\Tools\\scripts\\db2pickle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "42 except ImportError:\n43     import pickle\n44 \n",
      "filename": "cpython\\Tools\\scripts\\db2pickle.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 43,
      "line_range": [
        43
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "7     total, d = None, {}\n8     with os.popen('du ' + ' '.join(sys.argv[1:])) as p:\n9         for line in p:\n",
      "filename": "cpython\\Tools\\scripts\\dutree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "11             while line[i] in '0123456789': i = i+1\n12             size = eval(line[:i])\n13             while line[i] in ' \\t': i = i+1\n",
      "filename": "cpython\\Tools\\scripts\\dutree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "206     print(\"-\"*70)\n207     assert list # if this fails, readwarnings() is broken\n208     try:\n",
      "filename": "cpython\\Tools\\scripts\\fixdiv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 207,
      "line_range": [
        207
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "222                 break\n223             assert startlineno <= endlineno is not None\n224             orphans = []\n",
      "filename": "cpython\\Tools\\scripts\\fixdiv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 223,
      "line_range": [
        223
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "249                             lastrow = row\n250                         assert rows\n251                         if len(rows) == 1:\n",
      "filename": "cpython\\Tools\\scripts\\fixdiv.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 250,
      "line_range": [
        250
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "42         bits >>= 32\n43     assert bits == 0\n44     out.write(f\"}};\\n\")\n",
      "filename": "cpython\\Tools\\scripts\\generate_opcode_h.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 43,
      "line_range": [
        43
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "53         code = fp.read()\n54     exec(code, opcode)\n55     opmap = opcode['opmap']\n",
      "filename": "cpython\\Tools\\scripts\\generate_opcode_h.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 54,
      "line_range": [
        54
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "31             if string:\n32                 string = eval(string)\n33                 string_to_tok[string] = value\n",
      "filename": "cpython\\Tools\\scripts\\generate_token.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 32,
      "line_range": [
        32
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "165     for string, value in string_to_tok.items():\n166         assert 1 <= len(string) <= 3\n167         name = tok_names[value]\n",
      "filename": "cpython\\Tools\\scripts\\generate_token.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 166,
      "line_range": [
        166
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "17     def subproc(cmd):\n18         from subprocess import Popen, PIPE, STDOUT\n19         proc = Popen(cmd, stdout=PIPE, stderr=STDOUT, shell=True)\n",
      "filename": "cpython\\Tools\\scripts\\get-remote-certificate.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with Popen module.",
      "line_number": 18,
      "line_range": [
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "18         from subprocess import Popen, PIPE, STDOUT\n19         proc = Popen(cmd, stdout=PIPE, stderr=STDOUT, shell=True)\n20         status = proc.wait()\n",
      "filename": "cpython\\Tools\\scripts\\get-remote-certificate.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 19,
      "line_range": [
        19
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "30         else:\n31             tn = tempfile.mktemp()\n32             with open(tn, \"wb\") as fp:\n",
      "filename": "cpython\\Tools\\scripts\\get-remote-certificate.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 31,
      "line_range": [
        31
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "34             try:\n35                 tn2 = (outfile or tempfile.mktemp())\n36                 status, output = subproc(r'openssl x509 -in \"%s\" -out \"%s\"' %\n",
      "filename": "cpython\\Tools\\scripts\\get-remote-certificate.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 35,
      "line_range": [
        35
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "48     if sys.platform.startswith(\"win\"):\n49         tfile = tempfile.mktemp()\n50         with open(tfile, \"w\") as fp:\n",
      "filename": "cpython\\Tools\\scripts\\get-remote-certificate.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 49,
      "line_range": [
        49
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "56 def printsumfp(fp, filename, out=sys.stdout):\n57     m = md5()\n58     try:\n",
      "filename": "cpython\\Tools\\scripts\\md5sum.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 57,
      "line_range": [
        57
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "44 \n45     with os.popen(NM % lib) as pipe:\n46         lines = pipe.readlines()\n",
      "filename": "cpython\\Tools\\scripts\\nm2def.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 45,
      "line_range": [
        45
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "20     \"\"\"Download the json file from the url and returns a decoded object.\"\"\"\n21     with urlopen(url) as f:\n22         data = f.read().decode('utf-8')\n",
      "filename": "cpython\\Tools\\scripts\\parse_html5_entities.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 21,
      "line_range": [
        21
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "6 import os.path\n7 import subprocess\n8 import sysconfig\n",
      "filename": "cpython\\Tools\\scripts\\patchcheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "50     try:\n51         return subprocess.check_output(cmd,\n52                                        stderr=subprocess.DEVNULL,\n53                                        cwd=SRCDIR)\n54     except subprocess.CalledProcessError:\n",
      "filename": "cpython\\Tools\\scripts\\patchcheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 51,
      "line_range": [
        51,
        52,
        53
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "64     try:\n65         subprocess.check_output(cmd,\n66                                 stderr=subprocess.DEVNULL,\n67                                 cwd=SRCDIR)\n68     except subprocess.CalledProcessError:\n",
      "filename": "cpython\\Tools\\scripts\\patchcheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 65,
      "line_range": [
        65,
        66,
        67
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "104         filenames = []\n105         with subprocess.Popen(cmd.split(),\n106                               stdout=subprocess.PIPE,\n107                               cwd=SRCDIR) as st:\n108             for line in st.stdout:\n",
      "filename": "cpython\\Tools\\scripts\\patchcheck.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 105,
      "line_range": [
        105,
        106,
        107
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "45 try:\n46     import pickle as pickle\n47 except ImportError:\n",
      "filename": "cpython\\Tools\\scripts\\pickle2db.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 46,
      "line_range": [
        46
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "47 except ImportError:\n48     import pickle\n49 \n",
      "filename": "cpython\\Tools\\scripts\\pickle2db.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 48,
      "line_range": [
        48
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "135         try:\n136             (key, val) = pickle.load(pfile)\n137         except EOFError:\n",
      "filename": "cpython\\Tools\\scripts\\pickle2db.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 136,
      "line_range": [
        136
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "493     if not args or args == ['-']:\n494         action = eval(action + '_filter')\n495         action(sys.stdin, sys.stdout, stepsize, tabsize, expandtabs)\n",
      "filename": "cpython\\Tools\\scripts\\pindent.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 494,
      "line_range": [
        494
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "496     else:\n497         action = eval(action + '_file')\n498         for filename in args:\n",
      "filename": "cpython\\Tools\\scripts\\pindent.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 497,
      "line_range": [
        497
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "254                     want = 0\n255             assert want >= 0\n256             have2want[have] = want\n",
      "filename": "cpython\\Tools\\scripts\\reindent.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 255,
      "line_range": [
        255
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "46     if sys.platform == 'win32':\n47         from subprocess import call\n48         sys.exit(call(args))\n",
      "filename": "cpython\\Tools\\scripts\\run_tests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with call module.",
      "line_number": 47,
      "line_range": [
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "47         from subprocess import call\n48         sys.exit(call(args))\n49     else:\n",
      "filename": "cpython\\Tools\\scripts\\run_tests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 48,
      "line_range": [
        48
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "49     else:\n50         os.execv(sys.executable, args)\n51 \n",
      "filename": "cpython\\Tools\\scripts\\run_tests.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 50,
      "line_range": [
        50
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "3 \n4 import subprocess\n5 import sys\n",
      "filename": "cpython\\Tools\\scripts\\smelly.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "15     print(\"+ %s\" % ' '.join(args))\n16     proc = subprocess.run(args, stdout=subprocess.PIPE, universal_newlines=True)\n17     if proc.returncode:\n",
      "filename": "cpython\\Tools\\scripts\\smelly.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 16,
      "line_range": [
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "50             if longlist:\n51                 sts = os.system('ls ' + longlist + ' ' + filename)\n52                 sts = os.waitstatus_to_exitcode(sts)\n",
      "filename": "cpython\\Tools\\scripts\\which.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 51,
      "line_range": [
        51
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "31                 codes.append((code, (libcode, name, num)))\n32     assert codes, f\"no codes found in {h_file}\"\n33     return codes\n",
      "filename": "cpython\\Tools\\ssl\\make_ssl_data.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 32,
      "line_range": [
        32
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "37 import string\n38 import subprocess\n39 import sys\n",
      "filename": "cpython\\Tools\\ssl\\multissltests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 38,
      "line_range": [
        38
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "250         log.debug(\"Call '{}'\".format(\" \".join(cmd)))\n251         return subprocess.check_call(cmd, env=env, **kwargs)\n252 \n",
      "filename": "cpython\\Tools\\ssl\\multissltests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 251,
      "line_range": [
        251
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "257             env[\"LD_LIBRARY_PATH\"] = self.lib_dir\n258         out = subprocess.check_output(cmd, env=env, **kwargs)\n259         return out.strip().decode(\"utf-8\")\n",
      "filename": "cpython\\Tools\\ssl\\multissltests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 258,
      "line_range": [
        258
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "270             try:\n271                 req = urlopen(url)\n272                 # KISS, read all, write all\n",
      "filename": "cpython\\Tools\\ssl\\multissltests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 271,
      "line_range": [
        271
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "466         log.info('Running ./configure')\n467         subprocess.check_call([\n468             './configure', '--config-cache', '--quiet',\n469             '--with-pydebug'\n470         ])\n",
      "filename": "cpython\\Tools\\ssl\\multissltests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 467,
      "line_range": [
        467,
        468,
        469
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "472     log.info('Running make')\n473     subprocess.check_call(['make', '--quiet'])\n474 \n",
      "filename": "cpython\\Tools\\ssl\\multissltests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 473,
      "line_range": [
        473
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "472     log.info('Running make')\n473     subprocess.check_call(['make', '--quiet'])\n474 \n",
      "filename": "cpython\\Tools\\ssl\\multissltests.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 473,
      "line_range": [
        473
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "870     import random\n871     r = random.Random(100)\n872     chars = list(map(chr, range(32, 128)))\n",
      "filename": "cpython\\Tools\\stringbench\\stringbench.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 871,
      "line_range": [
        871
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "411             with open(os.path.join(dir, mapname), 'rb') as f:\n412                 map = marshal.load(f)\n413             if not map:\n",
      "filename": "cpython\\Tools\\unicode\\gencodec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 412,
      "line_range": [
        412
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "39         row = line.split()\n40         loc = eval('0x' + row[0][2:])\n41         level = eval(row[0][0])\n",
      "filename": "cpython\\Tools\\unicode\\genmap_japanese.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 40,
      "line_range": [
        40
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "40         loc = eval('0x' + row[0][2:])\n41         level = eval(row[0][0])\n42         m = None\n",
      "filename": "cpython\\Tools\\unicode\\genmap_japanese.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "43         if len(row[1].split('+')) == 2: # single unicode\n44             uni = eval('0x' + row[1][2:])\n45             if level == 3:\n",
      "filename": "cpython\\Tools\\unicode\\genmap_japanese.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 44,
      "line_range": [
        44
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "59         else: # pair\n60             uniprefix = eval('0x' + row[1][2:6]) # body\n61             uni = eval('0x' + row[1][7:11]) # modifier\n",
      "filename": "cpython\\Tools\\unicode\\genmap_japanese.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 60,
      "line_range": [
        60
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "60             uniprefix = eval('0x' + row[1][2:6]) # body\n61             uni = eval('0x' + row[1][7:11]) # modifier\n62             if level != 3:\n",
      "filename": "cpython\\Tools\\unicode\\genmap_japanese.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 61,
      "line_range": [
        61
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "42     for uni, native in re_gb18030ass.findall(fo.read()):\n43         uni = eval('0x'+uni)\n44         native = [eval('0x'+u) for u in native.split()]\n",
      "filename": "cpython\\Tools\\unicode\\genmap_schinese.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 43,
      "line_range": [
        43
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "43         uni = eval('0x'+uni)\n44         native = [eval('0x'+u) for u in native.split()]\n45         if len(native) <= 2:\n",
      "filename": "cpython\\Tools\\unicode\\genmap_schinese.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 44,
      "line_range": [
        44
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "111         for i in range(1, 6):\n112             writer.update_decode_map(eval(\"GB18030EXTP%d_C1\" % i), eval(\"GB18030EXTP%d_C2\" % i))\n113 \n",
      "filename": "cpython\\Tools\\unicode\\genmap_schinese.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 112,
      "line_range": [
        112
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "111         for i in range(1, 6):\n112             writer.update_decode_map(eval(\"GB18030EXTP%d_C1\" % i), eval(\"GB18030EXTP%d_C2\" % i))\n113 \n",
      "filename": "cpython\\Tools\\unicode\\genmap_schinese.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 112,
      "line_range": [
        112
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "191 \n192         row = [eval(e) for e in line.split()]\n193         loc, uni = row[natcol], row[unicol]\n",
      "filename": "cpython\\Tools\\unicode\\genmap_support.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 192,
      "line_range": [
        192
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "28             buf, 2)\n29         assert ret == 1, \"invalid code page\"\n30         assert buf[1] == '\\x00'\n",
      "filename": "cpython\\Tools\\unicode\\genwincodec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 29,
      "line_range": [
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "29         assert ret == 1, \"invalid code page\"\n30         assert buf[1] == '\\x00'\n31         try:\n",
      "filename": "cpython\\Tools\\unicode\\genwincodec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 30,
      "line_range": [
        30
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "198                 prefix = i\n199                 assert prefix < 256\n200                 # content\n201                 decomp = [prefix + (len(decomp)<<8)] + [int(s, 16) for s in decomp]\n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 199,
      "line_range": [
        199,
        200
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "459                     title = title - char\n460                     assert (abs(upper) <= 2147483647 and\n461                             abs(lower) <= 2147483647 and\n462                             abs(title) <= 2147483647)\n463             else:\n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 460,
      "line_range": [
        460,
        461,
        462
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "656 \n657     assert short > 0\n658 \n659     print(short, \"short indexes in lexicon\")\n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 657,
      "line_range": [
        657,
        658
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "713 \n714     assert getsize(phrasebook) == 1\n715 \n716     #\n717     # unicode name hash table\n718 \n719     # extract names\n720     data = []\n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 714,
      "line_range": [
        714,
        715,
        716,
        717,
        718,
        719
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "814             # be unassigned in the old one\n815             assert old.table[i] is None\n816             continue\n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 815,
      "line_range": [
        815
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "830                         # new.table we are using it for aliases and named seq\n831                         assert value == ''\n832                     elif k == 2:\n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 831,
      "line_range": [
        831
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "837                         # We assume that all normalization changes are in 1:1 mappings\n838                         assert \" \" not in value\n839                         normalization_changes.append((i, value))\n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 838,
      "line_range": [
        838
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "841                         # we only support changes where the old value is a single digit\n842                         assert value in \"0123456789\"\n843                         decimal_changes[i] = int(value)\n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 842,
      "line_range": [
        842
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "849                             numeric_changes[i] = float(value)\n850                             assert numeric_changes[i] not in (0, -1)\n851                     elif k == 9:\n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 850,
      "line_range": [
        850
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "899         os.makedirs(DATA_DIR, exist_ok=True)\n900         urllib.request.urlretrieve(url, filename=local)\n901     if local.endswith('.txt'):\n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 900,
      "line_range": [
        900
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "1050                 pua_index += 1\n1051             assert pua_index - NAME_ALIASES_START == len(self.aliases)\n1052 \n1053             self.named_sequences = []\n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1051,
      "line_range": [
        1051,
        1052
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1057 \n1058             assert pua_index < NAMED_SEQUENCES_START\n1059             pua_index = NAMED_SEQUENCES_START\n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1058,
      "line_range": [
        1058
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1062                 # check that the structure defined in makeunicodename is OK\n1063                 assert 2 <= len(chars) <= 4, \"change the Py_UCS2 array size\"\n1064                 assert all(c <= 0xFFFF for c in chars), (\"use Py_UCS4 in \"\n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1063,
      "line_range": [
        1063
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1063                 assert 2 <= len(chars) <= 4, \"change the Py_UCS2 array size\"\n1064                 assert all(c <= 0xFFFF for c in chars), (\"use Py_UCS4 in \"\n1065                     \"the NamedSequence struct and in unicodedata_lookup\")\n1066                 self.named_sequences.append((name, chars))\n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1064,
      "line_range": [
        1064,
        1065
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1069                 pua_index += 1\n1070             assert pua_index - NAMED_SEQUENCES_START == len(self.named_sequences)\n1071 \n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1070,
      "line_range": [
        1070
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1112             for char in expand_range(s[0]):\n1113                 assert not (quickchecks[char]>>quickcheck_shift)&3\n1114                 quickchecks[char] |= quickcheck\n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1113,
      "line_range": [
        1113
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1355         for i in range(len(t)):\n1356             assert t[i] == t2[(t1[i >> shift] << shift) + (i & mask)]\n1357     return best\n",
      "filename": "cpython\\Tools\\unicode\\makeunicodedata.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1356,
      "line_range": [
        1356
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "127 del tables[0]\n128 assert name == \"A.1\"\n129 table = set(table.keys())\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 128,
      "line_range": [
        128
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "150 del tables[0]\n151 assert name == \"B.1\"\n152 table = sorted(table.keys())\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 151,
      "line_range": [
        151
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "166 del tables[0]\n167 assert name == \"B.2\"\n168 \n169 name, table_b3 = tables[0]\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 167,
      "line_range": [
        167,
        168
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "170 del tables[0]\n171 assert name == \"B.3\"\n172 \n173 # B.3 is mostly Python's .lower, except for a number\n174 # of special cases, e.g. considering canonical forms.\n175 \n176 b3_exceptions = {}\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 171,
      "line_range": [
        171,
        172,
        173,
        174,
        175
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "223 # B.3 should not add any additional special cases\n224 assert specials == {}\n225 \n226 print(\"\"\"\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 224,
      "line_range": [
        224,
        225
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "240 del tables[0]\n241 assert name == \"C.1.1\"\n242 assert table == {0x20:0x20}\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 241,
      "line_range": [
        241
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "241 assert name == \"C.1.1\"\n242 assert table == {0x20:0x20}\n243 \n244 print(\"\"\"\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 242,
      "line_range": [
        242,
        243
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "251 del tables[0]\n252 assert name == \"C.1.2\"\n253 \n254 # table = set(table.keys())\n255 # Zs = set(gen_category([\"Zs\"])) - {0x20}\n256 # assert Zs == table\n257 \n258 print(\"\"\"\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 252,
      "line_range": [
        252,
        253,
        254,
        255,
        256,
        257
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "268 del tables[0]\n269 assert name == \"C.2.1\"\n270 \n271 Cc = set(gen_category([\"Cc\"]))\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 269,
      "line_range": [
        269,
        270
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "273 table_c21 = set(table_c21.keys())\n274 assert Cc_ascii == table_c21\n275 \n276 print(\"\"\"\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 274,
      "line_range": [
        274,
        275
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "284 del tables[0]\n285 assert name == \"C.2.2\"\n286 \n287 Cc_nonascii = Cc - Cc_ascii\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 285,
      "line_range": [
        285,
        286
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "288 table_c22 = set(table_c22.keys())\n289 assert len(Cc_nonascii - table_c22) == 0\n290 \n291 specials = list(table_c22 - Cc_nonascii)\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 289,
      "line_range": [
        289,
        290
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "308 del tables[0]\n309 assert name == \"C.3\"\n310 \n311 Co = set(gen_category([\"Co\"]))\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 309,
      "line_range": [
        309,
        310
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "311 Co = set(gen_category([\"Co\"]))\n312 assert set(table.keys()) == Co\n313 \n314 print(\"\"\"\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 312,
      "line_range": [
        312,
        313
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "322 del tables[0]\n323 assert name == \"C.4\"\n324 \n325 nonchar = set(range(0xFDD0,0xFDF0))\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 323,
      "line_range": [
        323,
        324
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "328 table = set(table.keys())\n329 assert table == nonchar\n330 \n331 print(\"\"\"\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 329,
      "line_range": [
        329,
        330
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "341 del tables[0]\n342 assert name == \"C.5\"\n343 \n344 Cs = set(gen_category([\"Cs\"]))\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 342,
      "line_range": [
        342,
        343
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "344 Cs = set(gen_category([\"Cs\"]))\n345 assert set(table.keys()) == Cs\n346 \n347 print(\"\"\"\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 345,
      "line_range": [
        345,
        346
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "354 del tables[0]\n355 assert name == \"C.6\"\n356 \n357 table = sorted(table.keys())\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 355,
      "line_range": [
        355,
        356
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "367 del tables[0]\n368 assert name == \"C.7\"\n369 \n370 table = sorted(table.keys())\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 368,
      "line_range": [
        368,
        369
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "380 del tables[0]\n381 assert name == \"C.8\"\n382 \n383 table = sorted(table.keys())\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 381,
      "line_range": [
        381,
        382
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "393 del tables[0]\n394 assert name == \"C.9\"\n395 \n396 table = sorted(table.keys())\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 394,
      "line_range": [
        394,
        395
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "406 del tables[0]\n407 assert name == \"D.1\"\n408 \n409 RandAL = set(gen_bidirectional([\"R\",\"AL\"]))\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 407,
      "line_range": [
        407,
        408
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "409 RandAL = set(gen_bidirectional([\"R\",\"AL\"]))\n410 assert set(table.keys()) == RandAL\n411 \n412 print(\"\"\"\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 410,
      "line_range": [
        410,
        411
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "419 del tables[0]\n420 assert name == \"D.2\"\n421 \n422 L = set(gen_bidirectional([\"L\"]))\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 420,
      "line_range": [
        420,
        421
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "422 L = set(gen_bidirectional([\"L\"]))\n423 assert set(table.keys()) == L\n424 \n425 print(\"\"\"\n",
      "filename": "cpython\\Tools\\unicode\\mkstringprep.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 423,
      "line_range": [
        423,
        424
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "14 try:\n15     import subprocess\n16     del subprocess\n",
      "filename": "cpython\\setup.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "98 def run_command(cmd):\n99     status = os.system(cmd)\n100     return os.waitstatus_to_exitcode(status)\n",
      "filename": "cpython\\setup.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 99,
      "line_range": [
        99
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "186             os.unlink(tmpfile)\n187         except:\n188             pass\n",
      "filename": "cpython\\setup.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 187,
      "line_range": [
        187
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "331     else:\n332         assert False, \"Internal error: Path not found in std_dirs or paths\"\n333 \n",
      "filename": "cpython\\setup.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 332,
      "line_range": [
        332
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "628                           ' failed: %s' % (ext.name, why), level=3)\n629             assert not self.inplace\n630             basename, tail = os.path.splitext(ext_filename)\n",
      "filename": "cpython\\setup.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 629,
      "line_range": [
        629
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    }
  ]
}